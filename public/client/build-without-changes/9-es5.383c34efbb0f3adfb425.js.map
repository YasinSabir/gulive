{"version":3,"sources":["webpack:///src/common/admin/analytics/components/analytics-host/analytics-host.component.html","webpack:///src/common/admin/analytics/components/analytics-host/analytics-host.component.ts","webpack:///src/common/admin/analytics/components/analytics-header/analytics-header.component.html","webpack:///src/common/admin/analytics/components/analytics-header/analytics-header.component.ts","webpack:///src/app/admin/analytics/click-analytics-host/click-analytics-host.component.html","webpack:///src/app/admin/analytics/click-analytics-host/click-analytics-host.component.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/monthly-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/browser-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/country-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/default-analytics.component.html","webpack:///src/app/admin/analytics/analytics-routing.module.ts","webpack:///src/common/admin/analytics/components/default-analytics/default-analytics.component.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/weekly-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/utils/timestamp-to-day-name.ts","webpack:///src/app/admin/analytics/analytics.module.ts"],"names":["AnalyticsHostComponent","settings","channels","this","get","filter","channel","condition","AnalyticsHeaderComponent","ClickAnalyticsHostComponent","http","loading$","ReplaySubject","linkStats$","next","pipe","finalize","subscribe","response","headerData","mainData","transformMonthlyData","monthlyData","config","selector","type","LINE","labels","tooltip","data","current","forEach","monthData","key","push","pageViews","prevDay","previous","transformBrowserData","browserData","PIE","map","browser","sessions","legend","options","showLabel","donut","transformCountryData","countriesData","country","DefaultAnalyticsComponent","AnalyticsRoutingRoutingModule","routes","path","component","children","redirectTo","chartHeight","charts$","generateCharts","weeklyPageViews","weeklyData","weekData","timestamp","locale","Date","toLocaleDateString","weekday","date","monthlyPageViews","browsers","countries","forChild","AnalyticsModule"],"mappings":"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","file":"x","sourcesContent":["<header *ngIf=\"channels && channels.length\">\r\n    <h1 trans>Analytics</h1>\r\n    <ul class=\"analytics-nav\">\r\n        <li class=\"analytics-nav-item\" *ngFor=\"let navItem of channels\">\r\n            <a mat-button routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" [routerLink]=\"[navItem.route]\" trans>{{navItem.name}}</a>\r\n        </li>\r\n    </ul>\r\n</header>\r\n\r\n<router-outlet></router-outlet>\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {AnalyticsChannel} from '@common/core/config/app-config';\r\n\r\n@Component({\r\n    selector: 'analytics-host',\r\n    templateUrl: './analytics-host.component.html',\r\n    styleUrls: ['./analytics-host.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AnalyticsHostComponent implements OnInit {\r\n    public channels: AnalyticsChannel[] = [];\r\n\r\n    constructor(\r\n        public settings: Settings,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.channels = (this.settings.get('vebto.admin.analytics.channels', []) as AnalyticsChannel[])\r\n            .filter(channel => {\r\n                return !channel.condition || this.settings.get(channel.condition);\r\n            });\r\n    }\r\n}\r\n","<div class=\"stat\" *ngFor=\"let item of data\">\r\n    <mat-icon [svgIcon]=\"item.icon\"></mat-icon>\r\n    <div class=\"details\">\r\n        <div class=\"name\" trans>{{item.name}}</div>\r\n        <div class=\"count\" *ngIf=\"item.type === 'number'\">{{item.value | number}}</div>\r\n        <div class=\"count\" *ngIf=\"item.type === 'fileSize'\">{{item.value | formattedFileSize}}</div>\r\n    </div>\r\n</div>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {AnalyticsHeaderData} from '../../types/analytics-response';\r\n\r\n@Component({\r\n    selector: 'analytics-header',\r\n    templateUrl: './analytics-header.component.html',\r\n    styleUrls: ['./analytics-header.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AnalyticsHeaderComponent {\r\n    @Input() data: AnalyticsHeaderData[];\r\n}\r\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n<analytics-header [data]=\"headerData\"></analytics-header>\r\n\r\n<click-charts [reports]=\"linkStats$ | async\"></click-charts>\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {AnalyticsHeaderData, AnalyticsResponse} from '@common/admin/analytics/types/analytics-response';\nimport {ReplaySubject} from 'rxjs';\nimport {HttpCacheClient} from '@common/core/http/http-cache-client';\nimport {finalize} from 'rxjs/operators';\nimport {LinkStats} from '../../../shared/link/link.service';\n\n@Component({\n    selector: 'click-analytics-host',\n    templateUrl: './click-analytics-host.component.html',\n    styleUrls: ['./click-analytics-host.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClickAnalyticsHostComponent implements OnInit {\n    public headerData: AnalyticsHeaderData[];\n    public loading$ = new ReplaySubject<boolean>(1);\n    public linkStats$ = new ReplaySubject<LinkStats>(1);\n\n    constructor(\n        private http: HttpCacheClient\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.http.get<AnalyticsResponse<LinkStats>>('admin/analytics/stats', {channel: 'clicks'})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.headerData = response.headerData;\n                this.linkStats$.next(response.mainData);\n            });\n    }\n}\n","import { MonthlyPageViews } from '../../../types/site-analytics-data';\r\nimport {ChartType, LineChartConfig} from '@common/shared/charts/base-chart';\r\n\r\nexport function transformMonthlyData(monthlyData: MonthlyPageViews): LineChartConfig {\r\n    const config = {\r\n        selector: '.monthly-chart',\r\n        type: ChartType.LINE,\r\n        labels: [],\r\n        tooltip: 'Pageviews',\r\n        data: [[], []]\r\n    } as LineChartConfig;\r\n\r\n    monthlyData && monthlyData.current.forEach((monthData, key) => {\r\n        // month numbers are returned 0 based from backend\r\n        config.labels.push('' + (key + 1));\r\n\r\n        // current month data\r\n        config.data[0].push(monthData.pageViews);\r\n\r\n        // previous month data\r\n        const prevDay = monthlyData.previous[key];\r\n        config.data[1].push(prevDay ? prevDay.pageViews : 0);\r\n    });\r\n\r\n    return config;\r\n}\r\n","import { BrowserData } from '../../../types/site-analytics-data';\r\nimport {ChartType, PieChartConfig} from '@common/shared/charts/base-chart';\r\n\r\nexport function transformBrowserData(browserData: BrowserData[] = []): PieChartConfig {\r\n    return {\r\n        type: ChartType.PIE,\r\n        tooltip: 'Number of sessions',\r\n        labels: browserData.map(data => data.browser),\r\n        data: browserData.map(data => data.sessions),\r\n        legend: false,\r\n        options: {\r\n            showLabel: true,\r\n            donut: true,\r\n        }\r\n    };\r\n}\r\n","import { CountryData } from '../../../types/site-analytics-data';\r\nimport {ChartType, PieChartConfig} from '@common/shared/charts/base-chart';\r\n\r\nexport function transformCountryData(countriesData: CountryData[] = []): PieChartConfig {\r\n    return {\r\n        selector: '.countries-chart',\r\n        type: ChartType.PIE,\r\n        tooltip: 'Number of sessions',\r\n        labels: countriesData.map(data => data.country),\r\n        data: countriesData.map(data => data.sessions),\r\n        options: {\r\n            showLabel: true,\r\n            donut: true,\r\n        }\r\n    };\r\n}\r\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\n<analytics-header [data]=\"headerData\"></analytics-header>\n\n<ng-container *ngIf=\"charts$ | async as charts\">\n    <div class=\"content\">\n        <div class=\"chart-row\">\n            <div class=\"chart-wrapper\">\n                <chart [chartConfig]=\"charts.weeklyPageViews\" [height]=\"chartHeight\">\n                    <div class=\"chart-header\">\n                        <div class=\"title\" trans>This Week vs Last Week</div>\n                        <div class=\"subtitle\" trans>By page views</div>\n                    </div>\n                    <div class=\"chart-legend\">\n                        <div class=\"legend-item\" trans>This week</div>\n                        <div class=\"legend-item\" trans>Last week</div>\n                    </div>\n                </chart>\n            </div>\n\n            <div class=\"chart-wrapper pie-wrapper\">\n                <chart [chartConfig]=\"charts.browsers\" [height]=\"380\">\n                    <div class=\"chart-header\">\n                        <div class=\"title\" trans>Top Browsers</div>\n                        <div class=\"subtitle\" trans>By sessions</div>\n                    </div>\n                </chart>\n            </div>\n        </div>\n\n        <div class=\"chart-row\">\n            <div class=\"chart-wrapper\">\n                <chart [chartConfig]=\"charts.monthlyPageViews\" [height]=\"chartHeight\">\n                    <div class=\"chart-header\">\n                        <div class=\"title\" trans>This Month vs Last Month</div>\n                        <div class=\"subtitle\" trans>By page views</div>\n                    </div>\n                    <div class=\"chart-legend\">\n                        <div class=\"legend-item\" trans>This month</div>\n                        <div class=\"legend-item\" trans>Last month</div>\n                    </div>\n                </chart>\n            </div>\n\n            <div class=\"chart-wrapper pie-wrapper\">\n                <chart [chartConfig]=\"charts.countries\" [height]=\"380\">\n                    <div class=\"chart-header\">\n                        <div class=\"title\" trans>Top Countries</div>\n                        <div class=\"subtitle\" trans>By sessions</div>\n                    </div>\n                </chart>\n            </div>\n        </div>\n    </div>\n</ng-container>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {AnalyticsHostComponent} from '@common/admin/analytics/components/analytics-host/analytics-host.component';\r\nimport {ClickAnalyticsHostComponent} from './click-analytics-host/click-analytics-host.component';\r\nimport {DefaultAnalyticsComponent} from '@common/admin/analytics/components/default-analytics/default-analytics.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AnalyticsHostComponent,\r\n        children: [\r\n            {path: '', redirectTo: 'links'},\r\n            {\r\n                path: 'links',\r\n                component: ClickAnalyticsHostComponent,\r\n            },\r\n            {\r\n                path: 'google',\r\n                component: DefaultAnalyticsComponent,\r\n            },\r\n        ],\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AnalyticsRoutingRoutingModule { }\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {SiteAnalyticsData} from '@common/admin/analytics/types/site-analytics-data';\nimport {transformWeeklyData} from '@common/admin/analytics/components/default-analytics/transformers/weekly-data-transformer';\nimport {transformMonthlyData} from '@common/admin/analytics/components/default-analytics/transformers/monthly-data-transformer';\nimport {transformBrowserData} from '@common/admin/analytics/components/default-analytics/transformers/browser-data-transformer';\nimport {transformCountryData} from '@common/admin/analytics/components/default-analytics/transformers/country-data-transformer';\nimport {ChartConfigs} from '@common/admin/analytics/types/chart-configs';\nimport {ReplaySubject} from 'rxjs';\nimport {AnalyticsHeaderData, AnalyticsResponse} from '@common/admin/analytics/types/analytics-response';\nimport {HttpCacheClient} from '@common/core/http/http-cache-client';\nimport {finalize} from 'rxjs/operators';\n\n@Component({\n    selector: 'default-analytics',\n    templateUrl: './default-analytics.component.html',\n    styleUrls: ['./default-analytics.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefaultAnalyticsComponent implements OnInit {\n    protected channel = 'default';\n    public readonly chartHeight = 400;\n    public headerData: AnalyticsHeaderData[];\n    public loading$ = new ReplaySubject<boolean>(1);\n    public charts$ = new ReplaySubject<Partial<ChartConfigs>>(1);\n\n    constructor(\n        private http: HttpCacheClient\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.http.get<AnalyticsResponse>('admin/analytics/stats', {channel: this.channel})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.headerData = response.headerData;\n                this.charts$.next(this.generateCharts(response.mainData));\n            });\n    }\n\n    private generateCharts(data: SiteAnalyticsData) {\n        return {\n            weeklyPageViews: transformWeeklyData(data.weeklyPageViews),\n            monthlyPageViews: transformMonthlyData(data.monthlyPageViews),\n            browsers: transformBrowserData(data.browsers),\n            countries: transformCountryData(data.countries)\n        };\n    }\n}\n","import { WeeklyPageViews } from '../../../types/site-analytics-data';\r\nimport { timestampToDayName } from '../utils/timestamp-to-day-name';\r\nimport {ChartType, LineChartConfig} from '@common/shared/charts/base-chart';\r\n\r\nexport function transformWeeklyData(weeklyData: WeeklyPageViews): LineChartConfig {\r\n    const config = {\r\n        type: ChartType.LINE,\r\n        labels: [],\r\n        tooltip: 'Pageviews',\r\n        data: [[], []]\r\n    } as LineChartConfig;\r\n\r\n    weeklyData && weeklyData.current.forEach((weekData, key) => {\r\n        config.labels.push(timestampToDayName(weekData.date));\r\n\r\n        // current week data\r\n        config.data[0].push(weekData.pageViews);\r\n\r\n        // previous week data\r\n        config.data[1].push(weeklyData.previous[key].pageViews);\r\n    });\r\n\r\n    return config;\r\n}\r\n","export function timestampToDayName(timestamp: number, locale: string = 'en-US') {\r\n    const date = new Date(timestamp * 1000);\r\n    return date.toLocaleDateString(locale, {weekday: 'short'});\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ChartsModule} from '@common/shared/charts/charts.module';\r\nimport {AnalyticsHostComponent} from '@common/admin/analytics/components/analytics-host/analytics-host.component';\r\nimport {DefaultAnalyticsComponent} from '@common/admin/analytics/components/default-analytics/default-analytics.component';\r\nimport {AnalyticsHeaderComponent} from '@common/admin/analytics/components/analytics-header/analytics-header.component';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport {AnalyticsRoutingRoutingModule} from './analytics-routing.module';\r\nimport {ClickAnalyticsHostComponent} from './click-analytics-host/click-analytics-host.component';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {ClickChartsModule} from '../../dashboard/click-charts/click-charts.module';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\n@NgModule({\r\n    imports: [\r\n        AnalyticsRoutingRoutingModule,\r\n        CommonModule,\r\n        ChartsModule,\r\n        TranslationsModule,\r\n        FormatPipesModule,\r\n        ClickChartsModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatProgressBarModule,\r\n    ],\r\n    declarations: [\r\n        AnalyticsHostComponent,\r\n        AnalyticsHeaderComponent,\r\n        DefaultAnalyticsComponent,\r\n\r\n        // app\r\n        ClickAnalyticsHostComponent,\r\n    ]\r\n})\r\nexport class AnalyticsModule {\r\n}\r\n"]}