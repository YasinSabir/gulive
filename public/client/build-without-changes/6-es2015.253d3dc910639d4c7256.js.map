{"version":3,"sources":["node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","src/app/dashboard/click-charts/click-charts.component.ts","src/app/dashboard/click-charts/click-charts.component.html","node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","src/common/core/ui/confirm-modal/confirm-modal.component.ts","src/common/core/ui/confirm-modal/confirm-modal.component.html","src/common/shared/form-controls/slug-control/slug-control.component.ts","src/common/shared/form-controls/slug-control/slug-control.component.html","node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","src/common/core/pages/manager/custom-pages-index/custom-pages-index.component.html","src/common/core/pages/manager/custom-pages-index/custom-pages-index.component.ts","src/common/text-editor/editors/tinymce-text-editor.service.ts","src/common/text-editor/validation/text-editor-image-validator.ts","src/common/text-editor/text-editor.component.html","src/common/text-editor/text-editor.component.ts","src/common/core/pages/manager/crupdate-page/crupdate-page.component.html","src/common/core/pages/manager/crupdate-page/crupdate-page.component.ts","src/common/core/pages/manager/custom-pages-manager-routing.module.ts","src/app/dashboard/link-group/link-group-show/link-group-show.component.ts","src/app/dashboard/link-group/link-group-show/link-group-show.component.html","node_modules/rxjs/_esm2015/internal/observable/interval.js","node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","src/common/uploads/formatted-file-size.pipe.ts","node_modules/url-regex/node_modules/ip-regex/index.js","node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","src/common/shared/form-controls/slug-control/bind-slug-to.ts","src/common/shared/billing/full-plan-name/full-plan-name.component.ts","src/app/dashboard/link/link-show/link-show-resolver.service.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","node_modules/chartist-plugin-tooltips-updated/dist/chartist-plugin-tooltip.js","src/app/dashboard/link/link-show/link-show.component.ts","src/app/dashboard/link/link-show/link-show.component.html","src/common/core/ui/between-date-input/between-date-input.module.ts","src/common/core/ui/select-user-input/select-user-input.module.ts","src/common/shared/data-table/data-table-intl.service.ts","src/app/admin/data-table-inputs/data-table-inputs.module.ts","src/common/shared/data-table/data-table.module.ts","src/app/dashboard/click-charts/click-charts.module.ts","src/common/core/ui/no-results-message/no-results-message.component.ts","src/common/core/ui/no-results-message/no-results-message.component.html","node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","src/common/shared/charts/charts.module.ts","src/common/core/ui/chip-input/chip-input.component.ts","src/common/core/ui/chip-input/chip-input.component.html","src/app/shared/link/link-usage.service.ts","src/common/core/ui/no-results-message/no-results-message.module.ts","src/common/admin/settings/settings-resolve.service.ts","src/common/admin/settings/settings-state.service.ts","node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","src/common/core/ui/space-input/space-input.module.ts","src/common/admin/settings/recaptcha/recaptcha-actions.token.ts","src/common/admin/settings/settings.module.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js","src/common/admin/common-admin-config.ts","src/common/core/ui/image-zoom/image-zoom.module.ts","src/common/admin/admin.component.ts","src/common/admin/admin.component.html","src/common/admin/artisan.service.ts","src/common/admin/settings/settings-panel.component.ts","src/app/admin/settings/link-settings/link-settings.component.html","src/app/admin/settings/link-settings/link-settings.component.ts","src/app/admin/app-admin-routes.ts","src/common/admin/settings/settings.component.html","src/common/admin/settings/settings.component.ts","src/common/admin/settings/general/general-settings.component.html","src/common/admin/settings/general/general-settings.component.ts","src/common/admin/settings/authentication/authentication-settings.component.html","src/common/admin/settings/authentication/authentication-settings.component.ts","src/common/admin/settings/cache/cache-settings.component.html","src/common/admin/settings/cache/cache-settings.component.ts","src/common/admin/settings/analytics/analytics-settings.component.html","src/common/admin/settings/analytics/analytics-settings.component.ts","src/common/admin/settings/localization/localization-settings.component.html","src/common/admin/settings/localization/localization-settings.component.ts","src/common/admin/localizations/localizations-resolve.service.ts","src/common/admin/settings/mail/mail-settings.component.html","src/common/admin/settings/mail/mail-settings.component.ts","src/common/admin/settings/logging/logging-settings.component.html","src/common/admin/settings/logging/logging-settings.component.ts","src/common/admin/settings/queue/queue-settings.component.html","src/common/admin/settings/queue/queue-settings.component.ts","src/common/admin/settings/billing/billing-settings.component.html","src/common/admin/settings/billing/billing-settings.component.ts","src/common/core/ui/space-input/space-input.component.html","src/common/core/ui/space-input/space-input.component.ts","src/common/admin/settings/uploading/storage-forms/ftp-form/ftp-form.component.ts","src/common/admin/settings/uploading/storage-forms/ftp-form/ftp-form.component.html","src/common/admin/settings/uploading/storage-forms/dropbox-form/dropbox-form.component.ts","src/common/admin/settings/uploading/storage-forms/dropbox-form/dropbox-form.component.html","src/common/admin/settings/uploading/storage-forms/rackspace-form/rackspace-form.component.ts","src/common/admin/settings/uploading/storage-forms/rackspace-form/rackspace-form.component.html","src/common/admin/settings/uploading/storage-forms/s3-form/s3-form.component.ts","src/common/admin/settings/uploading/storage-forms/s3-form/s3-form.component.html","src/common/admin/settings/uploading/storage-forms/digitalocean-form/digitalocean-form.component.ts","src/common/admin/settings/uploading/storage-forms/digitalocean-form/digitalocean-form.component.html","src/common/admin/settings/uploading/storage-forms/backblaze-form/backblaze-form.component.ts","src/common/admin/settings/uploading/storage-forms/backblaze-form/backblaze-form.component.html","src/common/admin/settings/uploading/uploading-settings.component.html","src/common/admin/settings/uploading/uploading-settings.component.ts","src/common/core/utils/flatten-array.ts","src/common/admin/settings/recaptcha/recaptcha-settings.component.html","src/common/admin/settings/recaptcha/recaptcha-settings.component.ts","src/common/uploads/directives/upload-button.directive.ts","node_modules/rxjs/_esm2015/internal/operators/throttle.js","node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","src/common/uploads/upload-progress-bar/upload-progress-bar.component.ts","src/common/uploads/upload-progress-bar/upload-progress-bar.component.html","src/common/shared/form-controls/upload-image-control/upload-image-control.component.html","src/common/shared/form-controls/upload-image-control/upload-image-control.component.ts","src/common/core/utils/SelectionModel.ts","src/common/admin/roles/role.service.ts","src/common/admin/users/select-roles-modal/select-roles-modal.component.html","src/common/admin/users/select-roles-modal/select-roles-modal.component.ts","src/common/admin/users/role-manager/role-manager.component.html","src/common/admin/users/role-manager/role-manager.component.ts","src/common/admin/permissions/select-permissions-modal/select-permissions-modal.component.html","src/common/admin/permissions/select-permissions-modal/select-permissions-modal.component.ts","src/common/core/utils/group-by.ts","src/common/admin/permissions/permission-manager/permission-manager.component.html","src/common/admin/permissions/permission-manager/permission-manager.component.ts","src/common/admin/users/crupdate-user-modal/crupdate-user-modal.component.html","src/common/admin/users/crupdate-user-modal/crupdate-user-modal.component.ts","src/common/admin/users/user-index-filters.ts","src/common/admin/users/user-index.component.html","src/common/admin/users/user-index.component.ts","src/common/core/types/models/Role.ts","src/common/admin/roles/crupdate-role-modal/crupdate-role-modal.component.html","src/common/admin/roles/crupdate-role-modal/crupdate-role-modal.component.ts","src/common/auth/find-user-modal/find-user-modal.component.html","src/common/auth/find-user-modal/find-user-modal.component.ts","src/common/admin/roles/role-index.component.html","src/common/admin/roles/role-index.component.ts","src/common/admin/localizations/crupdate-localization-modal/crupdate-localization-modal.component.html","src/common/admin/localizations/crupdate-localization-modal/crupdate-localization-modal.component.ts","src/common/admin/localizations/new-line-modal/new-line-modal.component.ts","src/common/admin/localizations/new-line-modal/new-line-modal.component.html","src/common/admin/localizations/localization-index.component.html","src/common/admin/localizations/localization-index.component.ts","src/common/admin/mail-templates/mail-template-preview/mail-template-preview.component.ts","src/common/admin/mail-templates/mail-template-preview/mail-template-preview.component.html","src/common/core/types/models/MailTemplate.ts","src/common/admin/mail-templates/mail-template-index.component.html","src/common/admin/mail-templates/mail-template-index.component.ts","src/common/admin/mail-templates/mail-templates-resolve.service.ts","src/common/admin/file-entry-index/file-entry-index-filters.ts","src/common/admin/file-entry-index/file-entry-index.component.html","src/common/admin/file-entry-index/file-entry-index.component.ts","src/common/core/ui/image-zoom/image-zoom-overlay/image-zoom-overlay.component.ts","src/common/core/ui/image-zoom/image-zoom-overlay/image-zoom-overlay.component.html","src/common/core/ui/image-zoom/image-zoom.component.ts","src/common/core/ui/image-zoom/image-zoom.component.html","src/common/admin/ads-page/ads-page.component.html","src/common/admin/ads-page/ads-page.component.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","src/common/admin/billing/plans/crupdate-plan-modal/crupdate-plan-modal.component.html","src/common/admin/billing/plans/crupdate-plan-modal/crupdate-plan-modal.component.ts","src/common/admin/billing/plans/plan-index/plan-index-filters.ts","src/common/admin/billing/plans/plan-index/plan-index.component.html","src/common/admin/billing/plans/plan-index/plan-index.component.ts","src/common/admin/billing/subscriptions/crupdate-subscription-modal/crupdate-subscription-modal.component.html","src/common/admin/billing/subscriptions/crupdate-subscription-modal/crupdate-subscription-modal.component.ts","src/common/admin/billing/subscriptions/subscription-index/subscription-index-filters.ts","src/common/admin/billing/subscriptions/subscription-index/subscription-index.component.html","src/common/admin/billing/subscriptions/subscription-index/subscription-index.component.ts","src/common/admin/settings/gdpr-settings/gdpr-settings.component.html","src/common/admin/settings/gdpr-settings/gdpr-settings.component.ts","src/common/admin/base-admin-routing.module.ts","src/common/auth/find-user-modal/find-user-modal.module.ts","src/common/uploads/uploads.module.ts","src/common/shared/form-controls/upload-image-control/upload-image-control.module.ts","src/common/admin/base-admin.module.ts","src/common/core/ui/confirm-modal/confirm-modal.module.ts","src/app/admin/app-admin.module.ts","src/common/shared/charts/chartist/chartist-line.ts","src/common/shared/charts/chartist/chartist-pie.ts","src/common/shared/charts/chartist/chartist-bar.ts","src/common/shared/charts/chart/chart.component.ts","src/common/shared/charts/chart/chart.component.html","node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","src/common/core/ui/select-user-input/select-user-input/select-user-input.component.ts","src/common/core/ui/select-user-input/select-user-input/select-user-input.component.html","src/common/core/ui/between-date-input/between-input/between-input.component.ts","src/common/core/ui/between-date-input/between-input/between-input.component.html","src/app/admin/data-table-inputs/app-data-table-inputs/app-data-table-inputs.component.ts","src/common/shared/data-table/filter-panel/filter-panel.component.html","src/common/shared/data-table/filter-panel/filter-panel.component.ts","src/common/core/ui/overlay-panel/positions/left-position.ts","src/common/shared/data-table/data-table.component.ts","src/common/shared/data-table/data-table.component.html","src/app/dashboard/link/types.ts","src/common/core/ui/color-picker/color-picker-input/color-picker-input.module.ts","src/common/shared/billing/guards/billing-enabled-guard.service.ts","src/common/custom-domain/custom-domain.service.ts","src/common/custom-domain/crupdate-custom-domain-modal/crupdate-custom-domain-modal.component.html","src/common/custom-domain/crupdate-custom-domain-modal/crupdate-custom-domain-modal.component.ts","src/common/custom-domain/custom-domain-index/custom-domain-index.component.html","src/common/custom-domain/custom-domain-index/custom-domain-index.component.ts","src/common/shared/form-controls/slug-control/slug-control.module.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","src/app/dashboard/link-group/crupdate-link-group-modal/crupdate-link-group-modal.component.ts","src/app/dashboard/link-group/crupdate-link-group-modal/crupdate-link-group-modal.component.html","src/app/shared/link/link.form.ts","src/common/core/ui/datetime-input/datetime-input.component.ts","src/common/core/ui/datetime-input/datetime-input.component.html","src/app/dashboard/link/link-options-form/link-options-form.component.html","src/app/dashboard/link/link-options-form/link-options-form.component.ts","src/app/dashboard/link/link-type-menu/link-type-menu.component.html","src/app/dashboard/link/link-type-menu/link-type-menu.component.ts","src/app/dashboard/link/crupdate-link-modal/crupdate-link-modal.component.html","src/app/dashboard/link/crupdate-link-modal/crupdate-link-modal.component.ts","src/app/dashboard/link-group/attach-link-modal/attach-link-modal.component.html","src/app/dashboard/link-group/attach-link-modal/attach-link-modal.component.ts","src/app/dashboard/link/link-index/link-index-filters.ts","src/app/dashboard/link/link-index/link-index.component.html","src/app/dashboard/link/link-index/link-index.component.ts","src/app/dashboard/dashboard-host/link-usage-info/link-usage-info.component.html","src/app/dashboard/dashboard-host/link-usage-info/link-usage-info.component.ts","src/app/dashboard/dashboard-host/upgrade-panel/upgrade-panel.component.html","src/app/dashboard/dashboard-host/upgrade-panel/upgrade-panel.component.ts","src/app/dashboard/dashboard-host/dashboard-host.component.ts","src/app/dashboard/dashboard-host/dashboard-host.component.html","src/app/shared/link/link-reports-resolver.service.ts","src/app/dashboard/dashboard-home/dashboard-home.component.ts","src/app/dashboard/dashboard-home/dashboard-home.component.html","src/app/dashboard/dashboard-routing.module.ts","src/common/custom-domain/custom-domain.module.ts","src/common/core/ui/datetime-input/datetime-input.module.ts","src/common/core/ui/info-popover/info-popover.module.ts","src/app/dashboard/dashboard.module.ts","src/common/core/ui/chip-input/chip-input.module.ts","src/common/core/ui/overlay-panel/positions/right-position.ts","src/common/shared/data-table/data/paginated-data-table-source.ts","src/common/core/utils/array-to-object.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","src/common/shared/billing/plans.service.ts","src/common/text-editor/text-editor.module.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","src/common/shared/billing/full-plan-name/full-plan-name.module.ts","src/common/core/ui/format-pipes/formatted-date.pipe.ts","src/common/core/pages/manager/custom-page-config.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/button-toggle.js","src/common/core/ui/format-pipes/format-pipes.module.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","src/app/dashboard/link-overlay/link-overlay.service.ts","src/app/dashboard/link-overlay/crupdate-link-overlay-modal/crupdate-link-overlay-modal.component.html","src/app/dashboard/link-overlay/crupdate-link-overlay-modal/crupdate-link-overlay-modal.component.ts","src/app/dashboard/link-overlay/link-overlay-index/link-overlay-index.component.html","src/app/dashboard/link-overlay/link-overlay-index/link-overlay-index.component.ts","src/common/core/pages/manager/custom-pages-manager.module.ts","node_modules/url-regex/index.js","src/common/shared/paginator.service.ts","src/common/shared/billing/subscriptions.service.ts","node_modules/chartist/dist/chartist.js","src/common/core/ui/info-popover/info-popover.component.ts","src/common/core/ui/info-popover/info-popover.component.html","node_modules/tlds/index.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","src/common/shared/charts/base-chart.ts","src/app/dashboard/pixels/tracking-pixel.service.ts","src/app/dashboard/pixels/tracking-pixel-types.ts","src/app/dashboard/pixels/crupdate-tracking-pixel-modal/crupdate-tracking-pixel-modal.component.html","src/app/dashboard/pixels/crupdate-tracking-pixel-modal/crupdate-tracking-pixel-modal.component.ts","src/app/dashboard/pixels/tracking-pixel-index/tracking-pixel-index.component.html","src/app/dashboard/pixels/tracking-pixel-index/tracking-pixel-index.component.ts","src/app/dashboard/link-group/link-group-index/link-group-index.component.ts","src/app/dashboard/link-group/link-group-index/link-group-index.component.html"],"names":["_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ctx_r202","justify","headerText","CdkTextColumn_td_2_Template","data_r204","$implicit","ctx_r203","dataAccessor","name","mixinHasStickyInput","base","args","super","this","_sticky","_hasStickyChanged","v","prevValue","hasStickyChanged","CdkCellDef","template","ɵfac","t","ɵdir","type","selectors","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","arguments","_stickyEnd","_name","cssClassFriendlyName","replace","ɵCdkColumnDef_BaseFactory","contentQueries","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","provide","useExisting","BaseCdkCell","columnDef","elementRef","nativeElement","classList","add","CdkHeaderCell","hostAttrs","CdkFooterCell","CdkCell","BaseRowDef","_differs","changes","_columnsDiffer","columns","currentValue","find","create","diff","column","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef","ngOnChanges","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef","CdkRowDef","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkHeaderRow","ɵcmp","decls","vars","consts","directives","encapsulation","CdkFooterRow","CdkRow","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_isBrowser","rows","stickyDirections","row","nodeType","ELEMENT_NODE","_removeStickyStyle","i","children","length","stickyStartStates","stickyEndStates","hasStickyColumns","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","_addStickyStyle","rowsToStick","stickyStates","position","reverse","stickyHeight","rowIndex","j","getBoundingClientRect","height","tableElement","tfoot","querySelector","element","dir","style","zIndex","_getCalculatedZIndex","remove","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","push","width","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_onDestroy","Subject","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","BehaviorSubject","start","end","Number","MAX_VALUE","setAttribute","nodeName","_trackByFn","fn","console","warn","JSON","stringify","_dataSource","dataSource","_switchDataSource","_rowOutlet","_forceRenderDataRows","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","data","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","clear","_headerRowOutlet","_footerRowOutlet","next","complete","disconnect","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","item","view","get","move","_updateRowIndexContext","forEachIdentityChange","context","updateStickyColumnStyles","headerRowDef","footerRowDef","delete","rowDef","headerRows","_getRenderedRows","thead","display","map","def","_stickyStyler","clearStickyPositioning","stickRows","forEach","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","Array","from","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","renderRow","cache","_getRowDefs","cachedRenderRows","shift","mergeQueryListAndSet","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","reduce","unsubscribe","dataStream","connect","isObservable","isArray","of","undefined","pipe","takeUntil","subscribe","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnDefs","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","rowDefs","renderIndex","outlet","index","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","section","createElement","appendChild","stickyCheckReducer","d","value","isBrowser","change","viewQuery","exportAs","ngContentSelectors","queryList","toArray","concat","TEXT_COLUMN_OPTIONS","CdkTextColumn","_table","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","slice","CdkTableModule","ɵmod","ɵinj","factory","MatTextColumn_th_1_Template","ctx_r205","MatTextColumn_td_2_Template","data_r207","ctx_r206","MatTable","ɵMatTable_BaseFactory","styles","MatCellDef","ɵMatCellDef_BaseFactory","MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatFooterCellDef","ɵMatFooterCellDef_BaseFactory","MatColumnDef","ɵMatColumnDef_BaseFactory","MatHeaderCell","MatFooterCell","MatCell","MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatFooterRowDef","ɵMatFooterRowDef_BaseFactory","MatRowDef","ɵMatRowDef_BaseFactory","MatHeaderRow","ɵMatHeaderRow_BaseFactory","MatFooterRow","ɵMatFooterRow_BaseFactory","MatRow","ɵMatRow_BaseFactory","MatTextColumn","ɵMatTextColumn_BaseFactory","MatTableModule","imports","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","Subscription","EMPTY","sortingDataAccessor","sortHeaderId","numberValue","sortData","sort","active","a","b","valueA","valueB","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","indexOf","_updateChangeSubscription","_sort","_paginator","paginator","sortChange","merge","initialized","pageChange","page","filteredData","combineLatest","_filterData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","Promise","resolve","then","lastPageIndex","Math","ceil","newPageIndex","min","ClickChartsComponent","linkApi","linkGroup","loader","theme","settings","i18n","transformedReports$","loading$","range","reports","updateCharts","initGoogleWorldMap","valueChanges","getUpdateDataRequest","response","drawGoogleChart","selectedTheme$","googleChart","link","group","reportsOnly","getCurrentUserReports","browsers","transformData","PIE","platforms","devices","clicks","LINE","translateLabel","labels","label","legend","tooltip","loadAsset","google","window","charts","load","packages","mapsApiKey","setOnLoadCallback","locations","location","unshift","visualization","arrayToDataTable","options","colorAxis","colors","backgroundColor","is_dark","datalessRegionColor","GeoChart","iframe","draw","MatAutocomplete_ng_template_0_Template","ctx_r200","_classList","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteBase","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","autoActiveFirstOption","MatAutocomplete","defaults","_activeOptionChanges","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","split","className","_setVisibilityClasses","_keyManager","withWrap","emit","_setVisibility","scrollTop","panel","event","optionGroups","disableRipple","panelWidth","outputs","changeDetection","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_formField","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","onSelectionChange","onStable","asObservable","_scrollStrategy","runOutsideAngular","addEventListener","rootNode","getRootNode","_isInsideShadowRoot","ShadowRoot","_positionStrategy","_setStrategyPositions","updatePosition","removeEventListener","_destroyPanel","_attachOverlay","_floatLabel","_resetLabel","_overlayRef","hasAttached","detach","_closingActionsSubscription","detectChanges","tabOut","_getOutsideClickStream","detachments","activeItem","clickTarget","composedPath","target","formField","contains","overlayElement","_setTriggerValue","isDisabled","disabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","activeItemIndex","labelCount","_setScrollTop","newScrollPosition","_getScrollTop","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","selected","deselect","overlayRef","setOrigin","_getConnectedElement","updateSize","_getPanelWidth","_portal","_getOverlayConfig","keydownEvents","altKey","stopPropagation","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPosition","originX","originY","overlayX","overlayY","abovePosition","panelClass","withPositions","connectedTo","getConnectedOverlayOrigin","_getHostWidth","setActiveItem","readOnly","hostVars","hostBindings","_handleFocus","$event","_handleInput","_handleKeydown","autocompleteDisabled","toString","MatAutocompleteModule","providers","ConfirmModalComponent","dialogRef","close","title","body","bodyBold","ok","cancel","confirm","SlugControlComponent","slug$","editing$","slugControl","baseUri","getBaseUrl","setValue","propagateChange","prefix","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","checked","MatSlideToggleBase","_MatSlideToggleMixinBase","_focusMonitor","tabIndex","_ngZone","_animationMode","_","_uniqueId","_required","_checked","labelPosition","ariaLabel","ariaLabelledby","toggleChange","dragChange","parseInt","monitor","focusOrigin","_inputElement","stopMonitoring","_emitChangeEvent","focusVia","_thumbEl","_thumbBarEl","color","required","_onChangeEvent","_onInputClick","_onLabelTextChange","_r51","_r55","inputId","textContent","_MatSlideToggleRequiredValidatorModule","MatSlideToggleModule","CustomPagesIndexComponent","pages","modal","currentUser","router","config","uri","dataPaginator","matSort","staticParams","userId","filterByUserId","show","afterClosed","confirmed","deleteSelectedPages","ids","getSelectedItems","reset","slug","url","TinymceTextEditor","zone","lazyLoader","breakpoints","makeBootstrapPromise","editorIsReady","tinymceInstance","setContent","undoManager","waitForEditor","hasUndo","hasRedo","queryCommandState","run","execCommand","params","getContent","contents","transact","selection","setCursorLocation","nodeChanged","setTimeout","collapse","insertContents","bootstrapPromise","loadTinymce","initTinymce","textAreaEl","plugins","branding","browser_spellcheck","max_height","maxHeight","min_height","minHeight","autoresize_on_init","paste_as_text","elementpath","statusbar","menubar","convert_urls","forced_root_block","element_format","body_class","content_style","content_css","default_link_target","link_assume_external_targets","target_list","link_title","image_dimensions","image_description","setup","editor","on","onChange","shortcuts","onCtrlEnter","init_instance_callback","bootstrapPromiseResolve","isMobile$","toolbar","extended_valid_elements","getAssetUrl","editorEl","parentElement","offsetHeight","tinymce","init","e","TextEditorImageValidator","DEFAULT_MAX_SIZE_MB","validations","maxSize","convertToBytes","types","TextEditorComponent","uploadQueue","renderer","el","overlayPanel","imageValidator","sourceAreaControl","activeEditor","showAdvancedControls","basic","onFileUpload","bootTextEditor","destroyEditor","command","origin","BeColorPickerModule","open","components","valueChanged","debounceTime","contentAreaContainer","setStyle","sourceTextArea","getContents","source_view","multiple","fileList","Image","validator","httpParams","diskPrefix","inlineUploadPrefix","image","files","insertImage","fileEntry","setContents","attrs","href","text","setConfig","visualTextArea","CrupdatePageComponent","route","toast","fb","updating$","form","errors$","getPage","update","getPayload","finalize","navigate","backRoute","relativeTo","err","messages","delay","patchValue","textEditor","payload","content","customPagesManagerRoutes","path","component","permissions","LinkGroupShowComponent","reportsPanelState$","data$","api","links","groupId","beforeClosed","newGroup","indicatorRotate","dispatch","subscriber","counter","period","schedule","extendStyles","dest","hasOwnProperty","toggleNativeDragInteractions","enable","userSelect","touchAction","webkitUserDrag","webkitTapHighlightColor","msUserSelect","webkitUserSelect","MozUserSelect","parseCssTimeUnitsToMs","multiplier","parseCssPropertyValue","computedStyle","getPropertyValue","part","passiveEventListenerOptions","passive","activeEventListenerOptions","_config","_dragDropRegistry","_passiveTransform","x","y","_activeTransform","_moveEvents","_pointerMoveSubscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","handle","_initializeDragSequence","_rootElement","_pointerMove","_hasStartedDragging","pointerPosition","_getPointerPositionOnPage","abs","_pickupPositionOnPage","dragStartThreshold","Date","now","_dragStartTime","_getDragStartDelay","_endDragSequence","_dropContainer","isDragging","_startDragSequence","_previewRect","_preview","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_updatePointerDirectionDelta","_updateActiveDropContainer","activeTransform","_applyRootElementTransform","SVGElement","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","withRootElement","registerDragItem","newValue","_toggleNativeDragInteractions","_placeholder","getPlaceholderElement","getRootElement","handles","_previewTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","_initialTransform","boundaryElement","_containInsideBoundaryOnResize","removeNode","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","transform","container","_pointerPositionAtLastDirectionChange","_previewRef","destroy","_placeholderRef","stopDragging","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","_cleanupDragArtifacts","_cleanupCachedDimensions","isTouchEvent","_lastTouchEventTime","parent","preview","_createPreviewElement","placeholder","_createPlaceholderElement","anchor","createComment","insertBefore","replaceChild","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","_initialContainer","_initialIndex","getItemIndex","referenceElement","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","draggable","pointerMove","pointerUp","scroll","startWith","_scrollPosition","getViewportScrollPosition","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","startDragging","isPointerOverContainer","_isOverContainer","previousContainer","drop","newContainer","_getSiblingContainerFromPosition","exit","enter","_startScrollingIfNecessary","_sortItem","getTransform","previewConfig","previewClass","matchElementSize","deepCloneNode","pointerEvents","margin","placeholderRect","duration","getComputedStyle","transitionedProperties","property","prop","propertyIndex","rawDurations","rawDelays","handler","propertyName","clearTimeout","timeout","placeholderConfig","placeholderTemplate","elementRect","handleElement","referenceRect","point","targetTouches","pageX","pageY","touches","changedTouches","constrainedPoint","constrainPosition","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewRect","minY","maxY","clamp","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","setFreeDragPosition","touch","mouse","round","node","clone","cloneNode","descendantsWithId","querySelectorAll","descendantCanvases","removeAttribute","cloneCanvases","correspondingCloneContext","getContext","drawImage","max","parentNode","removeChild","wrapper","sourceRect","moveItemInArray","array","fromIndex","toIndex","clamp$1","to","sortingDisabled","autoScrollDisabled","enterPredicate","sorted","_isDragging","_itemPositions","_parentPositions","_previousSwap","drag","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_cachedShadowRoot","_startScrollInterval","scheduler","isNumeric","Observable","animationFrame","_scrollNode","incrementVerticalScroll","incrementHorizontalScroll","withScrollableParents","registerDropContainer","removeDropContainer","_initialScrollSnap","msScrollSnapType","scrollSnapType","_cacheItems","sibling","_startReceiving","_listenToScrollEvents","pointerX","pointerY","newIndex","_draggables","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","splice","_cacheItemPositions","_reset","items","_withDropContainer","orientation","elements","_scrollableElements","findIndex","currentItem","size","pointerDelta","isPointerNearClientRect","_clientRect","siblings","isHorizontal","siblingAtNewPosition","clientRect","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","isDraggedItem","offset","elementToOffset","adjustClientRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","computedVertical","getVerticalScrollDirection","computedHorizontal","getHorizontalScrollDirection","scrollHeight","clientHeight","scrollLeft","scrollWidth","clientWidth","getViewportSize","scrollPosition","getMutableClientRect","elementToMeasure","getVisibleElement","_stopReceiving","immediateSibling","floor","_cacheParentPositions","scrolledParent","newTop","newLeft","topDifference","leftDifference","_sortFromLastPointerPosition","isInsideClientRect","_canReceive","elementFromPoint","_getShadowRoot","activeSiblings","_updateAfterScroll","isReceiving","rect","xThreshold","yThreshold","predicate","amount","scrollBy","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_preventDefaultWhileDragging","startsWith","upEvent","_clearGlobalListeners","instance","ɵprov","token","DEFAULT_CONFIG","DragDrop","CDK_DRAG_PARENT","CdkDragHandle","parentDrag","_stateChanges","_parentDrag","CdkDragPlaceholder","templateRef","CdkDragPreview","_matchSize","CDK_DRAG_CONFIG","CDK_DROP_LIST","CdkDrag","dropContainer","dragDrop","_destroyed","observer","subscription","_dragRef","movedEvent","createDrag","_assignDefaults","_dropListRef","addItem","_syncInputs","_handleEvents","getFreeDragPosition","take","_updateRootElement","tap","childHandleElements","withHandles","switchMap","handleInstance","dragRef","disableHandle","enableHandle","freeDragPosition","rootSelectorChange","positionChange","firstChange","removeItem","rootElementSelector","getClosestMatchingAncestor","boundary","ref","withBoundaryElement","_getBoundaryElement","withPlaceholderTemplate","withPreviewTemplate","withDirection","draggingDisabled","selector","currentElement","matches","msMatchesSelector","CdkDropListGroup","_items","_uniqueIdCounter","CdkDropList","_group","_scrollDispatcher","_unsortedItems","createDropList","_setupInputSyncSubscription","_dropLists","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","_syncItemsWithRef","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","list","withOrientation","listAutoScrollDisabled","listOrientation","withItems","getSortedItems","useValue","DragDropModule","FormattedFileSizePipe","bytes","precision","isNaN","String","isFinite","includeBoundaries","v4","v6seg","v6","ip","exact","RegExp","module","exports","nextId","CdkAccordion","_openCloseAllActions","_multi","_openCloseAll","expanded","nextId$1","CdkAccordionItem","accordion","_expansionDispatcher","_openCloseAllSubscription","destroyed","expandedChange","_expanded","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","notify","CdkAccordionModule","MatExpansionPanel_ng_template_5_Template","a0","a1","collapsedHeight","expandedHeight","MatExpansionPanelHeader_span_4_Template","ctx_r104","_getExpandedState","_c5","_c6","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","expansionHeaderHeight","optional","bodyExpansion","visibility","MatExpansionPanelContent","_template","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","distinctUntilChanged","fromState","toState","hideToggle","_togglePosition","togglePosition","displayMode","_lazyContent","ngOnDestroy","_body","focusedElement","bodyElement","_hasSpacing","animation","MatExpansionPanelActionRow","MatExpansionPanelHeader","_parentChangeSubscription","_animationsDisabled","accordionHideToggleChange","_containsFocus","_handleHeaderFocus","toggle","_toggle","_handleHeaderKeydown","_animationStarted","_keydown","_getPanelId","_isExpanded","_getTogglePosition","_showToggle","MatExpansionPanelTitle","MatAccordion","_ownHeaders","_headers","headers","header","notifyOnChanges","manager","setFirstItemActive","setLastItemActive","updateActiveItem","ɵMatAccordion_BaseFactory","MatExpansionModule","bindSlugTo","control","dirty","FullPlanNameComponent","plan","LinkShowResolverService","http","linkId","MatChipBase","_MatChipMixinBase","MatChipAvatar","MatChipTrailingIcon","MatChip","platform","globalRippleOptions","animationMode","_hasFocus","chipListSelectable","_chipListMultiple","_selected","_selectable","_removable","_onFocus","_onBlur","selectionChange","removed","_addHostClassName","_chipRippleTarget","document","_chipRipple","setupTriggerEvents","rippleConfig","coercedValue","_dispatchSelectionChange","_value","selectable","hasAttribute","tagName","chip","_removeTriggerEvents","_markForCheck","isUserInput","removable","toggleSelected","MatChipRemove","avatar","trailingIcon","removeIcon","_handleClick","_blur","ariaSelected","_parentChip","parentChip","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","MatChipListChange","MatChipList","controlType","_lastDestroyedChipIndex","_uid","_tabIndex","_userTabIndex","_multiple","_compareWith","o1","o2","ariaOrientation","valueChange","valueAccessor","_selectionModel","empty","_syncChipsState","_initializeSelection","writeValue","_chipInput","stateChanges","focused","_hasFocusedChip","chips","withVerticalOrientation","withHorizontalOrientation","_allowFocusEscape","_resetChips","_updateTabIndex","_updateFocusForDestroyedChips","updateErrorState","_dropSubscriptions","inputElement","_ariaDescribedby","join","_setSelectionByValue","_originatesFromChip","_focusInput","_isInputEmpty","newChipIndex","_clearSelection","_selectValue","_sortValues","correspondingChip","selectViaInteraction","select","fallbackValue","valueToEmit","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","_isValidIndex","chipBlurChanges","chipRemoveChanges","errorState","compareWith","errorStateMatcher","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_chipList","registerInput","_emitChipEnd","addOnBlur","_isSeparatorKey","input","separators","_focus","_onInput","invalid","chipList","ɵ0","MatChipsModule","root","Chartist","currency","currencyFormatCallback","tooltipOffset","anchorToPoint","appendToBody","class","pointClass","hasClass","getAttribute","offsetParent","elem","extend","chart","tooltipSelector","Bar","Pie","donut","donutSolid","$toolTip","$chart","$toolTipIsShown","$tooltipOffsetParent","offsetWidth","callback","setPosition","offsetX","offsetY","x2","y2","box","baseVal","pageYOffset","pageXOffset","offsetBox","allOffsetLeft","scrollX","allOffsetTop","scrollY","hide","regex","$point","tooltipText","seriesName","meta","hasMeta","transformTooltipTextFnc","tooltipFnc","metaIsHTML","txt","innerHTML","nextSibling","innerText","LinkShowComponent","BetweenDateInputModule","SelectUserInputModule","DataTableIntlService","itemsPerPageLabel","nextPageLabel","previousPageLabel","getRangeLabel","DataTableInputsModule","DataTableModule","useClass","ClickChartsModule","NoResultsMessageComponent","horizontal","MatSortHeader_div_3_Template","_r87","_disableViewStateAnimation","ctx_r85","_getArrowViewState","_getArrowDirectionState","MatSortBase","_MatSortMixinBase","MatSort","sortables","_disableClear","sortable","getNextSortDirection","sortDirectionCycle","disableClear","sortOrder","nextDirectionIndex","_markInitialized","ɵMatSort_BaseFactory","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","MatSortHeaderIntl","sortButtonLabel","MAT_SORT_HEADER_INTL_PROVIDER","parentIntl","MatSortHeaderBase","_MatSortHeaderMixinBase","MatSortHeader","_intl","changeDetectorRef","_columnDef","_showIndicatorHint","_arrowDirection","_rerenderSubscription","_isSorted","_updateArrowDirection","_viewState","_setAnimationTransitionState","_setIndicatorHintVisible","register","deregister","visible","_isDisabled","viewState","_getAriaSortAttribute","_renderArrow","MatSortModule","ChartsModule","ChipInputComponent","formControl","items$","suggestedValues$","suggestFn","bindToSearchControl","propagate","matAutocomplete","isOpen","duplicate","inputEl","query","addFromChipInput","addFromAutocomplete","LinkUsageService","usage$","usage","total","used","NoResultsMessageModule","SettingsResolve","toPromise","SettingsState","initial","server","client","diffSettingObjects","changed","changedSettings","TextFieldModule","MAT_INPUT_VALUE_ACCESSOR","MatInputModule","SpaceInputModule","RECAPTCHA_ACTIONS","SettingsModule","description","MatCalendarBody_tr_0_Template","ctx_r211","_cellPadding","numCols","MatCalendarBody_tr_1_td_1_Template","ctx_r215","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r220","item_r217","_cellClicked","colIndex_r218","rowIndex_r214","ctx_r216","_cellWidth","enabled","_isActiveCell","cssClasses","selectedValue","todayValue","displayValue","MatCalendarBody_tr_1_Template","row_r213","ctx_r212","MatMonthView_th_3_Template","day_r223","long","narrow","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","_r229","activeDate","_dateSelected","_userSelected","ctx_r225","dateFilter","maxDate","minDate","dateClass","MatCalendar_mat_year_view_3_Template","_r233","_monthSelectedInYearView","_goToDateInView","ctx_r226","MatCalendar_mat_multi_year_view_4_Template","_r237","_yearSelectedInMultiYearView","ctx_r227","MatDatepickerToggle__svg_svg_2_Template","createMissingDateImplError","provider","MatDatepickerIntl","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","MatCalendarCell","MatCalendarBody","activeCell","cellAspectRatio","selectedValueChange","columnChanges","colIndex","cellNumber","MatMonthView","_dateFormats","_dateAdapter","selectedChange","_userSelection","activeDateChange","_activeDate","today","oldActiveDate","validDate","_getValidDateOrNull","deserialize","clampDate","_hasSameMonthAndYear","_init","_selectedDate","_getDateInCurrentMonth","_minDate","_maxDate","localeChanges","date","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","_isRtl","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","compareDate","_focusActiveCell","_todayDate","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","weekdays","_weekdays","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","format","dateA11yLabel","cellClasses","d1","d2","isDateInstance","isValid","_handleCalendarBodyKeydown","MatMultiYearView","yearSelected","isSameMultiYearView","_selectedYear","_todayYear","minYearOfPage","getActiveOffset","_years","year","_createCellForYear","month","yearsPerPage","_yearSelected","yearName","getYearName","_shouldEnableYear","_getActiveCell","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","MatYearView","monthSelected","_selectedMonth","_getMonthInCurrentYear","normalizedDate","_monthSelected","_todayMonth","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","activeYear","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","MatCalendarHeader","calendar","currentView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","formatYearRange","_isSameView","currentPeriodClicked","previousClicked","nextClicked","periodButtonLabel","periodButtonText","previousEnabled","prevButtonLabel","nextEnabled","nextButtonLabel","MatCalendar","_moveFocusOnNextTick","startView","_intlChanges","_startAt","_clampedActiveDate","_currentView","_calendarHeaderPortal","headerComponent","startAt","focusActiveCell","_getCurrentViewComponent","monthView","yearView","multiYearView","ngAfterContentInit","sameDate","normalizedYear","normalizedMonth","matDatepickerAnimations","transformPanel","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MatDatepickerContentBase","_MatDatepickerContentMixinBase","MatDatepickerContent","_animationState","_animationDone","_calendar","datepicker","touchUi","_selectYear","_selectMonth","_dateFilter","calendarHeaderComponent","MatDatepicker","_dialog","_touchUi","openedStream","closedStream","_opened","_validSelected","_focusedElementBeforeOpen","_inputSubscription","_disabledChange","_selectedChanged","_datepickerInput","_color","_getThemePalette","_destroyPopup","oldValue","_valueChange","_openAsDialog","_openAsPopup","_popupComponentRef","_popupRef","_startExitAnimation","_dialogRef","completeClose","viewContainerRef","hasBackdrop","disableClose","minWidth","maxWidth","autoFocus","restoreFocus","componentInstance","portal","_createPopup","overlayConfig","_createPopupPositionStrategy","backdropClass","backdropClick","withTransformOriginOn","withViewportMargin","withLockedPosition","MAT_DATEPICKER_VALUE_ACCESSOR","MAT_DATEPICKER_VALIDATORS","MatDatepickerInputEvent","targetElement","MatDatepickerInput","dateChange","dateInput","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","_minValidator","controlValue","_maxValidator","_filterValidator","_validator","compose","_datepicker","_registerInput","oldDate","_formatValue","_min","_max","blur","c","lastValueWasValid","parse","_onKeydown","toIso8601","matDatepicker","matDatepickerFilter","MatDatepickerToggleIcon","MatDatepickerToggle","defaultTabIndex","parsedTabIndex","_watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","_customIcon","_button","_open","MatDatepickerModule","COMMON_ADMIN_CONFIG","admin","appearance","navigationRoutes","menus","availableRoutes","ImageZoomModule","AdminComponent","leftColumnIsHidden","menu","generateMenu","events","icon","permission","getCustomSidebarItems","action","activeExact","condition","user","hasPermission","toggleLeftSidebar","ArtisanService","post","SettingsPanelComponent","artisan","customHomepage","valueLists","cd","getModified","save","clearErrors","updateInitial","errResponse","scrollInvalidInputIntoView","firstKey","getElementById","scrollIntoView","behavior","block","inline","LinkSettingsComponent","customDomains$","domains","defaultDomain","saveSettings","APP_ADMIN_ROUTES","APP_SETTING_ROUTES","SettingsComponent","activePanel$","firstChild","routeConfig","setAll","GeneralSettingsComponent","menuItemCategories$","cssThemes","menuItemCategories","themes","getComponents","l","AuthenticationSettingsComponent","CacheSettingsComponent","call","AnalyticsSettingsComponent","certificateFile","certificate","LocalizationSettingsComponent","selects","timezones","localizations","defaultDateFormats","initialDateFormat","includes","updateDateFormat","LocalizationsResolve","all","MailSettingsComponent","LoggingSettingsComponent","QueueSettingsComponent","BillingSettingsComponent","acceptedCards","getJson","SpaceInputComponent","inputContainer","spaceUnits","unit","model","fromBytes","emitEvent","pretty","FtpFormComponent","DropboxFormComponent","RackspaceFormComponent","S3FormComponent","DigitaloceanFormComponent","BackblazeFormComponent","UploadingSettingsComponent","allowedExtensions","blockedExtensions","serverMaxUploadSize$","getServerMaxUploadSize","setJson","uploads_disk_driver","public_disk_driver","every","flattenArray","arrays","apply","RecaptchaSettingsComponent","recaptchaActions","actions","UploadButtonDirective","filesSelected","defaultThrottleConfig","leading","trailing","ThrottleTimeOperator","Subscriber","destination","_hasTrailingValue","_trailingValue","throttled","dispatchNext","arg","clearThrottle","UploadProgressBarComponent","hidden","totalProgress","lift","progress","count$","pending","UploadImageControlComponent","uploadsApi","fileDeleted","buttonText","uploadInputConfig","src$","uploadConfig","defaultUploadConfig","paths","deleteForever","uploadImage","SelectionModel","initialValues","p","RoleService","httpClient","getWithCache","roleId","put","emails","userIds","selectionModel","SelectRolesModalComponent","rolesService","allRoles$","initialRoles","fetchAllRoles","getRoles","pagination","RoleManagerComponent","users","roleApi","roles$","readonly","roles","setRoles","r","SelectPermissionsModalComponent","allPermissions$","initialPermissions","fetchAllPermissions","getSelectedPermissions","mergeRestrictions","rv","allPermissions","modelPermission","getValue","restrictions","restriction","modelRestriction","PermissionManagerComponent","permissions$","setPermissions","showSelectPermissionsModal","CrupdateUserModalComponent","auth","email","password","first_name","last_name","available_space","request","resendEmailConfirmation","USER_INDEX_FILTERS","UserIndexComponent","userService","filters","selectedRows","general","Default","deleteSelectedUsers","Role","CrupdateRoleModalComponent","roleService","default","guests","resetState","createNew","FindUserModalComponent","searchFormControl","users$","searchUsers","catchError","getAll","RoleIndexComponent","selectedRole$","delayInit","refreshRoles","refreshRoleUsers","selectRole","reload","role_id","addUsers","deleteRole","removeUsersFromSelectedRole","removeUsers","hasValue","CrupdateLocalizationModalComponent","lists","languages$","language","languages","localization","updateLocalization","createNewLocalization","NewLineModalComponent","line","LocalizationIndexComponent","localizationsApi","searchQuery","selectedLocalization","Localization","lines","localizations$","bindSearchQuery","tableDataSource","setLocalizations","translation","setSelectedLocalization","setDefault","getActive","setLocalization","newLocalization","linesToArray","loc","deleteLocalization","transformed","addLine","MailTemplatePreviewComponent","initIframe","replaceIframeContents","renderSub","renderMailTemplate","file_name","cacheRenderedTemplate","fileName","raw","rendered","newContents","doc","documentElement","whiteSpace","contentDocument","overflow","MailTemplate","MailTemplateIndexComponent","templates","selectedTemplate","html","plain","selectedLayout$","selectedType","editorChange","bindToEditorChange","result","setLayout","initEditor","setEditorValue","subject","errors","ace","edit","getSession","setMode","setTheme","$blockScrolling","Infinity","MailTemplatesResolve","FILE_ENTRY_INDEX_FILTERS","FileEntryIndexComponent","uploads","entryIds","deleteSelectedEntries","ImageZoomOverlayComponent","overlayPanelRef","dialogContainer","ImageZoomComponent","src","alt","zoomImage","AdsPageComponent","hydrate","slot","getFlat","allAds","ad","addControl","saveAds","MatDividerModule","MatListIconCssMatStyler","MatListModule","CrupdatePlanModalComponent","plans","features$","currencies$","intervals","allPlans$","parent_id","free","recommended","show_permissions","interval","interval_count","currencies","hydrateModel","feature","curr","code","currency_symbol","symbol","newFeature","newFeatures","f","PLAN_INDEX_FILTERS","PlanIndexComponent","matPaginator","deleteSelectedPlans","getData","sync","CrupdateSubscriptionModalComponent","subscriptions","plansApi","plan_id","renews_at","ends_at","userAutocomplete","filteredUsers","bindToUserAutocomplete","fetchPlans","disable","mysqlToDate","user_id","renewsAt","dateToMysql","endsAt","toJSON","UTC","datePicker","SUBSCRIPTION_INDEX_FILTERS","SubscriptionIndexComponent","cancelOrDeleteSubscription","newSubscription","GdprSettingsComponent","customPages$","registerPolicies","policy","addRegisterPolicy","register_policies","getFirstCustomPageAction","removeAt","routes","canActivate","canActivateChild","redirectTo","pathMatch","loadChildren","m","AnalyticsModule","AppAppearanceModule","BaseAdminRoutingModule","forChild","FindUserModalModule","UploadsModule","UploadImageControlModule","BaseAdminModule","vebto","forRoot","resourceName","showSlug","ConfirmModalModule","AppAdminModule","lineConfig","showArea","lineSmooth","low","fullWidth","chartPadding","axisY","labelInterpolationFnc","val","high","getHigh","transformChartData","animate","begin","dur","scale","translate","chartRect","easing","Easing","easeOutQuint","series","generateDataWithTooltip","getMaxValue","off","pieConfig","showLabel","pathLength","_node","getTotalLength","attr","animationDefinition","totalDataSum","fill","endAngle","barConfig","y1","ChartComponent","calcAndSetChartHeight","chartConfig","transformConfig","BAR","chartPlaceholder","innerHeight","headerWrapper","legendWrapper","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r95","MatPaginator_div_2_mat_form_field_3_Template","_r97","_changePageSize","ctx_r92","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r93","MatPaginator_div_2_Template","ctx_r89","MatPaginator_button_6_Template","_r99","firstPage","ctx_r90","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r101","lastPage","ctx_r91","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","MAT_PAGINATOR_INTL_PROVIDER","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorBase","_MatPaginatorBase","MatPaginator","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_updateDisplayedPageSizeOptions","_initialized","hasNextPage","previousPageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","previousPage","nextPage","MatPaginatorModule","SelectUserInputComponent","selectedUser$","searchedOnce","per_page","clearSearchInput","searchInput","onMenuOpened","onMenuClosed","selectUser","BetweenInputComponent","setDefaultDate","showLabels","datePattern","initiated","defaultFrom","getDefaultDate","defaultTo","minusDays","setDate","addZero","day","getFullYear","number","AppDataTableInputsComponent","FilterPanelComponent","portals","filterForm","log","displayName","viewName","LEFT_POSITION","DataTableComponent","showCheckbox","hideHeader","table","addRowDef","filterPanelRef","filterButton","mobilePosition","LINK_PAGE_TYPE","ColorPickerInputModule","BillingEnabledGuard","BASE_URI","CustomDomainService","host","Steps","CrupdateCustomDomainModalComponent","customDomains","currentStep$","disabled$","global","domain","validate","nextStep","domainId","authorizeCrupdate","serverIp","Host","skipAuthorize","Validate","connectDomain","validateCname","Finalize","controls","match","CustomDomainIndexComponent","insideAdmin","deleteSelectedDomains","showCrupdateCustomDomainModal","maybeDeleteSelectedDomains","SlugControlModule","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","MatRadioChange","_changeDetector","_isInitialized","_labelPosition","_controlValueAccessorChangeFn","onTouched","_updateRadioButtonNames","_markRadiosForCheck","_updateSelectedRadioFromValue","_checkSelectedRadioButton","_radios","radio","MatRadioButton","MatRadioButtonBase","_MatRadioButtonMixinBase","radioGroup","_radioDispatcher","_providerOverride","newCheckedState","_setDisabled","_touch","groupValueChanged","ariaDescribedby","_onInputChange","_r244","_isRippleDisabled","MatRadioModule","CrupdateLinkGroupModalComponent","public","LINK_GROUP_UPDATE_SUCCESS","LINK_GROUP_CREATE_SUCCESS","LinkForm","build","geoRules","deviceRules","newRuleGroup","geo_rules","device_rules","rules","rule","type_id","multiple_urls","long_url","alias","defaultType","domain_id","hash","expires_at","tags","pixels","has_password","addRule","DatetimeInputComponent","currentDateAsDefault","time","setCurrentDatetime","currentDate","currentTime","datetime","toISOString","hours","minutes","linkForm","LinkOptionsFormComponent","defaultHost$","aliasMin","aliasMax","linkOptions","defaultHost","baseUrl","string","LinkTypeMenuComponent","selectValue","CrupdateLinkModalComponent","recaptcha","optionsVisible$","linkOptions$","multiple$","ReplaySubject","pageType","u","urlInvalid","setErrors","verify","MULTIPLE_LINKS_CREATE_SUCCESS","LINK_UPDATE_SUCCESS","LINK_CREATE_SUCCESS","group_id","strict","test","AttachLinkModalComponent","links$","searchControl","findLinks","LINK_ATTACH_SUCCESS","LINK_INDEX_FILTERS","LinkIndexComponent","linkGroups","linkUsage","loadIfEnableFor","deleteSelectedLinks","detachSelectedLinks","showCrupdateLinkModal","maybeDeleteSelectedLinks","LinkUsageInfoComponent","UpgradePanelComponent","closePopover","infoIcon","openPopover","DashboardHostComponent","LinkReportsResolverService","mergeMap","DashboardHomeComponent","reports$","DashboardRoutingModule","CustomDomainModule","DatetimeInputModule","InfoPopoverModule","DashboardModule","ChipInputModule","RIGHT_POSITION","pagination$","userParamsChange$","nextPageLoader$","virtualSort$","paginationParams","activeFilters$","entries","entry","defaultValue","applyFiltersFromQueryParams","dontUpdateQueryParams","paginatedOnce$","noResults$","noResults","paginationResponse","allRowsSelected","deselectAllItems","getCurrentPage","last_page","resetSort","resetMatPaginator","updateConfig","searchChange","filterChange","transformParams","paginate","current_page","appendData","currentData","originalParams","previous","current","orderBy","orderDir","keysToRemove","queryParams","currentQueryParams","queryValues","filterName","queryValue","MatDrawerContainer_div_0_Template","_r11","_onBackdropClicked","ctx_r8","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","_r15","ctx_r12","MatSidenavContainer_mat_sidenav_content_3_Template","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","ngZone","_contentMarginChanges","MatDrawerContainer","_contentMargins","MatDrawer","_focusTrapFactory","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_animationEnd","openedChange","onPositionChanged","_modeChanged","_takeFocus","_restoreFocus","_updateFocusTrapState","_autoFocus","mode","o","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","activeEl","_openedVia","openedVia","_animationStartListener","_animationDoneListener","_openedStream","openedStart","_closedStream","closedStart","viewportRuler","defaultAutosize","_drawers","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_start","_end","_backdropOverride","_userContent","_content","_allDrawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_left","_width","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","isAdd","_closeModalDrawer","_canHaveBackdrop","autosize","MatSidenavContent","MatSidenavContainer","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","ɵMatSidenav_BaseFactory","fixedInViewport","fixedTopGap","fixedBottomGap","ɵMatSidenavContainer_BaseFactory","MatSidenavModule","PLANS_BASE_URI","Plans","TextEditorModule","MatSelect_span_4_Template","ctx_r42","MatSelect_span_5_span_1_Template","ctx_r45","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r43","customTrigger","MatSelect_ng_template_8_Template","_r49","_panelDoneAnimatingStream","ctx_r44","_getPanelTheme","_transformOrigin","_triggerFontSize","matSelectAnimations","transformPanelWrap","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_MatSelectMixinBase","MatSelectTrigger","MatSelect","_parentFormField","scrollStrategyFactory","_liveAnnouncer","_panelOpen","_scrollTop","_destroy","_optionIds","_offsetY","_positions","_disableOptionCentering","_focused","optionSelectionChanges","_scrollStrategyFactory","disableOptionCentering","typeaheadDebounceInterval","_typeaheadDebounceInterval","_id","overlayDir","_triggerRect","trigger","_initKeyManager","added","_resetOptions","withTypeAhead","fontSize","_calculateOverlayPosition","_highlightCorrectOption","selectedOptions","viewValue","_handleOpenKeydown","_handleClosedKeydown","isOpenKey","isTyping","previouslySelectedOption","selectedOption","announce","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","shiftKey","_calculateOverlayOffsetX","isEmpty","correspondingOption","error","withAllowedModifierKeys","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","_setOptionIds","wasSelected","sortComparator","activeOptionIndex","_getItemHeight","itemHeight","_getItemCount","panelHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","_hasFloatingLabel","_getAriaLabel","_labelId","overlayRect","viewportSize","paddingWidth","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_PADDING_X","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","_getAriaLabelledby","_getAriaActiveDescendant","_onAttached","_r40","MatSelectModule","FullPlanNameModule","FormattedDatePipe","_locale","angularPipe","timezone","locale","CUSTOM_PAGE_CONFIG_TOKEN","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","MatButtonToggleGroup","MatButtonToggleGroupMultiple","MatButtonToggleChange","_vertical","_buttonToggles","deferEvents","_updateModelValue","_rawValue","MatButtonToggle","vertical","MatButtonToggleBase","_MatButtonToggleMixinBase","toggleGroup","_isSingleSelector","buttonToggleGroup","_appearance","_isSelected","_syncButtonToggle","_type","_isPrechecked","_buttonElement","newChecked","_onButtonClick","_r6","buttonId","MatButtonToggleModule","FormatPipesModule","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r33","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r37","updateOutlineGap","ctx_r27","_shouldAlwaysFloat","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r29","MatFormField_div_13_Template","ctx_r30","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r39","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r31","MatError","matFormFieldAnimations","transitionMessages","MatFormFieldControl","getMatFormFieldDuplicatedHintError","align","MatHint","MatLabel","MatPlaceholder","MatPrefix","MatSuffix","nextUniqueId$2","MatFormFieldBase","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_processHints","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","_connectionContainerRef","_validateControlChild","_validatePlaceholders","_syncDescribedByIds","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","requestAnimationFrame","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","_label","_validateHints","startHint","endHint","hint","float","_getDisplayedMessages","setDescribedByIds","labelEl","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","containerStart","_getStartEnd","labelStart","labelWidth","child","outlineGapPadding","underlineRef","_inputContainerRef","_hideControlPlaceholder","autofilled","_shouldForward","onContainerClick","MatFormFieldModule","LinkOverlayService","CrupdateLinkOverlayModalComponent","linkOverlays","message","label_position","btn_link","btn_text","hydrateForm","msg","LINK_OVERLAY_UPDATE_SUCCESS","LINK_OVERLAY_CREATE_SUCCESS","linkOverlay","getDefaultValue","overlayCmp","colorControls","LinkOverlayIndexComponent","overlays","deleteSelectedOverlays","LINK_OVERLAY_DELETE_SUCCESS","showCrupdateLinkOverlayModal","maybeDeleteSelectedOverlays","CustomPagesManagerModule","ngModule","ipRegex","tlds","Paginator","params$","lastResponse$","userParams","routerState","snapshot","backendUri","updateQueryParams","replaceUrl","Subscriptions","newPlanId","version","globalRoot","namespaces","svg","xmlns","xhtml","xlink","ct","noop","n","alphaNumerate","fromCharCode","sourceProp","replaceAll","str","subStr","newSubStr","ensureUnit","quantity","exec","times","sum","mapMultiply","factor","num","mapAdd","addend","serialMap","arr","cb","roundWithPrecision","digits","pow","escapingMap","'","serialize","createSvg","prototype","getAttributeNS","Svg","addClass","normalizeData","output","normalized","getDataArray","reverseData","safeHasProperty","object","isDataHoleValue","recursiveConvert","multiValue","getNumberOrUndefined","normalizePadding","padding","fallback","getMetaData","orderOfMagnitude","LN10","projectLength","axisLength","bounds","getAvailableHeight","axisX","getHighLow","dimension","highLow","findHigh","findLow","recursiveHighLow","referenceValue","isFalseyButZero","isMultiValue","getMultiValue","rho","gcd","q","divisor","x1","getBounds","scaleMinSpace","onlyInteger","newMin","newMax","optimizationCounter","valueRange","oom","step","numberOfSteps","scaleUp","smallestFactor","safeIncrement","increment","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","cos","sin","createChartRect","fallbackPadding","hasAxis","yAxisOffset","xAxisOffset","normalizedPadding","createGrid","axis","classes","eventEmitter","positionalData","units","pos","counterUnits","gridElement","createGridBackground","gridGroup","gridBackground","createLabel","axisOffset","labelOffset","useForeignObject","labelElement","len","foreignObject","getSeriesOption","seriesOptions","optionsProvider","responsiveOptions","currentOptions","baseOptions","mediaQueryListeners","updateCurrentOptions","mediaEvent","previousOptions","matchMedia","mql","addListener","removeMediaQueryListeners","removeListener","getCurrentOptions","splitIntoSegments","pathCoordinates","valueData","increasingX","fillHoles","segments","hole","Interpolation","none","Path","currX","currY","currData","simple","prevX","prevY","prevData","curve","cardinal","tension","segment","iLen","monotoneCubic","xs","ys","ms","ds","dys","dxs","postpone","EventEmitter","handlers","addEventHandler","removeEventHandler","starHandler","listToArray","Class","properties","superProtoOverride","superProto","proto","cloneDefinitions","constr","constructor","getOwnPropertyNames","propName","defineProperty","getOwnPropertyDescriptor","initialize","resizeListener","bind","plugin","createChart","initializeTimeoutId","Base","supportsForeignObject","isSupported","supportsAnimations","__chartist__","override","attributes","insertFirst","Element","createElementNS","ns","namespacedAttribute","setAttributeNS","foundNode","foundNodes","List","getNode","fnObj","createTextNode","newElement","append","names","self","removeClass","removedClasses","removeAllClasses","animations","guided","attribute","createAnimate","attributeProperties","calcMode","keySplines","keyTimes","attributeName","beginElement","implementation","hasFeature","easeInSine","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","nodeList","svgElements","prototypeProperty","elementDescriptions","accuracy","pathElements","relative","pathElement","forEachParam","pathElementIndex","paramName","paramIndex","arc","rx","ry","xAr","lAf","sf","transformFnc","chunks","pop","chunk","spliceArgs","accuracyMultiplier","splitByCommand","joinedPath","axisUnits","rectStart","rectEnd","rectOffset","Axis","ticks","gridOffset","createGridAndLabels","labelGroup","chartOptions","axisOptions","projectedValues","projectValue","labelValues","projectedValue","labelLength","showGrid","classNames","grid","AutoScaleAxis","axisUnit","FixedScaleAxis","stepLength","StepAxis","calc","stretch","showLine","showPoint","areaBase","showGridBackground","area","Line","seriesGroup","seriesIndex","seriesElement","pathData","valueIndex","seriesMeta","areaBaseProjected","pathSegment","solidPathSegments","firstElement","lastElement","areaPath","seriesBarDistance","stackBars","stackMode","horizontalBars","distributeSeries","bar","serialSums","prev","valueAxis","labelAxisTicks","labelAxis","zeroPoint","stackedBarValues","periodHalfLength","biPol","projected","previousStack","labelAxisValueIndex","metaData","chartPie","chartDonut","slicePie","sliceDonut","sliceDonutSolid","startAngle","donutWidth","labelDirection","ignoreEmptyValues","determineAnchorPosition","center","toTheRight","labelsGroup","labelRadius","seriesGroups","previousValue","hasSingleValInSeries","overlappigStartAngle","innerStart","innerEnd","donutSolidRadius","pathClassName","strokeWidth","rawValue","interpolatedValue","dx","dy","InfoPopoverComponent","infoButton","togglePopover","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","animationDuration","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r63","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r71","i_r64","ctx_r70","_r59","ctx_r60","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r75","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r72","i_r73","ctx_r62","_c7","_c8","_c9","_MAT_INK_BAR_POSITIONER","offsetLeft","MatInkBar","_inkBarPositioner","_setStyles","inkBar","MatTabContent","MatTabLabel","ɵMatTabLabel_BaseFactory","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_closestTabGroup","_contentPortal","isActive","_templateLabel","_explicitContent","_implicitContent","matTabsAnimations","translateTab","MatTabBodyPortal","componentFactoryResolver","_host","_centeringSub","_leavingSub","ngOnInit","_beforeCentering","_isCenterPosition","isCentering","_afterLeavingCenter","MatTabBody","_MatTabBodyBase","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","_computePositionAnimationState","_positionIndex","_computePositionFromOrigin","_getLayoutDirection","_portalHost","_onTranslateTabStarted","MAT_TABS_CONFIG","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","_animationDuration","_backgroundColor","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","_allTabs","_tabHeader","_alignInkBarToSelectedTab","tabHeight","_tabBodyWrapper","tabHeader","focusIndex","idx","dynamicHeight","MatTabGroup","_focusChanged","MatTabHeader","MatTabLabelWrapper","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatPaginatedTabHeader","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_itemSelected","_currentTextContent","_checkPaginationEnabled","containerEl","_tabListContainer","scrollDistance","translateX","_tabList","TRIDENT","EDGE","_scrollTo","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","mouseEvent","maxScrollDistance","_MatTabHeaderBase","_disableRipple","_handlePaginatorClick","_onContentChanges","_MatTabNavBase","updateActiveLink","MatTabNav","MatTabLink","MatTabLinkMixinBase","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","_isActive","exitDuration","tabNavBar","focusMonitor","_tabLinkRipple","MatTabsModule","ChartType","BaseChart","generate","TrackingPixelService","TrackingPixelTypes","pattern","CrupdateTrackingPixelModalComponent","selectedType$","head_code","body_code","pixel_id","typeName","pixel","PIXEL_UPDATE_SUCCESS","PIXEL_CREATE_SUCCESS","clearCache","TrackingPixelIndexComponent","deleteSelectedPixels","PIXEL_DELETE_SUCCESS","showCrupdatePixelModal","maybeDeleteSelectedPixels","LinkGroupIndexComponent","deleteSelectedGroups","showCrupdateGroupModal","maybeDeleteSelectedGroups"],"mappings":"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OACA,aACA,KACA,UACA,WACA,KACA,UACA,OACA,UACA,QACA,UACA,SACA,OACA,QACA,UACA,KACA,MACA,KACA,MACA,KACA,QACA,KACA,OACA,QACA,UACA,iBACA,OACA,OACA,MACA,YACA,cACA,WACA,WACA,WACA,WACA,aACA,UACA,SACA,KACA,MACA,MACA,OACA,MACA,MACA,KACA,KACA,QACA,SACA,OACA,UACA,SACA,OACA,UACA,MACA,KACA,KACA,KACA,SACA,KACA,QACA,MACA,OACA,OACA,QACA,MACA,MACA,KACA,QACA,cACA,cACA,OACA,YACA,OACA,KACA,MACA,MACA,KACA,aACA,KACA,QACA,aACA,OACA,MACA,OACA,MACA,OACA,UACA,QACA,SACA,SACA,MACA,WACA,MACA,KACA,WACA,cACA,WACA,SACA,UACA,WACA,KACA,KACA,WACA,UACA,QACA,WACA,WACA,MACA,OACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,OACA,MACA,OACA,cACA,MACA,SACA,OACA,iBACA,QACA,WACA,UACA,aACA,MACA,UACA,QACA,OACA,SACA,UACA,OACA,OACA,OACA,SACA,OACA,SACA,MACA,WACA,WACA,MACA,MACA,OACA,MACA,KACA,KACA,MACA,SACA,MACA,OACA,KACA,MACA,MACA,KACA,KACA,SACA,UACA,UACA,QACA,OACA,QACA,UACA,YACA,SACA,SACA,KACA,WACA,SACA,QACA,UACA,OACA,QACA,OACA,WACA,KACA,KACA,SACA,WACA,QACA,SACA,WACA,WACA,QACA,OACA,UACA,KACA,KACA,KACA,QACA,QACA,SACA,UACA,UACA,MACA,UACA,WACA,YACA,UACA,UACA,WACA,SACA,SACA,eACA,aACA,UACA,cACA,UACA,iBACA,OACA,OACA,UACA,UACA,SACA,UACA,UACA,MACA,KACA,SACA,aACA,cACA,UACA,QACA,MACA,SACA,UACA,MACA,KACA,aACA,KACA,KACA,KACA,KACA,QACA,OACA,KACA,QACA,MACA,QACA,OACA,OACA,SACA,SACA,MACA,OACA,MACA,KACA,OACA,SACA,QACA,SACA,WACA,OACA,WACA,QACA,WACA,SACA,UACA,OACA,SACA,MACA,MACA,WACA,OACA,UACA,SACA,YACA,WACA,WACA,OACA,MACA,KACA,KACA,KACA,MACA,KACA,OACA,SACA,MACA,UACA,MACA,WACA,QACA,MACA,QACA,OACA,SACA,SACA,SACA,OACA,MACA,KACA,QACA,MACA,KACA,MACA,QACA,MACA,YACA,KACA,KACA,QACA,SACA,SACA,WACA,cACA,cACA,QACA,YACA,KACA,WACA,OACA,KACA,MACA,SACA,WACA,KACA,WACA,KACA,aACA,MACA,SACA,WACA,SACA,UACA,UACA,aACA,OACA,OACA,YACA,QACA,SACA,MACA,OACA,OACA,UACA,UACA,OACA,QACA,WACA,UACA,UACA,KACA,OACA,WACA,OACA,OACA,QACA,UACA,YACA,OACA,YACA,WACA,OACA,UACA,MACA,UACA,KACA,KACA,SACA,UACA,OACA,UACA,UACA,MACA,KACA,KACA,MACA,OACA,cACA,WACA,OACA,QACA,UACA,QACA,aACA,MACA,KACA,OACA,YACA,MACA,UACA,YACA,WACA,MACA,UACA,YACA,MACA,OACA,YACA,SACA,MACA,KACA,MACA,UACA,QACA,SACA,OACA,QACA,MACA,SACA,MACA,KACA,OACA,KACA,MACA,KACA,MACA,OACA,UACA,SACA,KACA,KACA,OACA,KACA,KACA,OACA,QACA,QACA,SACA,KACA,QACA,QACA,MACA,SACA,QACA,KACA,QACA,OACA,MACA,MACA,KACA,UACA,OACA,YACA,OACA,MACA,WACA,OACA,SACA,MACA,MACA,MACA,KACA,KACA,KACA,WACA,WACA,SACA,QACA,QACA,UACA,QACA,KACA,KACA,KACA,WACA,QACA,OACA,QACA,UACA,OACA,KACA,KACA,OACA,UACA,UACA,OACA,MACA,OACA,WACA,SACA,aACA,OACA,WACA,OACA,SACA,OACA,SACA,YACA,UACA,MACA,KACA,MACA,KACA,KACA,SACA,WACA,UACA,YACA,YACA,QACA,YACA,QACA,QACA,WACA,OACA,UACA,MACA,UACA,SACA,UACA,QACA,MACA,KACA,OACA,KACA,KACA,SACA,QACA,UACA,MACA,OACA,MACA,MACA,KACA,KACA,OACA,MACA,QACA,KACA,KACA,SACA,OACA,OACA,aACA,KACA,MACA,aACA,WACA,OACA,MACA,MACA,YACA,YACA,SACA,MACA,QACA,gBACA,SACA,cACA,KACA,WACA,KACA,KACA,QACA,KACA,UACA,MACA,WACA,KACA,OACA,MACA,QACA,SACA,OACA,MACA,MACA,KACA,OACA,QACA,UACA,MACA,MACA,KACA,MACA,MACA,KACA,OACA,SACA,MACA,MACA,KACA,WACA,OACA,SACA,UACA,SACA,OACA,KACA,cACA,iBACA,kBACA,MACA,KACA,KACA,KACA,MACA,MACA,SACA,SACA,UACA,OACA,KACA,KACA,QACA,UACA,SACA,KACA,OACA,MACA,KACA,MACA,OACA,YACA,KACA,KACA,QACA,KACA,KACA,UACA,cACA,QACA,YACA,SACA,OACA,YACA,UACA,UACA,MACA,SACA,UACA,MACA,SACA,KACA,KACA,MACA,QACA,UACA,SACA,QACA,OACA,QACA,OACA,KACA,UACA,OACA,OACA,gBACA,YACA,WACA,OACA,QACA,UACA,OACA,UACA,QACA,OACA,QACA,OACA,SACA,QACA,KACA,MACA,OACA,QACA,SACA,QACA,OACA,MACA,SACA,QACA,QACA,OACA,MACA,eACA,KACA,KACA,KACA,MACA,OACA,KACA,WACA,QACA,OACA,SACA,KACA,KACA,KACA,QACA,SACA,OACA,SACA,SACA,MACA,aACA,QACA,MACA,SACA,YACA,UACA,WACA,YACA,WACA,SACA,MACA,KACA,WACA,KACA,KACA,MACA,QACA,OACA,YACA,OACA,WACA,MACA,OACA,WACA,UACA,KACA,KACA,QACA,YACA,MACA,OACA,OACA,MACA,aACA,KACA,KACA,MACA,MACA,KACA,MACA,KACA,KACA,OACA,SACA,OACA,MACA,MACA,MACA,SACA,QACA,UACA,SACA,WACA,SACA,OACA,cACA,MACA,QACA,WACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,MACA,KACA,SACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,QACA,SACA,OACA,aACA,SACA,OACA,MACA,KACA,KACA,MACA,MACA,UACA,UACA,UACA,UACA,MACA,aACA,OACA,OACA,aACA,QACA,KACA,MACA,KACA,MACA,MACA,KACA,OACA,OACA,QACA,QACA,SACA,SACA,KACA,KACA,QACA,qBACA,SACA,MACA,SACA,QACA,KACA,KACA,MACA,MACA,MACA,KACA,MACA,KACA,MACA,WACA,MACA,SACA,UACA,SACA,cACA,UACA,OACA,KACA,QACA,MACA,MACA,MACA,SACA,aACA,MACA,OACA,SACA,SACA,MACA,UACA,UACA,QACA,SACA,MACA,MACA,KACA,OACA,YACA,QACA,OACA,WACA,QACA,QACA,YACA,MACA,OACA,KACA,MACA,KACA,SACA,KACA,KACA,WACA,MACA,UACA,QACA,QACA,cACA,SACA,SACA,OACA,SACA,WACA,MACA,MACA,OACA,OACA,UACA,QACA,KACA,KACA,QACA,OACA,cACA,WACA,OACA,KACA,KACA,MACA,OACA,QACA,UACA,OACA,OACA,KACA,YACA,QACA,QACA,QACA,MACA,OACA,cACA,OACA,cACA,QACA,aACA,WACA,aACA,MACA,aACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,OACA,SACA,QACA,MACA,SACA,QACA,OACA,KACA,OACA,aACA,UACA,SACA,UACA,MACA,WACA,cACA,QACA,QACA,SACA,OACA,WACA,MACA,OACA,UACA,SACA,SACA,aACA,OACA,aACA,SACA,UACA,UACA,OACA,YACA,QACA,cACA,MACA,MACA,MACA,OACA,KACA,SACA,QACA,QACA,SACA,OACA,KACA,OACA,KACA,QACA,OACA,MACA,KACA,MACA,SACA,KACA,WACA,OACA,SACA,SACA,OACA,QACA,WACA,UACA,UACA,kBACA,SACA,MACA,OACA,MACA,OACA,OACA,KACA,MACA,MACA,KACA,MACA,MACA,aACA,UACA,eACA,SACA,SACA,UACA,UACA,YACA,OACA,OACA,KACA,KACA,SACA,OACA,SACA,WACA,OACA,SACA,QACA,WACA,MACA,QACA,MACA,MACA,OACA,MACA,KACA,KACA,YACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,WACA,SACA,OACA,WACA,UACA,KACA,OACA,OACA,UACA,OACA,KACA,KACA,MACA,OACA,MACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,OACA,KACA,SACA,SACA,WACA,WACA,OACA,QACA,YACA,OACA,OACA,MACA,QACA,QACA,OACA,gBACA,KACA,MACA,KACA,KACA,QACA,UACA,OACA,YACA,YACA,MACA,WACA,YACA,UACA,QACA,SACA,SACA,QACA,QACA,KACA,QACA,WACA,SACA,UACA,OACA,UACA,SACA,KACA,SACA,aACA,QACA,KACA,KACA,SACA,WACA,UACA,KACA,MACA,SACA,OACA,SACA,SACA,aACA,QACA,SACA,MACA,OACA,KACA,MACA,KACA,MACA,OACA,OACA,aACA,MACA,aACA,UACA,SACA,OACA,KACA,KACA,KACA,MACA,UACA,UACA,OACA,UACA,SACA,UACA,OACA,QACA,QACA,KACA,SACA,MACA,KACA,SACA,KACA,KACA,QACA,KACA,KACA,QACA,QACA,QACA,MACA,QACA,UACA,QACA,QACA,OACA,SACA,OACA,KACA,QACA,UACA,WACA,SACA,gBACA,YACA,qBACA,QACA,MACA,KACA,OACA,MACA,QACA,QACA,KACA,MACA,KACA,KACA,KACA,QACA,MACA,KACA,KACA,SACA,aACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,YACA,OACA,WACA,KACA,KACA,QACA,WACA,WACA,eACA,MACA,KACA,KACA,SACA,QACA,MACA,SACA,SACA,MACA,MACA,SACA,OACA,SACA,aACA,OACA,OACA,aACA,KACA,QACA,aACA,QACA,OACA,SACA,OACA,SACA,KACA,SACA,QACA,UACA,SACA,OACA,UACA,QACA,UACA,UACA,iBACA,SACA,QACA,UACA,MACA,UACA,QACA,OACA,KACA,UACA,OACA,OACA,cACA,MACA,UACA,OACA,UACA,MACA,gBACA,WACA,OACA,QACA,QACA,MACA,KACA,MACA,MACA,OACA,QACA,UACA,SACA,MACA,qBACA,qBACA,eACA,2BACA,eACA,eACA,eACA,eACA,2BACA,2BACA,eACA,qBACA,2BACA,2BACA,eACA,2BACA,iCACA,eACA,eACA,2BACA,eACA,eACA,qBACA,uCACA,qBACA,6CACA,uCACA,2BACA,eACA,qBACA,eACA,qBACA,qBACA,eACA,eACA,qBACA,uCACA,qBACA,qBACA,qBACA,eACA,qEACA,eACA,eACA,eACA,2BACA,qBACA,eACA,2BACA,eACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,iCACA,2BACA,2BACA,eACA,2BACA,2BACA,eACA,uCACA,2BACA,iCACA,eACA,iCACA,eACA,eACA,qBACA,qBACA,eACA,qBACA,eACA,qBACA,eACA,eACA,eACA,eACA,qBACA,6CACA,2BACA,uCACA,iCACA,6CACA,6CACA,uCACA,iCACA,yDACA,6CACA,uCACA,2BACA,iCACA,uCACA,uCACA,mDACA,2BACA,6CACA,iCACA,iCACA,2BACA,uCACA,eACA,eACA,eACA,2BACA,2BACA,qBACA,eACA,eACA,2BACA,eACA,qBACA,iCACA,eACA,qBACA,eACA,eACA,2BACA,eACA,qBACA,2BACA,eACA,eACA,eACA,eACA,iCACA,2BACA,eACA,eACA,eACA,qBACA,eACA,sBACA,uBACA,eACA,eACA,iCACA,eACA,qBACA,qBACA,eACA,uCACA,6CACA,qBACA,qBACA,uCACA,eACA,MACA,MACA,S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","sourceRoot":"webpack:///","sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r202 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r202.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r202.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r204 = ctx.$implicit;\n    const ctx_r203 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r203.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r203.dataAccessor(data_r204, ctx_r203.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, TemplateRef, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, Optional, Inject, ViewChild, ContentChildren, InjectionToken, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor() {\n        super(...arguments);\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (!name) {\n            return;\n        }\n        this._name = name;\n        this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return ɵCdkColumnDef_BaseFactory(t || CdkColumnDef); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\nconst ɵCdkColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CdkColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeQueryListAndSet(this._contentColumnDefs, this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs =\n            mergeQueryListAndSet(this._contentHeaderRowDefs, this._customHeaderRowDefs);\n        this._footerRowDefs =\n            mergeQueryListAndSet(this._contentFooterRowDefs, this._customFooterRowDefs);\n        this._rowDefs = mergeQueryListAndSet(this._contentRowDefs, this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in a QueryList and values of a Set.\n * @template T\n * @param {?} queryList\n * @param {?} set\n * @return {?}\n */\nfunction mergeQueryListAndSet(queryList, set) {\n    return queryList.toArray().concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r205 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r205.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r205.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r207 = ctx.$implicit;\n    const ctx_r206 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r206.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r206.dataAccessor(data_r207, ctx_r206.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTable, useExisting: MatTable }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [{ provide: CdkTable, useExisting: MatTable }],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport {LinkReportRange, LinkService, LinkStats} from '../../shared/link/link.service';\nimport {FormControl} from '@angular/forms';\nimport {finalize} from 'rxjs/operators';\nimport {BehaviorSubject} from 'rxjs';\nimport {ChartType, LineChartConfig, PieChartConfig} from '@common/shared/charts/base-chart';\nimport {LazyLoaderService} from '@common/core/utils/lazy-loader.service';\nimport {Link} from '../../shared/link/link';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {ucFirst} from '@common/core/utils/uc-first';\nimport {LinkGroup} from '../../shared/link/link-group';\nimport {LinkGroupService} from '../../shared/link/link-group.service';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {ThemeService} from '@common/core/theme.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {EXPANSION_PANEL_ANIMATION_TIMING} from '@angular/material/expansion';\nimport {Translations} from '@common/core/translations/translations.service';\n\ninterface ChartReports {\n    totalClicks: number;\n    clicks: LineChartConfig;\n    browsers: PieChartConfig;\n    devices: PieChartConfig;\n    platforms: PieChartConfig;\n    locations: { label: string, code: string, percentage: number, count: number }[];\n    referrers: { label: string, count: number }[];\n}\n\n@Component({\n    selector: 'click-charts',\n    templateUrl: './click-charts.component.html',\n    styleUrls: ['./click-charts.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('bodyExpansion', [\n            state('collapsed, void', style({height: '425px'})),\n            state('expanded', style({height: '*'})),\n            transition('expanded <=> collapsed, void => collapsed',\n                animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n        ])\n    ]\n})\nexport class ClickChartsComponent implements OnInit, OnChanges {\n    @Input() reports: LinkStats;\n    @Input() link: Link | null;\n    @Input() group: LinkGroup | null;\n    @Input() @HostBinding('@bodyExpansion') state: 'collapsed'|'expanded' = 'expanded';\n    @ViewChild('countryChartPlaceholder') iframe: ElementRef<HTMLDivElement>;\n    public transformedReports$ = new BehaviorSubject<ChartReports>(null);\n    public loading$ = new BehaviorSubject(false);\n    public range = new FormControl('weekly');\n    private googleChart;\n\n    constructor(\n        private linkApi: LinkService,\n        private linkGroup: LinkGroupService,\n        private loader: LazyLoaderService,\n        private theme: ThemeService,\n        private settings: Settings,\n        private i18n: Translations,\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.reports && changes.reports.currentValue) {\n            this.updateCharts(changes.reports.currentValue);\n            this.initGoogleWorldMap();\n        }\n    }\n\n    public ngOnInit() {\n        this.range.valueChanges.subscribe(range => {\n            this.loading$.next(true);\n            this.getUpdateDataRequest(range)\n                .pipe(finalize(() => this.loading$.next(false)))\n                .subscribe(response => {\n                    this.updateCharts(response.reports);\n                    this.drawGoogleChart();\n                });\n        });\n\n        // update google chart colors on dark/light mode toggle\n        this.theme.selectedTheme$.subscribe(() => {\n            if (this.googleChart) {\n                this.drawGoogleChart();\n            }\n        });\n    }\n\n    public getRangeName() {\n        // weekly => Week\n        return ucFirst(this.range.value.replace('ly', ''));\n    }\n\n    private getUpdateDataRequest(range: LinkReportRange): BackendResponse<{ reports: LinkStats }> {\n        if (this.link) {\n            return this.linkApi.get(this.link.id, {range});\n        } else if (this.group) {\n            return this.linkGroup.get(this.group.id, {range, reportsOnly: true});\n        } else {\n            return this.linkApi.getCurrentUserReports({range});\n        }\n    }\n\n    private updateCharts(data: LinkStats) {\n        const reports = {\n            ...data,\n            browsers: this.transformData(data.browsers, ChartType.PIE) as PieChartConfig,\n            platforms: this.transformData(data.platforms, ChartType.PIE) as PieChartConfig,\n            devices: this.transformData(data.devices, ChartType.PIE, true) as PieChartConfig,\n            clicks: this.transformData(data.clicks, ChartType.LINE) as LineChartConfig,\n        };\n        this.transformedReports$.next(reports);\n    }\n\n    private transformData(data: { label: string, count: number }[], type: ChartType = ChartType.LINE, translateLabel = false) {\n        return {\n            type: type,\n            labels: data.map(v => translateLabel ? this.i18n.t(v.label) : v.label),\n            data: type === ChartType.LINE ? [data.map(v => v.count)] : data.map(v => v.count),\n            legend: type === ChartType.PIE,\n            tooltip: this.i18n.t('Click Count'),\n        };\n    }\n\n    private initGoogleWorldMap() {\n        this.loader.loadAsset('https://www.gstatic.com/charts/loader.js', {type: 'js'}).then(() => {\n            const google = window['google'] as any;\n            google.charts.load('current', {\n                packages: ['geochart'],\n                // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n                mapsApiKey: this.settings.get('links.gchart_api_key'),\n            });\n            google.charts.setOnLoadCallback(() => {\n                this.drawGoogleChart();\n            });\n        });\n    }\n\n    private drawGoogleChart() {\n        const google = window['google'] as any;\n        let data = this.reports.locations.map(location => {\n            return [location.label, location.count];\n        });\n        data.unshift(['Country', 'Popularity']);\n        data = google.visualization.arrayToDataTable(data);\n\n        const options = {\n            colorAxis: {colors: ['#4662fa']},\n            backgroundColor: this.theme.selectedTheme$.value.is_dark ? '#1D1D1D' : null,\n            datalessRegionColor: this.theme.selectedTheme$.value.is_dark ? '#e9ecfe' : null,\n        };\n\n        if ( ! this.googleChart) {\n            this.googleChart = new google.visualization.GeoChart(this.iframe.nativeElement);\n        }\n        this.googleChart.draw(data, options);\n    }\n}\n","<ng-container *ngIf=\"transformedReports$ | async as reports\">\n    <div class=\"chart-row\">\n        <div class=\"chart-wrapper\">\n            <chart [chartConfig]=\"reports.clicks\" class=\"clicks-chart\" height=\"400\">\n                <div class=\"chart-header clicks-chart-header\">\n                    <div class=\"left\">\n                        <div class=\"title\">{{ ('Clicks This' + ' ' + getRangeName()) | trans }}</div>\n                        <div class=\"subtitle\">{{reports.totalClicks}} {{ 'Total Clicks' | trans }}</div>\n                    </div>\n                    <mat-button-toggle-group class=\"right\" appearance=\"legacy\" [formControl]=\"range\">\n                        <mat-button-toggle value=\"weekly\" trans>Weekly</mat-button-toggle>\n                        <mat-button-toggle value=\"monthly\" trans>Monthly</mat-button-toggle>\n                        <mat-button-toggle value=\"yearly\" trans>Yearly</mat-button-toggle>\n                    </mat-button-toggle-group>\n                </div>\n            </chart>\n        </div>\n        <div class=\"chart-wrapper pie-wrapper\">\n            <chart [chartConfig]=\"reports.devices\" height=\"400\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>Top Devices</div>\n                    <div class=\"subtitle\" trans>Click count by device</div>\n                </div>\n            </chart>\n        </div>\n    </div>\n\n    <div class=\"chart-row\">\n        <div class=\"chart-wrapper referrers-panel\">\n            <div class=\"chart\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>Referrers</div>\n                    <div class=\"subtitle\" trans>Click count by referrer</div>\n                </div>\n                <ul>\n                    <li class=\"referrer\" *ngFor=\"let referrer of reports.referrers\">\n                        <a [href]=\"referrer.label\" class=\"url\" target=\"_blank\" *ngIf=\"referrer.label; else direct\">{{referrer.label}}</a>\n                        <ng-template #direct>\n                            <div trans>Direct, Email, SMS</div>\n                        </ng-template>\n                        <div class=\"count\">{{referrer.count}}</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n        <div class=\"chart-wrapper locations-panel\">\n            <div class=\"chart\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>Top Locations</div>\n                    <div class=\"subtitle\" trans>Click count by country</div>\n                </div>\n                <div class=\"chart-body\">\n                    <div class=\"country-chart-placeholder\" #countryChartPlaceholder></div>\n                    <div class=\"country-list\">\n                        <div class=\"country\" *ngFor=\"let country of reports.locations\">\n                            <span class=\"country-name\">{{country.label}}</span> ({{country.percentage}}%)\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"chart-row\">\n        <div class=\"chart-wrapper pie-wrapper\">\n            <chart [chartConfig]=\"reports.browsers\" height=\"400\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>Top Browsers</div>\n                    <div class=\"subtitle\" trans>Click count by browser</div>\n                </div>\n            </chart>\n        </div>\n\n        <div class=\"chart-wrapper pie-wrapper\">\n            <chart [chartConfig]=\"reports.platforms\" height=\"400\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>Top Platforms</div>\n                    <div class=\"subtitle\" trans>Click count by OS</div>\n                </div>\n            </chart>\n        </div>\n    </div>\n</ng-container>\n\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, ContentChildren, Input, Output, Directive, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _supportsShadowDom } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/cdk/scrolling';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r200 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r200.id)(\"ngClass\", ctx_r200._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected.\n */\nclass MatAutocompleteSelectedEvent {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.option;\n}\n/**\n * Event object that is emitted when an autocomplete option is activated.\n * @record\n */\nfunction MatAutocompleteActivatedEvent() { }\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.option;\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/**\n * \\@docs-private\n */\nclass MatAutocompleteBase {\n}\n/** @type {?} */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/**\n * Default `mat-autocomplete` options that can be overridden.\n * @record\n */\nfunction MatAutocompleteDefaultOptions() { }\nif (false) {\n    /**\n     * Whether the first option should be highlighted when an autocomplete panel is opened.\n     * @type {?|undefined}\n     */\n    MatAutocompleteDefaultOptions.prototype.autoActiveFirstOption;\n}\n/**\n * Injection token to be used to override the default options for `mat-autocomplete`.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\nclass MatAutocomplete extends _MatAutocompleteMixinBase {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} defaults\n     */\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete panel should be visible, depending on option length.\n         */\n        this.showPanel = false;\n        this._isOpen = false;\n        /**\n         * Function that maps an option's control value to its display value in the trigger.\n         */\n        this.displayWith = null;\n        /**\n         * Event that is emitted whenever an option from the list is selected.\n         */\n        this.optionSelected = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Emits whenever an option is activated using the keyboard.\n         */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /**\n         * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n         */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /**\n     * Whether the autocomplete panel is open.\n     * @return {?}\n     */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     * @return {?}\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((/**\n             * @param {?} classList\n             * @param {?} className\n             * @return {?}\n             */\n            (classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }), (/** @type {?} */ ({})));\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        }));\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitSelectEvent(option) {\n        /** @type {?} */\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /**\n     * Sets the autocomplete visibility classes on a classlist based on the panel is visible.\n     * @private\n     * @param {?} classList\n     * @return {?}\n     */\n    _setVisibilityClasses(classList) {\n        classList['mat-autocomplete-visible'] = this.showPanel;\n        classList['mat-autocomplete-hidden'] = !this.showPanel;\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return new (t || MatAutocomplete)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatAutocomplete_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\", displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAutocomplete.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\nMatAutocomplete.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_autoActiveFirstOption;\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._activeOptionChanges;\n    /**\n     * Manages active item in option list based on key events.\n     * @type {?}\n     */\n    MatAutocomplete.prototype._keyManager;\n    /**\n     * Whether the autocomplete panel should be visible, depending on option length.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.showPanel;\n    /** @type {?} */\n    MatAutocomplete.prototype._isOpen;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.template;\n    /**\n     * Element for the panel containing the autocomplete options.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panel;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.options;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionGroups;\n    /**\n     * Function that maps an option's control value to its display value in the trigger.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.displayWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._autoActiveFirstOption;\n    /**\n     * Specify the width of the autocomplete panel.  Can be any CSS sizing value, otherwise it will\n     * match the width of its host.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panelWidth;\n    /**\n     * Event that is emitted whenever an option from the list is selected.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionSelected;\n    /**\n     * Event that is emitted when the autocomplete panel is opened.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.opened;\n    /**\n     * Event that is emitted when the autocomplete panel is closed.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.closed;\n    /**\n     * Emits whenever an option is activated using the keyboard.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionActivated;\n    /** @type {?} */\n    MatAutocomplete.prototype._classList;\n    /**\n     * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-origin.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return new (t || MatAutocompleteOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"] });\n/** @nocollapse */\nMatAutocompleteOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    MatAutocompleteOrigin.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The height of each autocomplete option.\n * @type {?}\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @type {?}\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatAutocompleteTrigger)),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nclass MatAutocompleteTrigger {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _zone\n     * @param {?} _changeDetectorRef\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _formField\n     * @param {?} _document\n     * @param {?=} _viewportRuler\n     */\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /**\n         * Whether or not the label state is being overridden.\n         */\n        this._manuallyFloatingLabel = false;\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /**\n         * Stream of keyboard events that can close the panel.\n         */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = (/**\n         * @return {?}\n         */\n        () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        });\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when autocomplete has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * \\@docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /**\n         * Stream of autocomplete option selections.\n         */\n        this.optionSelections = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelections)));\n        }))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     * @return {?}\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                window.addEventListener('blur', this._windowBlurHandler);\n            }));\n            if (_supportsShadowDom()) {\n                /** @type {?} */\n                const element = this._element.nativeElement;\n                /** @type {?} */\n                const rootNode = element.getRootNode ? element.getRootNode() : null;\n                // We need to take the `ShadowRoot` off of `window`, because the built-in types are\n                // incorrect. See https://github.com/Microsoft/TypeScript/issues/27929.\n                this._isInsideShadowRoot = rootNode instanceof ((/** @type {?} */ (window))).ShadowRoot;\n            }\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /**\n     * Whether or not the autocomplete panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            (/** @type {?} */ (this._overlayRef)).updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     * @return {?}\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter((/**\n         * @return {?}\n         */\n        () => this._overlayAttached))), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter((/**\n             * @return {?}\n             */\n            () => this._overlayAttached))) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /**\n     * The currently active option, coerced to MatOption type.\n     * @return {?}\n     */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    _getOutsideClickStream() {\n        return merge((/** @type {?} */ (fromEvent(this._document, 'click'))), (/** @type {?} */ (fromEvent(this._document, 'touchend'))))\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ ((this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target)));\n            /** @type {?} */\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        })));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            /** @type {?} */\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            /** @type {?} */\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        /** @type {?} */\n        let target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @param {?=} shouldAnimate Whether the label should be animated when it is floated.\n     * @return {?}\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    _scrollToOption() {\n        /** @type {?} */\n        const index = this.autocomplete._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(index, this.autocomplete.options, this.autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.autocomplete._setScrollTop(0);\n        }\n        else {\n            /** @type {?} */\n            const newScrollPosition = _getOptionScrollPosition(index + labelCount, AUTOCOMPLETE_OPTION_HEIGHT, this.autocomplete._getScrollTop(), AUTOCOMPLETE_PANEL_HEIGHT);\n            this.autocomplete._setScrollTop(newScrollPosition);\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    _subscribeToClosingActions() {\n        /** @type {?} */\n        const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        const optionChanges = this.autocomplete.options.changes.pipe(tap((/**\n         * @return {?}\n         */\n        () => this._positionStrategy.reapplyLastPosition())), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        })), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this._setValueAndClose(event)));\n    }\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        /** @type {?} */\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        /** @type {?} */\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this.autocomplete) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        /** @type {?} */\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }));\n            if (this._viewportRuler) {\n                this._viewportSubscription = this._viewportRuler.change().subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.panelOpen && overlayRef) {\n                        overlayRef.updateSize({ width: this._getPanelWidth() });\n                    }\n                }));\n            }\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        /** @type {?} */\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /**\n     * Sets the positions on a position strategy based on the directive's input state.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _setStrategyPositions(positionStrategy) {\n        /** @type {?} */\n        const belowPosition = {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        };\n        /** @type {?} */\n        const abovePosition = {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom',\n            // The overlay edge connected to the trigger should have squared corners, while\n            // the opposite end has rounded corners. We apply a CSS class to swap the\n            // border-radius based on the overlay position.\n            panelClass: 'mat-autocomplete-panel-above'\n        };\n        /** @type {?} */\n        let positions;\n        if (this.position === 'above') {\n            positions = [abovePosition];\n        }\n        else if (this.position === 'below') {\n            positions = [belowPosition];\n        }\n        else {\n            positions = [belowPosition, abovePosition];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @private\n     * @return {?}\n     */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    _canOpen() {\n        /** @type {?} */\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return new (t || MatAutocompleteTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.MatFormField, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.ViewportRuler)); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatAutocompleteTrigger.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\nMatAutocompleteTrigger.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc5.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocompleteTrigger.ngAcceptInputType_autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._componentDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._scrollStrategy;\n    /**\n     * Old value of the native input. Used to work around issues with the `input` event on IE.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._previousValue;\n    /**\n     * Strategy that is used to position the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._positionStrategy;\n    /**\n     * Whether or not the label state is being overridden.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._manuallyFloatingLabel;\n    /**\n     * The subscription for closing actions (some are bound to document).\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closingActionsSubscription;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportSubscription;\n    /**\n     * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n     * closed autocomplete from being reopened if the user switches to another browser tab and then\n     * comes back.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._canOpenOnNextFocus;\n    /**\n     * Whether the element is inside of a ShadowRoot component.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._isInsideShadowRoot;\n    /**\n     * Stream of keyboard events that can close the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closeKeyEventStream;\n    /**\n     * Event handler for when the window is blurred. Needs to be an\n     * arrow function in order to preserve the context.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._windowBlurHandler;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onChange;\n    /**\n     * `View -> model callback called when autocomplete has been touched`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onTouched;\n    /**\n     * The autocomplete panel to be attached to this trigger.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocomplete;\n    /**\n     * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n     * will render the panel underneath the trigger if there is enough space for it to fit in\n     * the viewport, otherwise the panel will be shown above it. If the position is set to\n     * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n     * whether it fits completely in the viewport.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.position;\n    /**\n     * Reference relative to which to position the autocomplete panel.\n     * Defaults to the autocomplete trigger element.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.connectedTo;\n    /**\n     * `autocomplete` attribute to be set on the input element.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocompleteAttribute;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayAttached;\n    /**\n     * Stream of autocomplete option selections.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.optionSelections;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._formField;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin]; }, imports: function () { return [MatOptionModule, OverlayModule, MatCommonModule, CommonModule]; }, exports: function () { return [MatAutocomplete,\n        MatOptionModule,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n                exports: [\n                    MatAutocomplete,\n                    MatOptionModule,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    MatCommonModule\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Translations} from '../../translations/translations.service';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\nexport interface ConfirmModalData {\r\n    title: string;\r\n    body: string;\r\n    bodyBold?: string;\r\n    ok?: string;\r\n    cancel?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'confirm-modal',\r\n    templateUrl: './confirm-modal.component.html',\r\n    styleUrls: ['./confirm-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ConfirmModalComponent implements OnInit {\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ConfirmModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmModalData,\r\n        private i18n: Translations,\r\n        public settings: Settings,\r\n    ) {}\r\n\r\n    public close() {\r\n        this.dialogRef.close(false);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.data.title = this.i18n.t(this.data.title);\r\n        this.data.body = this.i18n.t(this.data.body);\r\n        if (this.data.bodyBold) this.data.bodyBold = this.i18n.t(this.data.bodyBold);\r\n        this.data.ok = this.data.ok ? this.i18n.t(this.data.ok) : this.i18n.t('Confirm');\r\n        this.data.cancel = this.data.cancel ? this.i18n.t(this.data.cancel) : this.i18n.t('Cancel');\r\n    }\r\n\r\n    public confirm() {\r\n        this.dialogRef.close(true);\r\n    }\r\n}","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title\" mat-dialog-title>{{data.title}}</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div class=\"mat-dialog-contents\" mat-dialog-content>\r\n    <p>{{data.body}}</p>\r\n    <p class=\"bold\" *ngIf=\"data.bodyBold\">{{data.bodyBold}}</p>\r\n</div>\r\n\r\n<div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\r\n    <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel cancel-button\">{{data.cancel}}</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" class=\"button primary submit-button\" cdkFocusInitial (click)=\"confirm()\">{{data.ok}}</button>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\nimport {Settings} from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'slug-control',\n    templateUrl: './slug-control.component.html',\n    styleUrls: ['./slug-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: SlugControlComponent,\n        multi: true,\n    }]\n})\nexport class SlugControlComponent implements ControlValueAccessor {\n    private propagateChange: Function;\n    public slug$ = new BehaviorSubject<string>('');\n    public editing$ = new BehaviorSubject<boolean>(false);\n    public slugControl = new FormControl();\n    public baseUri: string;\n    @Input() prefix: string;\n\n    constructor(public settings: Settings) {\n        this.baseUri = this.settings.getBaseUrl();\n    }\n\n    public writeValue(value: string) {\n        this.slug$.next(value);\n        this.slugControl.setValue(value);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    public save() {\n        this.slug$.next(this.slugControl.value);\n        this.propagateChange(this.slug$.value);\n        this.editing$.next(false);\n    }\n\n    public startEditing() {\n        this.editing$.next(true);\n    }\n\n    public getPrefix() {\n        return this.prefix ? this.prefix + '/' : '';\n    }\n}\n","<mat-icon svgIcon=\"link\" class=\"link-icon\"></mat-icon>\r\n<ng-container *ngIf=\"editing$ | async; else editButton\">\r\n    <div class=\"nowrap\">{{baseUri + getPrefix()}}</div>\r\n    <div class=\"input-container\">\r\n        <input type=\"text\" [formControl]=\"slugControl\">\r\n    </div>\r\n    <button type=\"button\" mat-flat-button color=\"gray\" class=\"action-button\" (click)=\"save()\" trans>Save</button>\r\n</ng-container>\r\n\r\n<ng-template #editButton>\r\n    <ng-container *ngIf=\"baseUri + getPrefix() + (slug$ | async) as fullUrl\">\r\n        <a class=\"nowrap\" [href]=\"fullUrl\" target=\"_blank\" [title]=\"fullUrl\">{{fullUrl}}</a>\r\n    </ng-container>\r\n    <button type=\"button\" mat-flat-button color=\"gray\" class=\"action-button\" (click)=\"startEditing()\" trans>Edit</button>\r\n</ng-template>\r\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, NgZone, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-slide-toggle` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nfunction MatSlideToggleDefaultOptions() { }\nif (false) {\n    /**\n     * Whether toggle action triggers value changes in slide toggle.\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableToggleValue;\n    /**\n     * Whether drag action triggers value changes in slide toggle.\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableDragValue;\n}\n/**\n * Injection token to be used to override the default options for `mat-slide-toggle`.\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => ({ disableToggleValue: false }))\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for slide-toggle components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggle)),\n    multi: true\n};\n/**\n * Change event object emitted by a MatSlideToggle.\n */\nclass MatSlideToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} checked\n     */\n    constructor(source, checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\nif (false) {\n    /**\n     * The source MatSlideToggle of the event.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.source;\n    /**\n     * The new `checked` value of the MatSlideToggle.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/**\n * \\@docs-private\n */\nclass MatSlideToggleBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSlideToggleBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/**\n * Represents a slidable \"switch\" toggle that can be moved between on and off.\n */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} tabIndex\n     * @param {?} _ngZone\n     * @param {?} defaults\n     * @param {?=} _animationMode\n     * @param {?=} _dir\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, \n    /**\n     * @deprecated `_ngZone` and `_dir` parameters to be removed.\n     * @breaking-change 10.0.0\n     */\n    _ngZone, defaults, _animationMode, _dir) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /**\n         * Name value will be applied to the input element if present.\n         */\n        this.name = null;\n        /**\n         * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n         */\n        this.labelPosition = 'after';\n        /**\n         * Used to set the aria-label attribute on the underlying input element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Used to set the aria-labelledby attribute on the underlying input element.\n         */\n        this.ariaLabelledby = null;\n        /**\n         * An event will be dispatched each time the slide-toggle changes its value.\n         */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle is dragged.\n         * This event is always emitted when the user drags the slide toggle to make a change greater\n         * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n         * the user toggles the slide toggle to change its value.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 10.0.0\n         */\n        this.dragChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the slide-toggle is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Whether the slide-toggle element is checked or not.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._onTouched()));\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Method being called whenever the underlying input emits a change event.\n     * @param {?} event\n     * @return {?}\n     */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /**\n     * Method being called whenever the slide-toggle has been clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the slide-toggle.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\", dragChange: \"dragChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r51 = ɵngcc0.ɵɵreference(1);\n        const _r55 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r55.textContent || !_r55.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r51)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc4.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    dragChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], dragChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._uniqueId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._required;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._checked;\n    /**\n     * Reference to the thumb HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbEl;\n    /**\n     * Reference to the thumb bar HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbBarEl;\n    /**\n     * Name value will be applied to the input element if present.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.name;\n    /**\n     * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.id;\n    /**\n     * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.labelPosition;\n    /**\n     * Used to set the aria-label attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabel;\n    /**\n     * Used to set the aria-labelledby attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabelledby;\n    /**\n     * An event will be dispatched each time the slide-toggle changes its value.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.change;\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.toggleChange;\n    /**\n     * An event will be dispatched each time the slide-toggle is dragged.\n     * This event is always emitted when the user drags the slide toggle to make a change greater\n     * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n     * the user toggles the slide toggle to change its value.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatSlideToggle.prototype.dragChange;\n    /**\n     * Reference to the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._inputElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatSlideToggle.prototype.defaults;\n    /** @type {?} */\n    MatSlideToggle.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggleRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based slide-toggle implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ],\n        _MatSlideToggleRequiredValidatorModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatSlideToggle,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","<data-table [dataSource]=\"dataSource\" [itemsName]=\"config[0].resourceName\" class=\"responsive-material-table\" matSort>\r\n    <a routerLink=\"new\" mat-raised-button color=\"accent\" *ngIf=\"currentUser.hasPermission('custom_pages.create')\" headerActions trans>Add</a>\r\n\r\n    <button mat-icon-button [matTooltip]=\"'Delete selected' | trans\" (click)=\"maybeDeleteSelectedPages()\" headerSelectedActions *ngIf=\"filterByUserId() || currentUser.hasPermission('custom_pages.delete')\">\r\n        <mat-icon svgIcon=\"delete\"></mat-icon>\r\n    </button>\r\n\r\n    <ng-container matColumnDef=\"slug\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Slug</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let page\" data-label=\"slug\"><a [href]=\"getPageUrl(page)\" target=\"_blank\">{{page.slug}}</a> </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"body\">\r\n        <mat-header-cell *matHeaderCellDef trans>Body</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let page\">{{page.body}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"insideAdmin()\">\r\n        <ng-container matColumnDef=\"user\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header=\"user_id\" trans>User</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let page\" data-label=\"User: \">\r\n                <ng-container *ngIf=\"page.user\">\r\n                    <img [src]=\"page.user.avatar\">\r\n                    <span>{{page.user.display_name}}</span>\r\n                </ng-container>\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"type\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header trans>Type</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let page\" class=\"hidden-on-mobile\" trans>{{page.type ? viewName(page.type) : 'default'}}</mat-cell>\r\n        </ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"updated_at\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Last Updated</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let page\" data-label=\"Last Updated:\">{{page.updated_at | formattedDate}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"edit\">\r\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let page\">\r\n            <a [routerLink]=\"[page.id, 'edit']\" mat-icon-button *ngIf=\"filterByUserId() || currentUser.hasPermission('custom_pages.update')\" [matTooltip]=\"'Edit page' | trans\">\r\n                <mat-icon svgIcon=\"edit\"></mat-icon>\r\n            </a>\r\n        </mat-cell>\r\n    </ng-container>\r\n</data-table>\r\n","import {ChangeDetectionStrategy, Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\r\nimport {Paginator} from '@common/shared/paginator.service';\r\nimport {CustomPage} from '@common/core/types/models/CustomPage';\r\nimport {CUSTOM_PAGE_URI, Pages} from '@common/core/pages/shared/pages.service';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport {CUSTOM_PAGE_CONFIG_TOKEN, CustomPageManagerConfig} from '@common/core/pages/manager/custom-page-config';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'custom-pages-index',\r\n    templateUrl: './custom-pages-index.component.html',\r\n    styleUrls: ['./custom-pages-index.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [Paginator],\r\n})\r\nexport class CustomPagesIndexComponent implements OnInit {\r\n    @ViewChild(MatSort, { static: true }) matSort: MatSort;\r\n    public dataSource: PaginatedDataTableSource<CustomPage>;\r\n\r\n    constructor(\r\n        public paginator: Paginator<CustomPage>,\r\n        private pages: Pages,\r\n        private modal: Modal,\r\n        public currentUser: CurrentUser,\r\n        private settings: Settings,\r\n        private router: Router,\r\n        @Inject(CUSTOM_PAGE_CONFIG_TOKEN) public config: CustomPageManagerConfig[],\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.dataSource = new PaginatedDataTableSource<CustomPage>({\r\n            uri: CUSTOM_PAGE_URI,\r\n            dataPaginator: this.paginator,\r\n            matSort: this.matSort,\r\n            staticParams: {\r\n                type: this.config[0].type,\r\n                userId: this.filterByUserId() ? this.currentUser.get('id') : null,\r\n            }\r\n        });\r\n    }\r\n\r\n    public maybeDeleteSelectedPages() {\r\n        this.modal.show(ConfirmModalComponent, {\r\n            title: 'Delete Pages',\r\n            body:  'Are you sure you want to delete selected pages?',\r\n            ok:    'Delete'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.deleteSelectedPages();\r\n        });\r\n    }\r\n\r\n    public deleteSelectedPages() {\r\n        const ids = this.dataSource.getSelectedItems();\r\n        this.pages.delete(ids).subscribe(() => {\r\n            this.dataSource.reset();\r\n        });\r\n    }\r\n\r\n    public getPageUrl(page: CustomPage): string {\r\n        return this.settings.getBaseUrl() + 'pages/' + page.id + '/' + page.slug;\r\n    }\r\n\r\n    public insideAdmin(): boolean {\r\n        return this.router.url.indexOf('admin') > -1;\r\n    }\r\n\r\n    public viewName(name: string) {\r\n        return name.replace(/_/g, ' ');\r\n    }\r\n\r\n    public filterByUserId(): boolean {\r\n        return this.config[0].filterByUserId;\r\n    }\r\n}\r\n","import {Injectable, NgZone} from '@angular/core';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {LazyLoaderService} from '../../core/utils/lazy-loader.service';\r\nimport {BreakpointsService} from '../../core/ui/breakpoints.service';\r\nimport {Editor, EditorManager} from 'tinymce';\r\nimport {Translations} from '../../core/translations/translations.service';\r\n\r\nconst EDITOR_TOOLBAR_HEIGHT = 74;\r\n\r\ndeclare const tinymce: EditorManager;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TinymceTextEditor {\r\n    private bootstrapPromise: Promise<Editor> | boolean;\r\n    private bootstrapPromiseResolve: any;\r\n    private config: { [key: string]: any };\r\n    public tinymceInstance: Editor|any;\r\n\r\n    constructor(\r\n        private settings: Settings,\r\n        private zone: NgZone,\r\n        private lazyLoader: LazyLoaderService,\r\n        private breakpoints: BreakpointsService,\r\n        private i18n: Translations,\r\n    ) {\r\n        this.makeBootstrapPromise();\r\n    }\r\n\r\n    public reset() {\r\n        if (!this.editorIsReady()) return;\r\n        this.tinymceInstance.setContent('');\r\n        this.tinymceInstance.undoManager.clear();\r\n    }\r\n\r\n    public focus() {\r\n        this.waitForEditor().then(() => {\r\n            this.tinymceInstance.focus(false);\r\n        });\r\n    }\r\n\r\n    public hasUndo(): boolean {\r\n        return this.editorIsReady() && this.tinymceInstance.undoManager.hasUndo();\r\n    }\r\n\r\n    public hasRedo(): boolean {\r\n        return this.editorIsReady() && this.tinymceInstance.undoManager.hasRedo();\r\n    }\r\n\r\n    /**\r\n     * Queries the current state for specified tinymce command.\r\n     * For example if the current selection is \"bold\".\r\n     */\r\n    public queryCommandState(name: string): boolean | number {\r\n        return this.editorIsReady() && this.tinymceInstance.queryCommandState(name);\r\n    }\r\n\r\n    public execCommand(name: string, value: string | number = null) {\r\n        this.waitForEditor().then(() => {\r\n            this.zone.run(() => {\r\n                this.tinymceInstance.execCommand(name, false, value);\r\n            });\r\n        });\r\n    }\r\n\r\n    public getContents(params?: Object): string {\r\n        if (!this.editorIsReady()) return '';\r\n        return this.tinymceInstance.getContent(params);\r\n    }\r\n\r\n    public setContents(contents: string) {\r\n        this.waitForEditor().then(() => {\r\n            if (!this.tinymceInstance.undoManager) return;\r\n\r\n            this.tinymceInstance.undoManager.transact(() => {\r\n                this.tinymceInstance.setContent(contents);\r\n            });\r\n\r\n            this.tinymceInstance.selection.setCursorLocation();\r\n            this.tinymceInstance.nodeChanged();\r\n            this.tinymceInstance.execCommand('mceResize');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Insert specified contents at the end of tinymce.\r\n     */\r\n    public insertContents(contents) {\r\n        this.waitForEditor().then(() => {\r\n            this.tinymceInstance.execCommand('mceInsertContent', false, contents);\r\n            setTimeout(() => this.tinymceInstance.selection.collapse());\r\n        });\r\n    }\r\n\r\n    public insertImage(url: string) {\r\n        this.waitForEditor().then(() => {\r\n            this.insertContents('<img src=\"' + url + '\"/>');\r\n            setTimeout(() => this.execCommand('mceAutoResize'), 500);\r\n        });\r\n    }\r\n\r\n    public waitForEditor(): Promise<Editor> {\r\n        // editor already bootstrapped\r\n        if (this.tinymceInstance) {\r\n            return new Promise(resolve => resolve(this.tinymceInstance));\r\n        }\r\n        // editor is still bootstrapping\r\n        if (this.bootstrapPromise) {\r\n            return this.bootstrapPromise as Promise<Editor>;\r\n        }\r\n    }\r\n\r\n    public setConfig(config: object) {\r\n        this.config = config;\r\n        this.loadTinymce().then(() => {\r\n            this.initTinymce();\r\n        });\r\n    }\r\n\r\n    private editorIsReady(): boolean {\r\n        return !this.bootstrapPromise && !!this.tinymceInstance && !!this.tinymceInstance.undoManager;\r\n    }\r\n\r\n    private loadTinymce(): Promise<any> {\r\n        return this.lazyLoader.loadAsset('js/tinymce/tinymce.min.js', {type: 'js'});\r\n    }\r\n\r\n    private initTinymce() {\r\n        const config: any = {\r\n            target: this.config.textAreaEl.nativeElement,\r\n            plugins: ['link', 'codesample', 'paste', 'autoresize'],\r\n            branding: false,\r\n            browser_spellcheck: true,\r\n            max_height: this.config.maxHeight,\r\n            min_height: this.config.minHeight,\r\n            autoresize_on_init: false,\r\n            paste_as_text: true,\r\n            elementpath: false,\r\n            statusbar: false,\r\n            menubar: false,\r\n            convert_urls: false,\r\n            forced_root_block: false,\r\n            element_format: 'html',\r\n            body_class: 'editor-body',\r\n            content_style: `html {font-size: 62.5%;}\r\n.editor-body {font-size: 1.4rem;font-family: \"Roboto\", \"Helvetica Neue\", sans-serif;color: rgba(0, 0, 0, .87);}\r\nimg {max-width: 100%}\r\ncode[class*=language-], pre[class*=language-] {font-size: inherit;}`,\r\n            content_css: ['https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,400italic'],\r\n            default_link_target: '_blank',\r\n            link_assume_external_targets: true,\r\n            target_list: false,\r\n            link_title: false,\r\n            image_dimensions: false,\r\n            image_description: false,\r\n            setup: editor => {\r\n                this.tinymceInstance = editor;\r\n                editor.on('change', () => this.config.onChange.emit(editor.getContent()));\r\n\r\n                editor.on('click', () => {\r\n                    // need to run angular zone on editor (iframe) click\r\n                    // so custom editor buttons are highlighted properly\r\n                    this.zone.run(() => {\r\n                    });\r\n                });\r\n\r\n                editor.shortcuts.add('ctrl+13', 'desc', () => {\r\n                    this.zone.run(() => {\r\n                        this.config.onChange.emit(editor.getContent());\r\n                        this.config.onCtrlEnter.emit();\r\n                    });\r\n                });\r\n            },\r\n            init_instance_callback: () => {\r\n                this.bootstrapPromise = false;\r\n                this.bootstrapPromiseResolve(this.tinymceInstance);\r\n            }\r\n        };\r\n\r\n        // need to show toolbar on mobile, otherwise tinymce will error out\r\n        if (!this.breakpoints.isMobile$.value) {\r\n            config.toolbar = false;\r\n        }\r\n\r\n        if (this.config['showAdvancedControls']) {\r\n            config.plugins = config.plugins.concat(['media', 'hr', 'visualblocks', 'visualchars', 'wordcount']);\r\n            config.forced_root_block = 'p';\r\n            config.statusbar = true;\r\n            config.autoresize_on_init = true;\r\n            config.extended_valid_elements = 'svg[*],use[*],iframe[src],script[src]';\r\n            config.elementpath = true;\r\n            config.content_css.push(this.settings.getAssetUrl() + 'css/advanced-editor-styles.css');\r\n            config.target_list = [\r\n                {title: this.i18n.t('Current window'), value: ''},\r\n                {title: this.i18n.t('New Window'), value: '_blank'},\r\n            ];\r\n        }\r\n\r\n        if (this.config['minHeight'] === 'auto') {\r\n            const height = this.config.editorEl.nativeElement.parentElement.offsetHeight - EDITOR_TOOLBAR_HEIGHT - 4;\r\n            config.min_height = height;\r\n            config.max_height = height;\r\n        }\r\n\r\n        tinymce.init(config);\r\n    }\r\n\r\n    public destroyEditor() {\r\n        // catch error that sometimes occurs on EDGE when\r\n        // trying to destroy editor that is no longer in the DOM\r\n        try {\r\n            if (this.tinymceInstance) {\r\n                this.tinymceInstance.remove();\r\n            }\r\n\r\n            this.tinymceInstance = null;\r\n            this.makeBootstrapPromise();\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a tinymce bootstrap promise.\r\n     */\r\n    private makeBootstrapPromise() {\r\n        this.bootstrapPromise = new Promise(resolve => this.bootstrapPromiseResolve = resolve);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UploadValidator } from '../../uploads/validation/upload-validator';\r\nimport { FileSizeValidation } from '../../uploads/validation/validations/file-size-validation';\r\nimport { convertToBytes } from '../../core/utils/convertToBytes';\r\nimport { FileTypeValidation } from '../../uploads/validation/validations/file-type-validation';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TextEditorImageValidator extends UploadValidator {\r\n    protected readonly DEFAULT_MAX_SIZE_MB = 3;\r\n\r\n    protected initValidations() {\r\n        const validations = [\r\n            new FileSizeValidation(\r\n                {maxSize: convertToBytes(this.DEFAULT_MAX_SIZE_MB, 'MB')},\r\n                this.i18n\r\n            ),\r\n            new FileTypeValidation({types: ['image']}, this.i18n),\r\n        ];\r\n\r\n        this.validations.push(...validations);\r\n    }\r\n}\r\n","<div class=\"editor-header\">\r\n    <div class=\"toolbar-row\">\r\n        <div class=\"header-actions\" *ngIf=\"inlineUploadPrefix && currentUser.hasPermission('files.create')\">\r\n            <button class=\"no-style editor-button\" type=\"button\" [matTooltip]=\"'Add Attachment' | trans\"\r\n                    (click)=\"openFileUploadDialog()\">\r\n                <mat-icon svgIcon=\"attachment\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"header-actions\" *ngIf=\"!basic\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('codesample')\"\r\n                    [matTooltip]=\"'Insert Code Sample' | trans\">\r\n                <mat-icon svgIcon=\"code\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('undo')\"\r\n                    [class.disabled]=\"!hasUndo()\" [matTooltip]=\"'Undo' | trans\">\r\n                <mat-icon svgIcon=\"undo\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('redo')\"\r\n                    [class.disabled]=\"!hasRedo()\" [matTooltip]=\"'Redo' | trans\">\r\n                <mat-icon svgIcon=\"redo\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('bold')\"\r\n                    [class.active]=\"queryCommandState('bold')\" [matTooltip]=\"'Bold' | trans\">\r\n                <mat-icon svgIcon=\"format-bold\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('italic')\"\r\n                    [class.active]=\"queryCommandState('italic')\" [matTooltip]=\"'Italic' | trans\">\r\n                <mat-icon svgIcon=\"format-italic\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('underline')\"\r\n                    [class.active]=\"queryCommandState('underline')\" [matTooltip]=\"'Underline' | trans\">\r\n                <mat-icon svgIcon=\"format-underlined\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('insertunorderedlist')\"\r\n                    [class.active]=\"queryCommandState('unorderedlist')\" [matTooltip]=\"'Unordered List' | trans\">\r\n                <mat-icon svgIcon=\"format-list-bulleted\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('insertorderedlist')\"\r\n                    [class.active]=\"queryCommandState('orderedlist')\" [matTooltip]=\"'Ordered List' | trans\">\r\n                <mat-icon svgIcon=\"format-list-numbered\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"header-actions\" *ngIf=\"!basic\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('mceLink')\"\r\n                    [class.active]=\"queryCommandState('link')\" [matTooltip]=\"'Insert Link' | trans\">\r\n                <mat-icon svgIcon=\"link\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button image-modal-button\" (click)=\"openInsertImageModal()\"\r\n                    *ngIf=\"currentUser.hasPermission('files.create')\" [matTooltip]=\"'Insert Image' | trans\">\r\n                <mat-icon svgIcon=\"image\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <ng-content select=\"[customButtons]\"></ng-content>\r\n\r\n        <div class=\"header-actions last\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('removeformat')\"\r\n                    [matTooltip]=\"'Remove Formatting' | trans\">\r\n                <mat-icon svgIcon=\"format-clear\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <ng-content select=\"[header]\"></ng-content>\r\n    </div>\r\n    <div class=\"toolbar-row\" *ngIf=\"showAdvancedControls\">\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" [matMenuTriggerFor]=\"insertMenu\"\r\n                    class=\"no-style editor-button text-button insert-button\">\r\n                <span trans>Insert</span>\r\n                <mat-icon svgIcon=\"arrow-drop-down\" class=\"caret\"></mat-icon>\r\n            </button>\r\n            <mat-menu #insertMenu>\r\n                <div mat-menu-item (click)=\"execCommand('InsertHorizontalRule')\">\r\n                    <mat-icon svgIcon=\"remove\"></mat-icon>\r\n                    <span trans>Horizontal Line</span>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('mceLink')\">\r\n                    <mat-icon svgIcon=\"link\"></mat-icon>\r\n                    <span trans>Link</span>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('mceMedia')\">\r\n                    <mat-icon svgIcon=\"videocam\"></mat-icon>\r\n                    <span trans>Media</span>\r\n                </div>\r\n                <div mat-menu-item (click)=\"insertInfoContainer('important')\" trans>\r\n                    <mat-icon svgIcon=\"star\"></mat-icon>\r\n                    <span trans>Important</span>\r\n                </div>\r\n                <div mat-menu-item (click)=\"insertInfoContainer('warning')\" trans>\r\n                    <mat-icon svgIcon=\"warning\"></mat-icon>\r\n                    <span trans>Warning</span>\r\n                </div>\r\n                <div mat-menu-item (click)=\"insertInfoContainer('note')\" trans>\r\n                    <mat-icon svgIcon=\"note\"></mat-icon>\r\n                    <span trans>Note</span>\r\n                </div>\r\n            </mat-menu>\r\n        </div>\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" [matMenuTriggerFor]=\"formatMenu\" class=\"no-style editor-button text-button format-button\">\r\n                <span trans>Format</span>\r\n                <mat-icon svgIcon=\"arrow-drop-down\" class=\"caret\"></mat-icon>\r\n            </button>\r\n            <mat-menu #formatMenu class=\"format-menu menu-with-alt-text\">\r\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'h1')\">\r\n                    <div class=\"text\" trans>Heading 1</div>\r\n                    <div class=\"alt-text\">Ctrl+Alt+1</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'h2')\">\r\n                    <div class=\"text\" trans>Heading 2</div>\r\n                    <div class=\"alt-text\">Ctrl+Alt+2</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'h3')\">\r\n                    <div class=\"text\" trans>Heading 3</div>\r\n                    <div class=\"alt-text\">Ctrl+Alt+3</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('strikethrough')\">\r\n                    <div class=\"text\" trans>Strikethrough</div>\r\n                    <div class=\"alt-text\">Alt+Shift+5</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('superscript')\">\r\n                    <div class=\"text\" trans>Superscript</div>\r\n                    <div class=\"alt-text\">Ctrl+.</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('subscript')\">\r\n                    <div class=\"text\" trans>Subscript</div>\r\n                    <div class=\"alt-text\">Ctrl+,</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('mceBlockQuote')\">\r\n                    <div class=\"text\" trans>Blockquote</div>\r\n                    <div class=\"alt-text\">Ctrl+Alt+B</div>\r\n                </div>\r\n                <div mat-menu-item (click)=\"execCommand('FormatBlock', 'p')\">\r\n                    <div class=\"text\" trans>Paragraph</div>\r\n                    <div class=\"alt-text\">Ctrl+Alt+0</div>\r\n                </div>\r\n            </mat-menu>\r\n        </div>\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" [matMenuTriggerFor]=\"colorMenu\" class=\"no-style editor-button text-button color-button\" #colorPickerOrigin>\r\n                <span trans>Color</span>\r\n                <mat-icon svgIcon=\"arrow-drop-down\" class=\"caret\"></mat-icon>\r\n            </button>\r\n            <mat-menu #colorMenu class=\"color-dropdown\">\r\n                <div mat-menu-item class=\"text-color-item\" (click)=\"showColorPicker('ForeColor', colorPickerOrigin)\">\r\n                    <mat-icon svgIcon=\"format-color-text\"></mat-icon>\r\n                    <span trans>Text Color</span>\r\n                </div>\r\n                <div mat-menu-item class=\"bg-color-item\" (click)=\"showColorPicker('HiliteColor', colorPickerOrigin)\">\r\n                    <mat-icon svgIcon=\"format-color-fill\"></mat-icon>\r\n                    <span trans>Background Color</span>\r\n                </div>\r\n            </mat-menu>\r\n        </div>\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('justifyLeft')\"\r\n                    [class.active]=\"queryCommandState('justifyLeft')\" [matTooltip]=\"'Align Left' | trans\">\r\n                <mat-icon svgIcon=\"format-align-left\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('justifyCenter')\"\r\n                    [class.active]=\"queryCommandState('justifyCenter')\" [matTooltip]=\"'Center' | trans\">\r\n                <mat-icon svgIcon=\"format-align-center\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('justifyRight')\"\r\n                    [class.active]=\"queryCommandState('justifyRight')\" [matTooltip]=\"'Align Right' | trans\">\r\n                <mat-icon svgIcon=\"format-align-right\"></mat-icon>\r\n            </button>\r\n        </div>\r\n        <div class=\"header-actions\">\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('Outdent')\" [matTooltip]=\"'Decrease Indent' | trans\">\r\n                <mat-icon svgIcon=\"format-indent-decrease\"></mat-icon>\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button\" (click)=\"execCommand('Indent')\" [matTooltip]=\"'Increase Indent' | trans\">\r\n                <mat-icon svgIcon=\"format-indent-increase\"></mat-icon>\r\n            </button>\r\n        </div>\r\n        <div class=\"header-actions editor-toggle-buttons\">\r\n            <button type=\"button\" class=\"no-style editor-button visual-mode-button\"\r\n                    [class.active]=\"activeEditor === 'visual'\" (click)=\"showVisualEditor()\" trans>Visual\r\n            </button>\r\n            <button type=\"button\" class=\"no-style editor-button source-mode-button\"\r\n                    [class.active]=\"activeEditor === 'source'\" (click)=\"showSourceEditor()\" trans>Source\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<textarea class=\"source-textarea\" #sourceArea rows=\"8\" [style.min-height]=\"minHeight\" style=\"display: none\" [formControl]=\"sourceAreaControl\" (blur)=\"setContents(sourceAreaControl.value)\"></textarea>\r\n<textarea class=\"visual-textarea\" #visualArea rows=\"8\" [style.min-height]=\"minHeight\"></textarea>\r\n\r\n<ng-content select=\"[footer]\"></ng-content>\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    Output,\r\n    Renderer2,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {TinymceTextEditor} from './editors/tinymce-text-editor.service';\r\nimport {Settings} from '../core/config/settings.service';\r\nimport {OverlayPanel} from '../core/ui/overlay-panel/overlay-panel.service';\r\nimport {openUploadWindow} from '../uploads/utils/open-upload-window';\r\nimport {UploadQueueService} from '../uploads/upload-queue/upload-queue.service';\r\nimport {TextEditorImageValidator} from './validation/text-editor-image-validator';\r\nimport {UploadInputTypes} from '../uploads/upload-input-config';\r\nimport {CurrentUser} from '../auth/current-user';\r\nimport {BOTTOM_POSITION} from '../core/ui/overlay-panel/positions/bottom-position';\r\nimport {ucFirst} from '../core/utils/uc-first';\r\nimport {FormControl} from '@angular/forms';\r\nimport {debounceTime} from 'rxjs/operators';\r\nimport {UploadUri} from '@common/uploads/types/upload-uri.enum';\r\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\n\r\nexport interface LinkAttrs {\r\n    text: string;\r\n    href: string;\r\n    target?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'text-editor',\r\n    templateUrl: './text-editor.component.html',\r\n    styleUrls: ['./text-editor.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        UploadQueueService,\r\n        TinymceTextEditor,\r\n    ]\r\n})\r\nexport class TextEditorComponent implements OnDestroy, AfterViewInit {\r\n    @ViewChild('visualArea', { static: true }) visualTextArea: ElementRef;\r\n    @ViewChild('sourceArea', { static: true }) sourceTextArea: ElementRef;\r\n\r\n    public sourceAreaControl = new FormControl();\r\n    public activeEditor = 'visual';\r\n\r\n    @Input() showAdvancedControls = false;\r\n    @Input() basic = false;\r\n    @Input() minHeight: number|string = 183;\r\n    @Input() maxHeight = 530;\r\n    @Input() inlineUploadPrefix: string;\r\n\r\n    @Output() onChange: EventEmitter<string> = new EventEmitter();\r\n    @Output() onCtrlEnter = new EventEmitter();\r\n    @Output() onFileUpload = new EventEmitter<UploadedFile[]>();\r\n\r\n    constructor(\r\n        public editor: TinymceTextEditor,\r\n        public currentUser: CurrentUser,\r\n        private uploadQueue: UploadQueueService,\r\n        private settings: Settings,\r\n        private renderer: Renderer2,\r\n        public el: ElementRef,\r\n        private overlayPanel: OverlayPanel,\r\n        private imageValidator: TextEditorImageValidator,\r\n    ) {}\r\n\r\n    ngAfterViewInit() {\r\n        this.bootTextEditor();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyEditor();\r\n    }\r\n\r\n    public reset() {\r\n        this.editor.reset();\r\n    }\r\n\r\n    public focus() {\r\n        this.editor.focus();\r\n    }\r\n\r\n    public hasUndo(): boolean {\r\n        return this.editor.hasUndo();\r\n    }\r\n\r\n    public hasRedo(): boolean {\r\n        return this.editor.hasRedo();\r\n    }\r\n\r\n    /**\r\n     * Queries the current state for specified text editor command.\r\n     * For example if the current selection is \"bold\".\r\n     */\r\n    public queryCommandState(name: string): boolean|number {\r\n        return this.editor.queryCommandState(name);\r\n    }\r\n\r\n    public execCommand(name: string, value: string|number = null) {\r\n        this.editor.execCommand(name, value);\r\n    }\r\n\r\n    /**\r\n     * Insert information container of specified type into the editor.\r\n     */\r\n    public insertInfoContainer(type: string) {\r\n        // TODO: refactor into shortcodes maybe if need more of similar buttons in the future\r\n        // TODO: translate once angular translation service is available\r\n        this.insertContents(\r\n            `<div class=\"widget widget-${type}\"><div class=\"title\">${ucFirst(type)}:</div><br></div><br>`\r\n        );\r\n    }\r\n\r\n    public async showColorPicker(command: string, origin: HTMLElement) {\r\n        const { BeColorPickerModule } = await import('@common/core/ui/color-picker/be-color-picker.module');\r\n        this.overlayPanel.open(BeColorPickerModule.components.panel, {origin: new ElementRef(origin), position: BOTTOM_POSITION})\r\n            .valueChanged().pipe(debounceTime(50)).subscribe(color => {\r\n                this.execCommand(command, color);\r\n            });\r\n    }\r\n\r\n    public showVisualEditor() {\r\n        if ( ! this.editor.tinymceInstance.contentAreaContainer || this.activeEditor === 'visual') return;\r\n\r\n        this.activeEditor = 'visual';\r\n\r\n        this.renderer.setStyle(this.editor.tinymceInstance.contentAreaContainer, 'display', 'block');\r\n        this.renderer.setStyle(this.sourceTextArea.nativeElement, 'display', 'none');\r\n\r\n        this.editor.focus();\r\n    }\r\n\r\n    public showSourceEditor() {\r\n        if ( ! this.editor.tinymceInstance.contentAreaContainer || this.activeEditor === 'source') return;\r\n\r\n        this.activeEditor = 'source';\r\n\r\n        this.renderer.setStyle(this.sourceTextArea.nativeElement, 'height', this.editor.tinymceInstance.contentAreaContainer.offsetHeight + 'px');\r\n        this.renderer.setStyle(this.sourceTextArea.nativeElement, 'display', 'block');\r\n        this.renderer.setStyle(this.editor.tinymceInstance.contentAreaContainer, 'display', 'none');\r\n\r\n        this.sourceAreaControl.setValue(this.editor.getContents({source_view: true}));\r\n    }\r\n\r\n    public openFileUploadDialog() {\r\n        openUploadWindow({multiple: true}).then(fileList => {\r\n            this.onFileUpload.emit(fileList);\r\n        });\r\n    }\r\n\r\n    public openInsertImageModal() {\r\n        const params: UploadApiConfig = {\r\n            uri: UploadUri.Image,\r\n            validator: this.imageValidator,\r\n            httpParams: {diskPrefix: this.inlineUploadPrefix}\r\n        };\r\n        openUploadWindow({types: [UploadInputTypes.image]}).then(files => {\r\n            this.uploadQueue.start(files, params).subscribe(response => {\r\n                this.insertImage(this.settings.getBaseUrl(true) + response.fileEntry.url);\r\n            });\r\n        });\r\n    }\r\n\r\n    public getContents(): string {\r\n        return this.editor.getContents();\r\n    }\r\n\r\n    public setContents(contents: string) {\r\n        this.editor.setContents(contents);\r\n    }\r\n\r\n    public insertContents(contents) {\r\n        this.editor.insertContents(contents);\r\n    }\r\n\r\n    public insertImage(url: string) {\r\n        this.editor.insertImage(url);\r\n    }\r\n\r\n    public insertLink(attrs: LinkAttrs) {\r\n        const target = attrs.target || 'self';\r\n        this.insertContents(`<a href=\"${attrs.href}\" target=\"${target}\">${attrs.text}</a>`);\r\n    }\r\n\r\n    public destroyEditor() {\r\n        this.editor.destroyEditor();\r\n    }\r\n\r\n    private bootTextEditor() {\r\n        this.editor.setConfig({\r\n            textAreaEl: this.visualTextArea,\r\n            editorEl: this.el,\r\n            minHeight: this.minHeight,\r\n            maxHeight: this.maxHeight,\r\n            onChange: this.onChange,\r\n            onCtrlEnter: this.onCtrlEnter,\r\n            showAdvancedControls: this.showAdvancedControls,\r\n        });\r\n    }\r\n}\r\n","<ng-container *ngIf=\"errors$ | async as errors\" [formGroup]=\"form\">\r\n    <div class=\"many-inputs input-header\">\r\n        <div class=\"input-container\">\r\n            <label for=\"page-title\" trans>Page Title</label>\r\n            <input type=\"text\" id=\"page-title\" formControlName=\"title\">\r\n            <div class=\"error\" *ngIf=\"errors.title\">{{errors.title}}</div>\r\n        </div>\r\n\r\n        <div class=\"input-container slug-input-container\" *ngIf=\"config[0].showSlug\">\r\n            <slug-control [prefix]=\"slugPrefix()\" formControlName=\"slug\"></slug-control>\r\n            <div class=\"error\" *ngIf=\"errors.slug\">{{errors.slug}}</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"actions\">\r\n        <button mat-raised-button color=\"accent\" (click)=\"crupdatePage()\">\r\n            <span *ngIf=\"page\" trans>Update</span>\r\n            <span *ngIf=\"!page\" trans>Create</span>\r\n        </button>\r\n        <a mat-button [routerLink]=\"backRoute()\" trans>Cancel</a>\r\n    </div>\r\n\r\n    <div class=\"errors\">\r\n        <div class=\"error\" *ngIf=\"errors.body\">{{errors.body}}</div>\r\n    </div>\r\n\r\n    <div class=\"editor-container\">\r\n        <text-editor inlineUploadPrefix=\"page_media\" class=\"text-editor\" minHeight=\"auto\" (onChange)=\"setBody($event)\" [showAdvancedControls]=\"true\"></text-editor>\r\n    </div>\r\n\r\n    <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\r\n</ng-container>\r\n","import {ChangeDetectionStrategy, Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {delay, distinctUntilChanged, filter, finalize} from 'rxjs/operators';\r\nimport {TextEditorComponent} from '@common/text-editor/text-editor.component';\r\nimport {CustomPage} from '@common/core/types/models/CustomPage';\r\nimport {Pages} from '@common/core/pages/shared/pages.service';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {CUSTOM_PAGE_CONFIG_TOKEN, CustomPageManagerConfig} from '@common/core/pages/manager/custom-page-config';\r\nimport {slugifyString} from '@common/core/utils/slugify-string';\r\nimport {bindSlugTo} from '@common/shared/form-controls/slug-control/bind-slug-to';\r\n\r\n@Component({\r\n    selector: 'crupdate-page',\r\n    templateUrl: './crupdate-page.component.html',\r\n    styleUrls: ['./crupdate-page.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CrupdatePageComponent implements OnInit {\r\n    @ViewChild(TextEditorComponent) textEditor: TextEditorComponent;\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public updating$ = new BehaviorSubject<boolean>(false);\r\n    public page: CustomPage;\r\n    public form = this.fb.group({\r\n        title: [''],\r\n        slug: [''],\r\n        body: [''],\r\n        type: [''],\r\n    });\r\n    public errors$ = new BehaviorSubject<{\r\n        body?: string,\r\n        slug?: string,\r\n        title?: string,\r\n    }>({});\r\n\r\n    constructor(\r\n        private pages: Pages,\r\n        private route: ActivatedRoute,\r\n        private toast: Toast,\r\n        private router: Router,\r\n        private fb: FormBuilder,\r\n        @Inject(CUSTOM_PAGE_CONFIG_TOKEN) public config: CustomPageManagerConfig[],\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            this.getPage(params.id);\r\n        });\r\n\r\n        bindSlugTo(this.form.get('title'));\r\n    }\r\n\r\n    public crupdatePage() {\r\n        this.loading$.next(true);\r\n        const request = this.updating$.value ?\r\n            this.pages.update(this.page.id, this.getPayload()) :\r\n            this.pages.create(this.getPayload());\r\n\r\n        request.pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(() => {\r\n                this.router.navigate(this.backRoute(), {relativeTo: this.route});\r\n                this.toast.open(this.updating$.value ? 'Page updated' : 'Page created');\r\n            }, err => this.errors$.next(err.messages));\r\n    }\r\n\r\n    public getPage(id: number) {\r\n        if ( ! id) return;\r\n        this.loading$.next(true);\r\n        this.pages.get(id).pipe(delay(0)).subscribe(response => {\r\n            this.updating$.next(true);\r\n            this.page = response.page;\r\n            this.form.patchValue(response.page);\r\n            this.textEditor.setContents(response.page.body || '');\r\n            this.loading$.next(false);\r\n        });\r\n    }\r\n\r\n    private getPayload(): CustomPage {\r\n        const payload = {...this.form.value};\r\n        if ( ! payload.type) {\r\n            payload.type = this.config[0].type;\r\n        }\r\n        return payload;\r\n    }\r\n\r\n    public setBody(content: string) {\r\n        this.form.patchValue({body: content});\r\n    }\r\n\r\n    public backRoute() {\r\n        return this.page ? ['../../'] : ['../'];\r\n    }\r\n\r\n    public slugPrefix() {\r\n        return 'pages/' + (this.page ? this.page.id : '*');\r\n    }\r\n}\r\n","import {Routes} from '@angular/router';\r\nimport {CustomPagesIndexComponent} from '@common/core/pages/manager/custom-pages-index/custom-pages-index.component';\r\nimport {CrupdatePageComponent} from '@common/core/pages/manager/crupdate-page/crupdate-page.component';\r\n\r\nexport const customPagesManagerRoutes: Routes = [\r\n    {\r\n        path: 'custom-pages',\r\n        component: CustomPagesIndexComponent,\r\n        data: {permissions: ['custom_pages.view'], name: 'Custom Pages'}\r\n    },\r\n    {\r\n        path: 'custom-pages/new',\r\n        component: CrupdatePageComponent,\r\n        data: {permissions: ['custom_pages.create'], name: 'Add New Page'}\r\n    },\r\n    {\r\n        path: 'custom-pages/:id/edit',\r\n        component: CrupdatePageComponent,\r\n        data: {permissions: ['custom_pages.update'], name: 'Edit Page'}\r\n    },\r\n];\r\n\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {GetLinkGroupResponse} from '../../../shared/link/link-group.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {CrupdateLinkGroupModalComponent} from '../crupdate-link-group-modal/crupdate-link-group-modal.component';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport { matExpansionAnimations } from '@angular/material/expansion';\n\n@Component({\n    selector: 'link-group-show',\n    templateUrl: './link-group-show.component.html',\n    styleUrls: ['./link-group-show.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        matExpansionAnimations.indicatorRotate,\n    ]\n})\nexport class LinkGroupShowComponent implements OnInit {\n    public reportsPanelState$ = new BehaviorSubject<'expanded'|'collapsed'>('collapsed');\n    public data$ = new BehaviorSubject<GetLinkGroupResponse>(null);\n\n    constructor(\n        public route: ActivatedRoute,\n        private modal: Modal,\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe(data => {\n            this.data$.next(data.api);\n        });\n    }\n\n    public paginationParams() {\n        return {\n            initialData: this.data$.value.links,\n            staticParams: {\n                groupId: this.data$.value.group.id\n            }\n        };\n    }\n\n    public openCrupdateGroupModal() {\n        this.modal.open(\n            CrupdateLinkGroupModalComponent,\n            {group: this.data$.value.group},\n            'crupdate-link-group-modal-container'\n        ).beforeClosed().subscribe(newGroup => {\n            if ( ! newGroup) return;\n            this.data$.next({\n                ...this.data$.value,\n                group: newGroup\n            });\n        });\n    }\n\n    public toggleReportsHeight() {\n        this.reportsPanelState$.next(\n            this.reportsPanelState$.value === 'expanded' ? 'collapsed' : 'expanded'\n        );\n    }\n}\n","<ng-container *ngIf=\"data$ | async as data\">\n    <header>\n        <div class=\"name\">{{data.group.name}}</div>\n        <button mat-icon-button class=\"edit-btn\" (click)=\"openCrupdateGroupModal()\">\n            <mat-icon svgIcon=\"edit\"></mat-icon>\n        </button>\n        <button mat-icon-button class=\"toggle-btn\" (click)=\"toggleReportsHeight()\" [matTooltip]=\"'Toggle chart visibility' | trans\">\n            <mat-icon svgIcon=\"keyboard-arrow-down\" [@indicatorRotate]=\"reportsPanelState$ | async\"></mat-icon>\n        </button>\n    </header>\n\n    <click-charts [reports]=\"data.reports\" [group]=\"data.group\" [state]=\"reportsPanelState$ | async\"></click-charts>\n\n    <link-index [params]=\"paginationParams()\" [group]=\"data.group\"></link-index>\n</ng-container>\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n//# sourceMappingURL=interval.js.map","import { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Directive, ElementRef, Optional, Input, TemplateRef, EventEmitter, isDevMode, SkipSelf, ViewContainerRef, ChangeDetectorRef, ContentChildren, ContentChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _supportsShadowDom } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { startWith, takeUntil, map, take, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-styling.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extended CSSStyleDeclaration that includes a couple of drag-related\n * properties that aren't in the built-in TS typings.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction DragCSSStyleDeclaration() { }\nif (false) {\n    /** @type {?} */\n    DragCSSStyleDeclaration.prototype.webkitUserDrag;\n    /** @type {?} */\n    DragCSSStyleDeclaration.prototype.MozUserSelect;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * \\@docs-private\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = (/** @type {?} */ (source[key]));\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * \\@docs-private\n * @param {?} element Element on which to toggle the drag interactions.\n * @param {?} enable Whether the drag interactions should be enabled.\n * @return {?}\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    /** @type {?} */\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/transition-duration.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Parses a CSS time value to milliseconds.\n * @param {?} value\n * @return {?}\n */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    /** @type {?} */\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/**\n * Gets the transform transition duration, including the delay, of an element in milliseconds.\n * @param {?} element\n * @return {?}\n */\nfunction getTransformTransitionDurationInMs(element) {\n    /** @type {?} */\n    const computedStyle = getComputedStyle(element);\n    /** @type {?} */\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    /** @type {?} */\n    const property = transitionedProperties.find((/**\n     * @param {?} prop\n     * @return {?}\n     */\n    prop => prop === 'transform' || prop === 'all'));\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    /** @type {?} */\n    const propertyIndex = transitionedProperties.indexOf(property);\n    /** @type {?} */\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    /** @type {?} */\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/**\n * Parses out multiple values from a computed style into an array.\n * @param {?} computedStyle\n * @param {?} name\n * @return {?}\n */\nfunction parseCssPropertyValue(computedStyle, name) {\n    /** @type {?} */\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map((/**\n     * @param {?} part\n     * @return {?}\n     */\n    part => part.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the behavior of DragRef.\n * @record\n */\nfunction DragRefConfig() { }\nif (false) {\n    /**\n     * Minimum amount of pixels that the user should\n     * drag, before the CDK initiates a drag sequence.\n     * @type {?}\n     */\n    DragRefConfig.prototype.dragStartThreshold;\n    /**\n     * Amount the pixels the user should drag before the CDK\n     * considers them to have changed the drag direction.\n     * @type {?}\n     */\n    DragRefConfig.prototype.pointerDirectionChangeThreshold;\n}\n/**\n * Options that can be used to bind a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Options that can be used to bind an active event listener.\n * @type {?}\n */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n * @type {?}\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Internal compile-time-only representation of a `DragRef`.\n * Used to avoid circular import issues between the `DragRef` and the `DropListRef`.\n * \\@docs-private\n * @record\n */\nfunction DragRefInternal() { }\n/**\n * Template that can be used to create a drag helper element (e.g. a preview or a placeholder).\n * @record\n * @template T\n */\nfunction DragHelperTemplate() { }\nif (false) {\n    /** @type {?} */\n    DragHelperTemplate.prototype.template;\n    /** @type {?} */\n    DragHelperTemplate.prototype.viewContainer;\n    /** @type {?} */\n    DragHelperTemplate.prototype.context;\n}\n/**\n * Template that can be used to create a drag preview element.\n * @record\n * @template T\n */\nfunction DragPreviewTemplate() { }\nif (false) {\n    /** @type {?|undefined} */\n    DragPreviewTemplate.prototype.matchSize;\n}\n/**\n * Point on the page or within an element.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * @template T\n */\nclass DragRef {\n    /**\n     * @param {?} element\n     * @param {?} _config\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /**\n         * CSS `transform` that is applied to the element while it's being dragged.\n         */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Emits when the item is being moved.\n         */\n        this._moveEvents = new Subject();\n        /**\n         * Subscription to pointer movement events.\n         */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the event that is dispatched when the user lifts their pointer.\n         */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being scrolled.\n         */\n        this._scrollSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being resized.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Cached reference to the boundary element.\n         */\n        this._boundaryElement = null;\n        /**\n         * Whether the native dragging interactions have been enabled on the root element.\n         */\n        this._nativeInteractionsEnabled = true;\n        /**\n         * Elements that can be used to drag the draggable item.\n         */\n        this._handles = [];\n        /**\n         * Registered handles that are currently disabled.\n         */\n        this._disabledHandles = new Set();\n        /**\n         * Layout direction of the item.\n         */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits as the drag sequence is being prepared.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new Subject();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new Subject();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new Subject();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /**\n         * Handler for the `mousedown`/`touchstart` events.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                /** @type {?} */\n                const targetHandle = this._handles.find((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => {\n                    /** @type {?} */\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains((/** @type {?} */ (target))));\n                }));\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        });\n        /**\n         * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Prevent the default action as early as possible in order to block\n            // native actions like dragging the selected text or images with the mouse.\n            event.preventDefault();\n            if (!this._hasStartedDragging) {\n                /** @type {?} */\n                const pointerPosition = this._getPointerPositionOnPage(event);\n                /** @type {?} */\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                /** @type {?} */\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                /** @type {?} */\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    /** @type {?} */\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._startDragSequence(event)));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            /** @type {?} */\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(event);\n            this._hasMoved = true;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition);\n            }\n            else {\n                /** @type {?} */\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    /** @type {?} */\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                }));\n            }\n        });\n        /**\n         * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._endDragSequence(event);\n        });\n        this.withRootElement(element);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     * @return {?}\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    withHandles(handles) {\n        (/** @type {?} */ (this))._handles = handles.map((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => coerceElement(handle)));\n        (/** @type {?} */ (this))._handles.forEach((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => toggleNativeDragInteractions(handle, false)));\n        (/** @type {?} */ (this))._toggleNativeDragInteractions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    withPreviewTemplate(template) {\n        (/** @type {?} */ (this))._previewTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    withPlaceholderTemplate(template) {\n        (/** @type {?} */ (this))._placeholderTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    withRootElement(rootElement) {\n        /** @type {?} */\n        const element = coerceElement(rootElement);\n        if (element !== (/** @type {?} */ (this))._rootElement) {\n            if ((/** @type {?} */ (this))._rootElement) {\n                (/** @type {?} */ (this))._removeRootElementListeners((/** @type {?} */ (this))._rootElement);\n            }\n            element.addEventListener('mousedown', (/** @type {?} */ (this))._pointerDown, activeEventListenerOptions);\n            element.addEventListener('touchstart', (/** @type {?} */ (this))._pointerDown, passiveEventListenerOptions);\n            (/** @type {?} */ (this))._initialTransform = undefined;\n            (/** @type {?} */ (this))._rootElement = element;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    withBoundaryElement(boundaryElement) {\n        (/** @type {?} */ (this))._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        (/** @type {?} */ (this))._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            (/** @type {?} */ (this))._resizeSubscription = (/** @type {?} */ (this))._viewportRuler\n                .change(10)\n                .subscribe((/**\n             * @return {?}\n             */\n            () => (/** @type {?} */ (this))._containInsideBoundaryOnResize()));\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._boundaryElement = this._rootElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = (/** @type {?} */ (null));\n    }\n    /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        /** @type {?} */\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    setFreeDragPosition(value) {\n        (/** @type {?} */ (this))._activeTransform = { x: 0, y: 0 };\n        (/** @type {?} */ (this))._passiveTransform.x = value.x;\n        (/** @type {?} */ (this))._passiveTransform.y = value.y;\n        if (!(/** @type {?} */ (this))._dropContainer) {\n            (/** @type {?} */ (this))._applyRootElementTransform(value.x, value.y);\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    _sortFromLastPointerPosition() {\n        /** @type {?} */\n        const position = this._pointerPositionAtLastDirectionChange;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(position);\n        }\n    }\n    /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then((/**\n             * @return {?}\n             */\n            () => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            }));\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            }));\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _startDragSequence(event) {\n        // Emit the event on the item before the one on the container.\n        this.started.next({ source: this });\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        if (this._dropContainer) {\n            /** @type {?} */\n            const element = this._rootElement;\n            /** @type {?} */\n            const parent = (/** @type {?} */ (element.parentNode));\n            /** @type {?} */\n            const preview = this._preview = this._createPreviewElement();\n            /** @type {?} */\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            /** @type {?} */\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this._dropContainer.start();\n            this._initialContainer = this._dropContainer;\n            this._initialIndex = this._dropContainer.getItemIndex(this);\n        }\n        else {\n            this._initialContainer = this._initialIndex = (/** @type {?} */ (undefined));\n        }\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        /** @type {?} */\n        const isDragging = this.isDragging();\n        /** @type {?} */\n        const isTouchSequence = isTouchEvent(event);\n        /** @type {?} */\n        const isAuxiliaryMouseButton = !isTouchSequence && ((/** @type {?} */ (event))).button !== 0;\n        /** @type {?} */\n        const rootElement = this._rootElement;\n        /** @type {?} */\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && ((/** @type {?} */ (event.target))).draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor;\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        }));\n        if (this._boundaryElement) {\n            this._boundaryRect = this._boundaryElement.getBoundingClientRect();\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        /** @type {?} */\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        /** @type {?} */\n        const pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        (/** @type {?} */ (this._anchor.parentNode)).replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = (/** @type {?} */ (this._dropContainer));\n            /** @type {?} */\n            const currentIndex = container.getItemIndex(this);\n            /** @type {?} */\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            /** @type {?} */\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            /** @type {?} */\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance, this._initialIndex);\n            this._dropContainer = this._initialContainer;\n        }));\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    _updateActiveDropContainer({ x, y }) {\n        // Drop container that draggable has been moved into.\n        /** @type {?} */\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: (/** @type {?} */ (this._dropContainer)) });\n                (/** @type {?} */ (this._dropContainer)).exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = (/** @type {?} */ (newContainer));\n                this._dropContainer.enter(this, x, y, \n                // If we're re-entering the initial container,\n                // put item the into its starting index to begin with.\n                newContainer === this._initialContainer ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: (/** @type {?} */ (newContainer)),\n                    currentIndex: (/** @type {?} */ (newContainer)).getItemIndex(this)\n                });\n            }));\n        }\n        (/** @type {?} */ (this._dropContainer))._startScrollingIfNecessary(x, y);\n        (/** @type {?} */ (this._dropContainer))._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    _createPreviewElement() {\n        /** @type {?} */\n        const previewConfig = this._previewTemplate;\n        /** @type {?} */\n        const previewClass = this.previewClass;\n        /** @type {?} */\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        /** @type {?} */\n        let preview;\n        if (previewTemplate) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (previewConfig)).viewContainer.createEmbeddedView(previewTemplate, (/** @type {?} */ (previewConfig)).context);\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if ((/** @type {?} */ (previewConfig)).matchSize) {\n                matchElementSize(preview, this._rootElement);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            /** @type {?} */\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element);\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: '1000'\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach((/**\n                 * @param {?} className\n                 * @return {?}\n                 */\n                className => preview.classList.add(className)));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        /** @type {?} */\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                /** @type {?} */\n                const handler = (/** @type {?} */ (((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                }))));\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                /** @type {?} */\n                const timeout = setTimeout((/** @type {?} */ (handler)), duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            }));\n        }));\n    }\n    /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    _createPlaceholderElement() {\n        /** @type {?} */\n        const placeholderConfig = this._placeholderTemplate;\n        /** @type {?} */\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        /** @type {?} */\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = (/** @type {?} */ (placeholderConfig)).viewContainer.createEmbeddedView(placeholderTemplate, (/** @type {?} */ (placeholderConfig)).context);\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        /** @type {?} */\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        /** @type {?} */\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        /** @type {?} */\n        const x = point.pageX - referenceRect.left - this._scrollPosition.left;\n        /** @type {?} */\n        const y = point.pageY - referenceRect.top - this._scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getPointerPositionOnPage(event) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        /** @type {?} */\n        const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        return {\n            x: point.pageX - this._scrollPosition.left,\n            y: point.pageY - this._scrollPosition.top\n        };\n    }\n    /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getConstrainedPointerPosition(event) {\n        /** @type {?} */\n        const point = this._getPointerPositionOnPage(event);\n        /** @type {?} */\n        const constrainedPoint = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        /** @type {?} */\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            constrainedPoint.y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            constrainedPoint.x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            /** @type {?} */\n            const boundaryRect = this._boundaryRect;\n            /** @type {?} */\n            const previewRect = (/** @type {?} */ (this._previewRect));\n            /** @type {?} */\n            const minY = boundaryRect.top + pickupY;\n            /** @type {?} */\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            /** @type {?} */\n            const minX = boundaryRect.left + pickupX;\n            /** @type {?} */\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            constrainedPoint.x = clamp(constrainedPoint.x, minX, maxX);\n            constrainedPoint.y = clamp(constrainedPoint.y, minY, maxY);\n        }\n        return constrainedPoint;\n    }\n    /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        /** @type {?} */\n        const delta = this._pointerDirectionDelta;\n        /** @type {?} */\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        /** @type {?} */\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        /** @type {?} */\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        /** @type {?} */\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    _applyRootElementTransform(x, y) {\n        /** @type {?} */\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    _getDragDistance(currentPosition) {\n        /** @type {?} */\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /**\n     * Cleans up any cached element dimensions that we don't need after dragging has stopped.\n     * @private\n     * @return {?}\n     */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     * @private\n     * @return {?}\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        /** @type {?} */\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        /** @type {?} */\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        /** @type {?} */\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        /** @type {?} */\n        const topOverflow = boundaryRect.top - elementRect.top;\n        /** @type {?} */\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /**\n     * Gets the drag start delay, based on the event type.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getDragStartDelay(event) {\n        /** @type {?} */\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n}\nif (false) {\n    /**\n     * Element displayed next to the user's pointer while the element is dragged.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._preview;\n    /**\n     * Reference to the view of the preview element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewRef;\n    /**\n     * Reference to the view of the placeholder element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholderRef;\n    /**\n     * Element that is rendered instead of the draggable item while it is being sorted.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholder;\n    /**\n     * Coordinates within the element at which the user picked up the element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pickupPositionInElement;\n    /**\n     * Coordinates on the page at which the user picked up the element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pickupPositionOnPage;\n    /**\n     * Anchor node used to save the place in the DOM where the element was\n     * picked up so that it can be restored at the end of the drag sequence.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._anchor;\n    /**\n     * CSS `transform` applied to the element when it isn't being dragged. We need a\n     * passive transform in order for the dragged element to retain its new position\n     * after the user has stopped dragging and because we need to know the relative\n     * position in case they start dragging again. This corresponds to `element.style.transform`.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._passiveTransform;\n    /**\n     * CSS `transform` that is applied to the element while it's being dragged.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._activeTransform;\n    /**\n     * Inline `transform` value that the element had before the first dragging sequence.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialTransform;\n    /**\n     * Whether the dragging sequence has been started. Doesn't\n     * necessarily mean that the element has been moved.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._hasStartedDragging;\n    /**\n     * Whether the element has moved since the user started dragging it.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._hasMoved;\n    /**\n     * Drop container in which the DragRef resided when dragging began.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialContainer;\n    /**\n     * Index at which the item started in its initial container.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialIndex;\n    /**\n     * Cached scroll position on the page when the element was picked up.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._scrollPosition;\n    /**\n     * Emits when the item is being moved.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._moveEvents;\n    /**\n     * Keeps track of the direction in which the user is dragging along each axis.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerDirectionDelta;\n    /**\n     * Pointer position at which the last change in the delta occurred.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerPositionAtLastDirectionChange;\n    /**\n     * Root DOM node of the drag instance. This is the element that will\n     * be moved around as the user is dragging.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._rootElement;\n    /**\n     * Inline style value of `-webkit-tap-highlight-color` at the time the\n     * dragging was started. Used to restore the value once we're done dragging.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._rootElementTapHighlight;\n    /**\n     * Subscription to pointer movement events.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerMoveSubscription;\n    /**\n     * Subscription to the event that is dispatched when the user lifts their pointer.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerUpSubscription;\n    /**\n     * Subscription to the viewport being scrolled.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._scrollSubscription;\n    /**\n     * Subscription to the viewport being resized.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._resizeSubscription;\n    /**\n     * Time at which the last touch event occurred. Used to avoid firing the same\n     * events multiple times on touch devices where the browser will fire a fake\n     * mouse event for each touch event, after a certain time.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._lastTouchEventTime;\n    /**\n     * Time at which the last dragging sequence was started.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dragStartTime;\n    /**\n     * Cached reference to the boundary element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._boundaryElement;\n    /**\n     * Whether the native dragging interactions have been enabled on the root element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._nativeInteractionsEnabled;\n    /**\n     * Cached dimensions of the preview element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewRect;\n    /**\n     * Cached dimensions of the boundary element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._boundaryRect;\n    /**\n     * Element that will be used as a template to create the draggable item's preview.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewTemplate;\n    /**\n     * Template for placeholder element rendered to show where a draggable would be dropped.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholderTemplate;\n    /**\n     * Elements that can be used to drag the draggable item.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._handles;\n    /**\n     * Registered handles that are currently disabled.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._disabledHandles;\n    /**\n     * Droppable container that the draggable is a part of.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dropContainer;\n    /**\n     * Layout direction of the item.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._direction;\n    /**\n     * Axis along which dragging is locked.\n     * @type {?}\n     */\n    DragRef.prototype.lockAxis;\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     * @type {?}\n     */\n    DragRef.prototype.dragStartDelay;\n    /**\n     * Class to be added to the preview element.\n     * @type {?}\n     */\n    DragRef.prototype.previewClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._disabled;\n    /**\n     * Emits as the drag sequence is being prepared.\n     * @type {?}\n     */\n    DragRef.prototype.beforeStarted;\n    /**\n     * Emits when the user starts dragging the item.\n     * @type {?}\n     */\n    DragRef.prototype.started;\n    /**\n     * Emits when the user has released a drag item, before any animations have started.\n     * @type {?}\n     */\n    DragRef.prototype.released;\n    /**\n     * Emits when the user stops dragging an item in the container.\n     * @type {?}\n     */\n    DragRef.prototype.ended;\n    /**\n     * Emits when the user has moved the item into a new container.\n     * @type {?}\n     */\n    DragRef.prototype.entered;\n    /**\n     * Emits when the user removes the item its container by dragging it into another container.\n     * @type {?}\n     */\n    DragRef.prototype.exited;\n    /**\n     * Emits when the user drops the item inside a container.\n     * @type {?}\n     */\n    DragRef.prototype.dropped;\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     * @type {?}\n     */\n    DragRef.prototype.moved;\n    /**\n     * Arbitrary data that can be attached to the drag item.\n     * @type {?}\n     */\n    DragRef.prototype.data;\n    /**\n     * Function that can be used to customize the logic of how the position of the drag item\n     * is limited while it's being dragged. Gets called with a point containing the current position\n     * of the user's pointer on the page and should return a point describing where the item should\n     * be rendered.\n     * @type {?}\n     */\n    DragRef.prototype.constrainPosition;\n    /**\n     * Handler for the `mousedown`/`touchstart` events.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerDown;\n    /**\n     * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerMove;\n    /**\n     * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerUp;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dragDropRegistry;\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param {?} x Desired position of the element along the X axis.\n * @param {?} y Desired position of the element along the Y axis.\n * @return {?}\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/**\n * Creates a deep clone of an element.\n * @param {?} node\n * @return {?}\n */\nfunction deepCloneNode(node) {\n    /** @type {?} */\n    const clone = (/** @type {?} */ (node.cloneNode(true)));\n    /** @type {?} */\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    /** @type {?} */\n    const descendantCanvases = node.querySelectorAll('canvas');\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.\n    // We match up the cloned canvas to their sources using their index in the DOM.\n    if (descendantCanvases.length) {\n        /** @type {?} */\n        const cloneCanvases = clone.querySelectorAll('canvas');\n        for (let i = 0; i < descendantCanvases.length; i++) {\n            /** @type {?} */\n            const correspondingCloneContext = cloneCanvases[i].getContext('2d');\n            if (correspondingCloneContext) {\n                correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);\n            }\n        }\n    }\n    return clone;\n}\n/**\n * Clamps a value between a minimum and a maximum.\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param {?} node Node to be removed.\n * @return {?}\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/**\n * Determines whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the element into which the drag preview should be inserted.\n * @param {?} documentRef\n * @return {?}\n */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n * @param {?} viewRef\n * @param {?} _document\n * @return {?}\n */\nfunction getRootNode(viewRef, _document) {\n    /** @type {?} */\n    const rootNode = viewRef.rootNodes[0];\n    if (rootNode.nodeType !== _document.ELEMENT_NODE) {\n        /** @type {?} */\n        const wrapper = _document.createElement('div');\n        wrapper.appendChild(rootNode);\n        return wrapper;\n    }\n    return (/** @type {?} */ (rootNode));\n}\n/**\n * Matches the target element's size to the source's size.\n * @param {?} target Element that needs to be resized.\n * @param {?} source Element whose size needs to be matched.\n * @return {?}\n */\nfunction matchElementSize(target, source) {\n    /** @type {?} */\n    const sourceRect = source.getBoundingClientRect();\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @template T\n * @param {?} array Array in which to move the item.\n * @param {?} fromIndex Starting index of the item.\n * @param {?} toIndex Index to which the item should be moved.\n * @return {?}\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    /** @type {?} */\n    const from = clamp$1(fromIndex, array.length - 1);\n    /** @type {?} */\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    /** @type {?} */\n    const target = array[from];\n    /** @type {?} */\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @template T\n * @param {?} currentArray Array from which to transfer the item.\n * @param {?} targetArray Array into which to put the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n * @return {?}\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @template T\n * @param {?} currentArray Array from which to copy the item.\n * @param {?} targetArray Array into which is copy the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n *\n * @return {?}\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/**\n * Clamps a number between zero and a maximum.\n * @param {?} value\n * @param {?} max\n * @return {?}\n */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drop-list-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n * @type {?}\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Entry in the position cache for draggable items.\n * \\@docs-private\n * @record\n */\nfunction CachedItemPosition() { }\nif (false) {\n    /**\n     * Instance of the drag item.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.drag;\n    /**\n     * Dimensions of the item.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.clientRect;\n    /**\n     * Amount by which the item has been moved since dragging started.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.offset;\n}\n/**\n * Object holding the scroll position of something.\n * @record\n */\nfunction ScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ScrollPosition.prototype.top;\n    /** @type {?} */\n    ScrollPosition.prototype.left;\n}\n/** @enum {number} */\nconst AutoScrollVerticalDirection = {\n    NONE: 0, UP: 1, DOWN: 2,\n};\n/** @enum {number} */\nconst AutoScrollHorizontalDirection = {\n    NONE: 0, LEFT: 1, RIGHT: 2,\n};\n/**\n * Internal compile-time-only representation of a `DropListRef`.\n * Used to avoid circular import issues between the `DropListRef` and the `DragRef`.\n * \\@docs-private\n * @record\n */\nfunction DropListRefInternal() { }\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * @template T\n */\nclass DropListRef {\n    /**\n     * @param {?} element\n     * @param {?} _dragDropRegistry\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     */\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Whether starting a dragging sequence from this container is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether sorting items within the list is disabled.\n         */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits right before dragging has started.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new Subject();\n        /**\n         * Whether an item in the list is being dragged.\n         */\n        this._isDragging = false;\n        /**\n         * Cache of the dimensions of all the items inside the container.\n         */\n        this._itemPositions = [];\n        /**\n         * Cached positions of the scrollable parent elements.\n         */\n        this._parentPositions = new Map();\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as\n         * well as what direction the pointer was moving in when the swap occured.\n         */\n        this._previousSwap = { drag: (/** @type {?} */ (null)), delta: 0 };\n        /**\n         * Drop lists that are connected to the current one.\n         */\n        this._siblings = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this._orientation = 'vertical';\n        /**\n         * Connected siblings that currently have a dragged item.\n         */\n        this._activeSiblings = new Set();\n        /**\n         * Layout direction of the drop list.\n         */\n        this._direction = 'ltr';\n        /**\n         * Subscription to the window being scrolled.\n         */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /**\n         * Vertical direction in which the list is currently scrolling.\n         */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /**\n         * Horizontal direction in which the list is currently scrolling.\n         */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /**\n         * Used to signal to the current auto-scroll sequence when to stop.\n         */\n        this._stopScrollTimers = new Subject();\n        /**\n         * Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly.\n         */\n        this._cachedShadowRoot = null;\n        /**\n         * Starts the interval that'll auto-scroll the element.\n         */\n        this._startScrollInterval = (/**\n         * @return {?}\n         */\n        () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            }));\n        });\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n    }\n    /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = (/** @type {?} */ (null));\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._isDragging;\n    }\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    start() {\n        /** @type {?} */\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || ((/** @type {?} */ (styles))).scrollSnapType || '';\n        ((/** @type {?} */ (styles))).scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._startReceiving(this)));\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?=} index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY, index) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        /** @type {?} */\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        /** @type {?} */\n        const activeDraggables = this._activeDraggables;\n        /** @type {?} */\n        const currentIndex = activeDraggables.indexOf(item);\n        /** @type {?} */\n        const placeholder = item.getPlaceholderElement();\n        /** @type {?} */\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            /** @type {?} */\n            const element = newPositionReference.getRootElement();\n            (/** @type {?} */ (element.parentElement)).insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed.\n        this._cacheItemPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * \\@breaking-change 11.0.0 `previousIndex` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?} distance Distance the user has dragged since the start of the dragging sequence.\n     * @param {?=} previousIndex Index of the item when dragging started.\n     *\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance, previousIndex) {\n        this._reset();\n        // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n        if (previousIndex == null) {\n            previousIndex = previousContainer.getItemIndex(item);\n        }\n        this.dropped.next({ item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    withItems(items) {\n        (/** @type {?} */ (this))._draggables = items;\n        items.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._withDropContainer((/** @type {?} */ (this)))));\n        if ((/** @type {?} */ (this)).isDragging()) {\n            (/** @type {?} */ (this))._cacheItems();\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    connectedTo(connectedTo) {\n        (/** @type {?} */ (this))._siblings = connectedTo.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    withOrientation(orientation) {\n        (/** @type {?} */ (this))._orientation = orientation;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} elements Elements that can be scrolled.\n     * @return {THIS}\n     */\n    withScrollableParents(elements) {\n        /** @type {?} */\n        const element = coerceElement((/** @type {?} */ (this)).element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        (/** @type {?} */ (this))._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        /** @type {?} */\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled || !isPointerNearClientRect(this._clientRect, pointerX, pointerY)) {\n            return;\n        }\n        /** @type {?} */\n        const siblings = this._itemPositions;\n        /** @type {?} */\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentIndex = findIndex(siblings, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n        /** @type {?} */\n        const siblingAtNewPosition = siblings[newIndex];\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const newPosition = siblingAtNewPosition.clientRect;\n        /** @type {?} */\n        const delta = currentIndex > newIndex ? 1 : -1;\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        // How many pixels the item's placeholder should be offset.\n        /** @type {?} */\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        /** @type {?} */\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        /** @type {?} */\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((/**\n         * @param {?} sibling\n         * @param {?} index\n         * @return {?}\n         */\n        (sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            /** @type {?} */\n            const isDraggedItem = sibling.drag === item;\n            /** @type {?} */\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            /** @type {?} */\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        }));\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        /** @type {?} */\n        let scrollNode;\n        /** @type {?} */\n        let verticalScrollDirection = 0 /* NONE */;\n        /** @type {?} */\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.forEach((/**\n         * @param {?} position\n         * @param {?} element\n         * @return {?}\n         */\n        (position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections((/** @type {?} */ (element)), position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = (/** @type {?} */ (element));\n                }\n            }\n        }));\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            /** @type {?} */\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /**\n     * Caches the positions of the configured scrollable parents.\n     * @private\n     * @return {?}\n     */\n    _cacheParentPositions() {\n        this._parentPositions.clear();\n        this._parentPositions.set(this._document, {\n            scrollPosition: (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition(),\n        });\n        this._scrollableElements.forEach((/**\n         * @param {?} element\n         * @return {?}\n         */\n        element => {\n            /** @type {?} */\n            const clientRect = getMutableClientRect(element);\n            // We keep the ClientRect cached in two properties, because it's referenced in a lot of\n            // performance-sensitive places and we want to avoid the extra lookups. The `element` is\n            // guaranteed to always be in the `_scrollableElements` so this should always match.\n            if (element === this.element) {\n                this._clientRect = clientRect;\n            }\n            this._parentPositions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect\n            });\n        }));\n    }\n    /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    _cacheItemPositions() {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map((/**\n         * @param {?} drag\n         * @return {?}\n         */\n        drag => {\n            /** @type {?} */\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        })).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        }));\n    }\n    /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    _reset() {\n        this._isDragging = false;\n        /** @type {?} */\n        const styles = coerceElement(this.element).style;\n        ((/** @type {?} */ (styles))).scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item.getRootElement().style.transform = ''));\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._stopReceiving(this)));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        /** @type {?} */\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            /** @type {?} */\n            const start = isHorizontal ? 'left' : 'top';\n            /** @type {?} */\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, (/**\n         * @param {?} __0\n         * @param {?} _\n         * @param {?} array\n         * @return {?}\n         */\n        ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                /** @type {?} */\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, and they didn't change\n                // the direction in which they're dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX <= Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY <= Math.floor(clientRect.bottom);\n        }));\n    }\n    /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @private\n     * @param {?} scrolledParent Element that was scrolled.\n     * @param {?} newTop New top scroll position.\n     * @param {?} newLeft New left scroll position.\n     * @return {?}\n     */\n    _updateAfterScroll(scrolledParent, newTop, newLeft) {\n        /** @type {?} */\n        const scrollPosition = (/** @type {?} */ (this._parentPositions.get(scrolledParent))).scrollPosition;\n        /** @type {?} */\n        const topDifference = scrollPosition.top - newTop;\n        /** @type {?} */\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this._parentPositions.forEach((/**\n         * @param {?} position\n         * @param {?} node\n         * @return {?}\n         */\n        (position, node) => {\n            if (position.clientRect && scrolledParent !== node && scrolledParent.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        }));\n        // Since we know the amount that the user has scrolled we can shift all of the client rectangles\n        // ourselves. This is cheaper than re-measuring everything and we can avoid inconsistent\n        // behavior where we might be measuring the element before its position has changed.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        }));\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        }));\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._canReceive(item, x, y)));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _canReceive(item, x, y) {\n        if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n            return false;\n        }\n        /** @type {?} */\n        const elementFromPoint = (/** @type {?} */ (this._getShadowRoot().elementFromPoint(x, y)));\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    _startReceiving(sibling) {\n        /** @type {?} */\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     * @private\n     * @return {?}\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (this.isDragging()) {\n                /** @type {?} */\n                const target = (/** @type {?} */ (event.target));\n                /** @type {?} */\n                const position = this._parentPositions.get(target);\n                if (position) {\n                    /** @type {?} */\n                    let newTop;\n                    /** @type {?} */\n                    let newLeft;\n                    if (target === this._document) {\n                        /** @type {?} */\n                        const scrollPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n                        newTop = scrollPosition.top;\n                        newLeft = scrollPosition.left;\n                    }\n                    else {\n                        newTop = ((/** @type {?} */ (target))).scrollTop;\n                        newLeft = ((/** @type {?} */ (target))).scrollLeft;\n                    }\n                    this._updateAfterScroll(target, newTop, newLeft);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        }));\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     * @private\n     * @return {?}\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            this._cachedShadowRoot = getShadowRoot(coerceElement(this.element)) || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n}\nif (false) {\n    /**\n     * Element that the drop list is attached to.\n     * @type {?}\n     */\n    DropListRef.prototype.element;\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.disabled;\n    /**\n     * Whether sorting items within the list is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.sortingDisabled;\n    /**\n     * Locks the position of the draggable elements inside the container along the specified axis.\n     * @type {?}\n     */\n    DropListRef.prototype.lockAxis;\n    /**\n     * Whether auto-scrolling the view when the user\n     * moves their pointer close to the edges is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.autoScrollDisabled;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     * @type {?}\n     */\n    DropListRef.prototype.enterPredicate;\n    /**\n     * Emits right before dragging has started.\n     * @type {?}\n     */\n    DropListRef.prototype.beforeStarted;\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     * @type {?}\n     */\n    DropListRef.prototype.entered;\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     * @type {?}\n     */\n    DropListRef.prototype.exited;\n    /**\n     * Emits when the user drops an item inside the container.\n     * @type {?}\n     */\n    DropListRef.prototype.dropped;\n    /**\n     * Emits as the user is swapping items while actively dragging.\n     * @type {?}\n     */\n    DropListRef.prototype.sorted;\n    /**\n     * Arbitrary data that can be attached to the drop list.\n     * @type {?}\n     */\n    DropListRef.prototype.data;\n    /**\n     * Whether an item in the list is being dragged.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._isDragging;\n    /**\n     * Cache of the dimensions of all the items inside the container.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._itemPositions;\n    /**\n     * Cached positions of the scrollable parent elements.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._parentPositions;\n    /**\n     * Cached `ClientRect` of the drop list.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._clientRect;\n    /**\n     * Draggable items that are currently active inside the container. Includes the items\n     * from `_draggables`, as well as any items that have been dragged in, but haven't\n     * been dropped yet.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._activeDraggables;\n    /**\n     * Keeps track of the item that was last swapped with the dragged item, as\n     * well as what direction the pointer was moving in when the swap occured.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._previousSwap;\n    /**\n     * Draggable items in the container.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._draggables;\n    /**\n     * Drop lists that are connected to the current one.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._siblings;\n    /**\n     * Direction in which the list is oriented.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._orientation;\n    /**\n     * Connected siblings that currently have a dragged item.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._activeSiblings;\n    /**\n     * Layout direction of the drop list.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._direction;\n    /**\n     * Subscription to the window being scrolled.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._viewportScrollSubscription;\n    /**\n     * Vertical direction in which the list is currently scrolling.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._verticalScrollDirection;\n    /**\n     * Horizontal direction in which the list is currently scrolling.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._horizontalScrollDirection;\n    /**\n     * Node that is being auto-scrolled.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._scrollNode;\n    /**\n     * Used to signal to the current auto-scroll sequence when to stop.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._stopScrollTimers;\n    /**\n     * Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._cachedShadowRoot;\n    /**\n     * Reference to the document.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._document;\n    /**\n     * Elements that can be scrolled while the user is dragging.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._scrollableElements;\n    /**\n     * Initial value for the element's `scroll-snap-type` style.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._initialScrollSnap;\n    /**\n     * Starts the interval that'll auto-scroll the element.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._startScrollInterval;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._dragDropRegistry;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._viewportRuler;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param {?} clientRect `ClientRect` that should be updated.\n * @param {?} top Amount to add to the `top` position.\n * @param {?} left Amount to add to the `left` position.\n * @return {?}\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param {?} rect ClientRect to check against.\n * @param {?} pointerX Coordinates along the X axis.\n * @param {?} pointerY Coordinates along the Y axis.\n * @return {?}\n */\nfunction isPointerNearClientRect(rect, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    /** @type {?} */\n    const xThreshold = width * DROP_PROXIMITY_THRESHOLD;\n    /** @type {?} */\n    const yThreshold = height * DROP_PROXIMITY_THRESHOLD;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @template T\n * @param {?} array Array in which to look for matches.\n * @param {?} predicate Function used to determine whether an item is a match.\n * @return {?}\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param {?} clientRect ClientRect that is being checked.\n * @param {?} x Coordinates along the X axis.\n * @param {?} y Coordinates along the Y axis.\n * @return {?}\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Gets a mutable version of an element's bounding `ClientRect`.\n * @param {?} element\n * @return {?}\n */\nfunction getMutableClientRect(element) {\n    /** @type {?} */\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    /** @type {?} */\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @return {?}\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    /** @type {?} */\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param {?} element Element for which we should calculate the scroll direction.\n * @param {?} clientRect Bounding client rectangle of the element.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    /** @type {?} */\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    /** @type {?} */\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    /** @type {?} */\n    let verticalScrollDirection = 0 /* NONE */;\n    /** @type {?} */\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        /** @type {?} */\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        /** @type {?} */\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n/**\n * Gets the shadow root of an element, if any.\n * @param {?} element\n * @return {?}\n */\nfunction getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        /** @type {?} */\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        if (rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event options that can be used to bind an active, capturing event.\n * @type {?}\n */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * \\@docs-private\n * @template I, C\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /**\n         * Registered drop container instances.\n         */\n        this._dropInstances = new Set();\n        /**\n         * Registered drag item instances.\n         */\n        this._dragInstances = new Set();\n        /**\n         * Drag item instances that are currently being dragged.\n         */\n        this._activeDragInstances = new Set();\n        /**\n         * Keeps track of the event listeners that we've bound to the `document`.\n         */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        });\n        this._document = _document;\n    }\n    /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            }));\n        }\n    }\n    /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            /** @type {?} */\n            const isTouchEvent = event.type.startsWith('touch');\n            /** @type {?} */\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerMove.next((/** @type {?} */ (e)))),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerUp.next((/** @type {?} */ (e)))),\n                options: true\n            })\n                .set('scroll', {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.scroll.next(e)),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this._globalListeners.forEach((/**\n                 * @param {?} config\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                }));\n            }));\n        }\n    }\n    /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dragInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDragItem(instance)));\n        this._dropInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDropContainer(instance)));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((/**\n         * @param {?} config\n         * @param {?} name\n         * @return {?}\n         */\n        (config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        }));\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ DragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._document;\n    /**\n     * Registered drop container instances.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._dropInstances;\n    /**\n     * Registered drag item instances.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._dragInstances;\n    /**\n     * Drag item instances that are currently being dragged.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._activeDragInstances;\n    /**\n     * Keeps track of the event listeners that we've bound to the `document`.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._globalListeners;\n    /**\n     * Emits the `touchmove` or `mousemove` events that are dispatched\n     * while the user is dragging a drag item instance.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.pointerMove;\n    /**\n     * Emits the `touchend` or `mouseup` events that are dispatched\n     * while the user is dragging a drag item instance.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.pointerUp;\n    /**\n     * Emits when the viewport has been scrolled while the user is dragging an item.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.scroll;\n    /**\n     * Event listener that will prevent the default browser action while the user is dragging.\n     * \\@param event Event whose default action should be prevented.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._preventDefaultWhileDragging;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default configuration to be used when creating a `DragRef`.\n * @type {?}\n */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    /**\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\n/** @nocollapse */\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/** @nocollapse */ DragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._dragDropRegistry;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-events.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Event emitted when the user starts dragging a draggable.\n * @record\n * @template T\n */\nfunction CdkDragStart() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragStart.prototype.source;\n}\n/**\n * Event emitted when the user releases an item, before any animations have started.\n * @record\n * @template T\n */\nfunction CdkDragRelease() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragRelease.prototype.source;\n}\n/**\n * Event emitted when the user stops dragging a draggable.\n * @record\n * @template T\n */\nfunction CdkDragEnd() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragEnd.prototype.source;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragEnd.prototype.distance;\n}\n/**\n * Event emitted when the user moves an item into a new drop container.\n * @record\n * @template T, I\n */\nfunction CdkDragEnter() { }\nif (false) {\n    /**\n     * Container into which the user has moved the item.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.container;\n    /**\n     * Item that was moved into the container.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.item;\n    /**\n     * Index at which the item has entered the container.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.currentIndex;\n}\n/**\n * Event emitted when the user removes an item from a\n * drop container by moving it into another one.\n * @record\n * @template T, I\n */\nfunction CdkDragExit() { }\nif (false) {\n    /**\n     * Container from which the user has a removed an item.\n     * @type {?}\n     */\n    CdkDragExit.prototype.container;\n    /**\n     * Item that was removed from the container.\n     * @type {?}\n     */\n    CdkDragExit.prototype.item;\n}\n/**\n * Event emitted when the user drops a draggable item inside a drop container.\n * @record\n * @template T, O\n */\nfunction CdkDragDrop() { }\nif (false) {\n    /**\n     * Index of the item when it was picked up.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.previousIndex;\n    /**\n     * Current index of the item.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.currentIndex;\n    /**\n     * Item that is being dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.item;\n    /**\n     * Container in which the item was dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.container;\n    /**\n     * Container from which the item was picked up. Can be the same as the `container`.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.previousContainer;\n    /**\n     * Whether the user's pointer was over the container when the item was dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.isPointerOverContainer;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.distance;\n}\n/**\n * Event emitted as the user is dragging a draggable item.\n * @record\n * @template T\n */\nfunction CdkDragMove() { }\nif (false) {\n    /**\n     * Item that is being dragged.\n     * @type {?}\n     */\n    CdkDragMove.prototype.source;\n    /**\n     * Position of the user's pointer on the page.\n     * @type {?}\n     */\n    CdkDragMove.prototype.pointerPosition;\n    /**\n     * Native event that is causing the dragging.\n     * @type {?}\n     */\n    CdkDragMove.prototype.event;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragMove.prototype.distance;\n    /**\n     * Indicates the direction in which the user is dragging the element along each axis.\n     * `1` means that the position is increasing (e.g. the user is moving to the right or downwards),\n     * whereas `-1` means that it's decreasing (they're moving to the left or upwards). `0` means\n     * that the position hasn't changed.\n     * @type {?}\n     */\n    CdkDragMove.prototype.delta;\n}\n/**\n * Event emitted when the user swaps the position of two drag items.\n * @record\n * @template T, I\n */\nfunction CdkDragSortEvent() { }\nif (false) {\n    /**\n     * Index from which the item was sorted previously.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.previousIndex;\n    /**\n     * Index that the item is currently in.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.currentIndex;\n    /**\n     * Container that the item belongs to.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.container;\n    /**\n     * Item that is being sorted.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.item;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-parent.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-handle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Handle that can be used to drag and CdkDrag instance.\n */\nclass CdkDragHandle {\n    /**\n     * @param {?} element\n     * @param {?=} parentDrag\n     */\n    constructor(element, parentDrag) {\n        this.element = element;\n        /**\n         * Emits when the state of the handle has changed.\n         */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    /**\n     * Whether starting to drag through this handle is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 8)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] } });\n/** @nocollapse */\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDragHandle.ngAcceptInputType_disabled;\n    /**\n     * Closest parent draggable instance.\n     * @type {?}\n     */\n    CdkDragHandle.prototype._parentDrag;\n    /**\n     * Emits when the state of the handle has changed.\n     * @type {?}\n     */\n    CdkDragHandle.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDragHandle.prototype._disabled;\n    /** @type {?} */\n    CdkDragHandle.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n * @template T\n */\nclass CdkDragPlaceholder {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" } });\n/** @nocollapse */\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Context data to be added to the placeholder template instance.\n     * @type {?}\n     */\n    CdkDragPlaceholder.prototype.data;\n    /** @type {?} */\n    CdkDragPlaceholder.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-preview.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n * @template T\n */\nclass CdkDragPreview {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /**\n     * Whether the preview should preserve the same size as the item that is being dragged.\n     * @return {?}\n     */\n    get matchSize() { return this._matchSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" } });\n/** @nocollapse */\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDragPreview.ngAcceptInputType_matchSize;\n    /**\n     * Context data to be added to the preview template instance.\n     * @type {?}\n     */\n    CdkDragPreview.prototype.data;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDragPreview.prototype._matchSize;\n    /** @type {?} */\n    CdkDragPreview.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n * @type {?}\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n/**\n * Object that can be used to configure the drag\n * items and drop lists within a module or a component.\n * @record\n */\nfunction DragDropConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.lockAxis;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.dragStartDelay;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.constrainPosition;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.previewClass;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.boundaryElement;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.rootElementSelector;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.draggingDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.sortingDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.listAutoScrollDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.listOrientation;\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @return {?}\n */\nfunction CDK_DRAG_CONFIG_FACTORY() {\n    return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @type {?}\n */\nconst CDK_DROP_LIST = new InjectionToken('CDK_DROP_LIST');\n/**\n * Element that can be moved inside a CdkDropList container.\n * @template T\n */\nclass CdkDrag {\n    /**\n     * @param {?} element\n     * @param {?} dropContainer\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} config\n     * @param {?} _dir\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     */\n    constructor(element, dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._destroyed = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new EventEmitter();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new EventEmitter();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new EventEmitter();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._dragRef.moved.pipe(map((/**\n             * @param {?} movedEvent\n             * @return {?}\n             */\n            movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            })))).subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n            });\n        }));\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                /** @type {?} */\n                const childHandleElements = handles\n                    .filter((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle._parentDrag === this))\n                    .map((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle.element));\n                this._dragRef.withHandles(childHandleElements);\n            })), \n            // Listen if the state of any of the handles changes.\n            switchMap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                return (/** @type {?} */ (merge(...handles.map((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                item => {\n                    return item._stateChanges.pipe(startWith(item));\n                })))));\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} handleInstance\n             * @return {?}\n             */\n            handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                /** @type {?} */\n                const dragRef = this._dragRef;\n                /** @type {?} */\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            }));\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const rootSelectorChange = changes['rootElementSelector'];\n        /** @type {?} */\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    _updateRootElement() {\n        /** @type {?} */\n        const element = this.element.nativeElement;\n        /** @type {?} */\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    _getBoundaryElement() {\n        /** @type {?} */\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        /** @type {?} */\n        const element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!ref.isDragging()) {\n                /** @type {?} */\n                const dir = this._dir;\n                /** @type {?} */\n                const dragStartDelay = this.dragStartDelay;\n                /** @type {?} */\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                /** @type {?} */\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        }));\n    }\n    /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.started.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.released.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.released.emit({ source: this });\n        }));\n        ref.ended.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        }));\n    }\n    /**\n     * Assigns the default input values based on a provided config object.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPreview, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragHandle, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CdkDragHandle, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CdkDragHandle, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPreview]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPlaceholder]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDrag.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._destroyed;\n    /**\n     * Reference to the underlying drag instance.\n     * @type {?}\n     */\n    CdkDrag.prototype._dragRef;\n    /**\n     * Elements that can be used to drag the draggable item.\n     * @type {?}\n     */\n    CdkDrag.prototype._handles;\n    /**\n     * Element that will be used as a template to create the draggable item's preview.\n     * @type {?}\n     */\n    CdkDrag.prototype._previewTemplate;\n    /**\n     * Template for placeholder element rendered to show where a draggable would be dropped.\n     * @type {?}\n     */\n    CdkDrag.prototype._placeholderTemplate;\n    /**\n     * Arbitrary data to attach to this drag instance.\n     * @type {?}\n     */\n    CdkDrag.prototype.data;\n    /**\n     * Locks the position of the dragged element along the specified axis.\n     * @type {?}\n     */\n    CdkDrag.prototype.lockAxis;\n    /**\n     * Selector that will be used to determine the root draggable element, starting from\n     * the `cdkDrag` element and going up the DOM. Passing an alternate root element is useful\n     * when trying to enable dragging on an element that you might not have access to.\n     * @type {?}\n     */\n    CdkDrag.prototype.rootElementSelector;\n    /**\n     * Node or selector that will be used to determine the element to which the draggable's\n     * position will be constrained. If a string is passed in, it'll be used as a selector that\n     * will be matched starting from the element's parent and going up the DOM until a match\n     * has been found.\n     * @type {?}\n     */\n    CdkDrag.prototype.boundaryElement;\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     * @type {?}\n     */\n    CdkDrag.prototype.dragStartDelay;\n    /**\n     * Sets the position of a `CdkDrag` that is outside of a drop container.\n     * Can be used to restore the element's position for a returning user.\n     * @type {?}\n     */\n    CdkDrag.prototype.freeDragPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._disabled;\n    /**\n     * Function that can be used to customize the logic of how the position of the drag item\n     * is limited while it's being dragged. Gets called with a point containing the current position\n     * of the user's pointer on the page and should return a point describing where the item should\n     * be rendered.\n     * @type {?}\n     */\n    CdkDrag.prototype.constrainPosition;\n    /**\n     * Class to be added to the preview element.\n     * @type {?}\n     */\n    CdkDrag.prototype.previewClass;\n    /**\n     * Emits when the user starts dragging the item.\n     * @type {?}\n     */\n    CdkDrag.prototype.started;\n    /**\n     * Emits when the user has released a drag item, before any animations have started.\n     * @type {?}\n     */\n    CdkDrag.prototype.released;\n    /**\n     * Emits when the user stops dragging an item in the container.\n     * @type {?}\n     */\n    CdkDrag.prototype.ended;\n    /**\n     * Emits when the user has moved the item into a new container.\n     * @type {?}\n     */\n    CdkDrag.prototype.entered;\n    /**\n     * Emits when the user removes the item its container by dragging it into another container.\n     * @type {?}\n     */\n    CdkDrag.prototype.exited;\n    /**\n     * Emits when the user drops the item inside a container.\n     * @type {?}\n     */\n    CdkDrag.prototype.dropped;\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     * @type {?}\n     */\n    CdkDrag.prototype.moved;\n    /**\n     * Element that the draggable is attached to.\n     * @type {?}\n     */\n    CdkDrag.prototype.element;\n    /**\n     * Droppable container that the draggable is a part of.\n     * @type {?}\n     */\n    CdkDrag.prototype.dropContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._changeDetectorRef;\n}\n/**\n * Gets the closest ancestor of an element that matches a selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction getClosestMatchingAncestor(element, selector) {\n    /** @type {?} */\n    let currentElement = (/** @type {?} */ (element.parentElement));\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            ((/** @type {?} */ (currentElement))).msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drop-list-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n * @template T\n */\nclass CdkDropListGroup {\n    constructor() {\n        /**\n         * Drop lists registered inside the group.\n         */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /**\n     * Whether starting a dragging sequence from inside this group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup'\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDropListGroup.ngAcceptInputType_disabled;\n    /**\n     * Drop lists registered inside the group.\n     * @type {?}\n     */\n    CdkDropListGroup.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropListGroup.prototype._disabled;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drop-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop zones.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Internal compile-time-only representation of a `CdkDropList`.\n * Used to avoid circular import issues between the `CdkDropList` and the `CdkDrag`.\n * \\@docs-private\n * @record\n */\nfunction CdkDropListInternal() { }\nconst ɵ0 = undefined;\n/**\n * Container that wraps a set of draggable items.\n * @template T\n */\nclass CdkDropList {\n    /**\n     * @param {?} element\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     * @param {?=} _dir\n     * @param {?=} _group\n     * @param {?=} _scrollDispatcher\n     * @param {?=} config\n     */\n    constructor(element, dragDrop, _changeDetectorRef, _dir, _group, _scrollDispatcher, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        this._scrollDispatcher = _scrollDispatcher;\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (/**\n         * @param {?} drag\n         * @param {?} drop\n         * @return {?}\n         */\n        (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        });\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n        if (this._scrollDispatcher) {\n            /** @type {?} */\n            const scrollableParents = this._scrollDispatcher\n                .getAncestorScrollContainers(this.element)\n                .map((/**\n             * @param {?} scrollable\n             * @return {?}\n             */\n            scrollable => scrollable.getElementRef().nativeElement));\n            this._dropListRef.withScrollableParents(scrollableParents);\n        }\n    }\n    /**\n     * Registers an items with the drop list.\n     * @param {?} item\n     * @return {?}\n     */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /**\n     * Removes an item from the drop list.\n     * @param {?} item\n     * @return {?}\n     */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /**\n     * Gets the registered items in the list, sorted by their position in the DOM.\n     * @return {?}\n     */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            /** @type {?} */\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Starts dragging an item.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @return {?}\n     */\n    start() {\n        this._dropListRef.start();\n    }\n    /**\n     * Drops an item into this container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     *\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer) {\n        this._dropListRef.drop(item._dragRef, currentIndex, previousContainer._dropListRef, isPointerOverContainer, { x: 0, y: 0 });\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY) {\n        this._dropListRef.enter(item._dragRef, pointerX, pointerY);\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._dropListRef.exit(item._dragRef);\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        return this._dropListRef.getItemIndex(item._dragRef);\n    }\n    /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => ref.withDirection(value)));\n        }\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const siblings = coerceArray(this.connectedTo).map((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => {\n                return typeof drop === 'string' ?\n                    (/** @type {?} */ (CdkDropList._dropLists.find((/**\n                     * @param {?} list\n                     * @return {?}\n                     */\n                    list => list.id === drop)))) : drop;\n            }));\n            if (this._group) {\n                this._group._items.forEach((/**\n                 * @param {?} drop\n                 * @return {?}\n                 */\n                drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                }));\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => drop && drop !== this)).map((/**\n             * @param {?} list\n             * @return {?}\n             */\n            list => list._dropListRef)))\n                .withOrientation(this.orientation);\n        }));\n    }\n    /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.sorted.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Assigns the default input values based on a provided config object.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /**\n     * Syncs up the registered drag items with underlying drop list ref.\n     * @private\n     * @return {?}\n     */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._dragRef)));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CdkDropListGroup, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CdkDropListGroup, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/**\n * Keeps track of the drop lists that are currently on the page.\n */\nCdkDropList._dropLists = [];\n/** @nocollapse */\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ScrollDispatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CdkDropListGroup, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc1.ScrollDispatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }] }); })();\nif (false) {\n    /**\n     * Keeps track of the drop lists that are currently on the page.\n     * @type {?}\n     * @private\n     */\n    CdkDropList._dropLists;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_sortingDisabled;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_autoScrollDisabled;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._destroyed;\n    /**\n     * Reference to the underlying drop list instance.\n     * @type {?}\n     */\n    CdkDropList.prototype._dropListRef;\n    /**\n     * Other draggable containers that this container is connected to and into which the\n     * container's items can be transferred. Can either be references to other drop containers,\n     * or their unique IDs.\n     * @type {?}\n     */\n    CdkDropList.prototype.connectedTo;\n    /**\n     * Arbitrary data to attach to this container.\n     * @type {?}\n     */\n    CdkDropList.prototype.data;\n    /**\n     * Direction in which the list is oriented.\n     * @type {?}\n     */\n    CdkDropList.prototype.orientation;\n    /**\n     * Unique ID for the drop zone. Can be used as a reference\n     * in the `connectedTo` of another `CdkDropList`.\n     * @type {?}\n     */\n    CdkDropList.prototype.id;\n    /**\n     * Locks the position of the draggable elements inside the container along the specified axis.\n     * @type {?}\n     */\n    CdkDropList.prototype.lockAxis;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._disabled;\n    /**\n     * Whether sorting within this drop list is disabled.\n     * @type {?}\n     */\n    CdkDropList.prototype.sortingDisabled;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     * @type {?}\n     */\n    CdkDropList.prototype.enterPredicate;\n    /**\n     * Whether to auto-scroll the view when the user moves their pointer close to the edges.\n     * @type {?}\n     */\n    CdkDropList.prototype.autoScrollDisabled;\n    /**\n     * Emits when the user drops an item inside the container.\n     * @type {?}\n     */\n    CdkDropList.prototype.dropped;\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     * @type {?}\n     */\n    CdkDropList.prototype.entered;\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     * @type {?}\n     */\n    CdkDropList.prototype.exited;\n    /**\n     * Emits as the user is swapping items while actively dragging.\n     * @type {?}\n     */\n    CdkDropList.prototype.sorted;\n    /**\n     * Keeps track of the items that are registered with this container. Historically we used to\n     * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n     * well which means that we can't handle cases like dragging the headers of a `mat-table`\n     * correctly. What we do instead is to have the items register themselves with the container\n     * and then we sort them based on their position in the DOM.\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._unsortedItems;\n    /**\n     * Element that the drop list is attached to.\n     * @type {?}\n     */\n    CdkDropList.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._group;\n    /**\n     * @deprecated _scrollDispatcher parameter to become required.\n     * \\@breaking-change 11.0.0\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._scrollDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder], exports: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_CONFIG_FACTORY, CDK_DROP_LIST, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem, CDK_DRAG_PARENT as ɵangular_material_src_cdk_drag_drop_drag_drop_b };\n\n//# sourceMappingURL=drag-drop.js.map","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { prettyBytes } from '../core/utils/pretty-bytes';\r\n\r\n@Pipe({\r\n    name: 'formattedFileSize',\r\n    pure: true,\r\n})\r\nexport class FormattedFileSizePipe implements PipeTransform {\r\n    transform(bytes: number = 0, precision?: number|string): string {\r\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\r\n        return prettyBytes(bytes, precision);\r\n    }\r\n}\r\n","'use strict';\n\nconst word = '[a-fA-F\\\\d:]';\nconst b = options => options && options.includeBoundaries ?\n\t`(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` :\n\t'';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6seg = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(:${v6seg}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(:${v6seg}){0,1}:${v4}|(:${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(:${v6seg}){0,2}:${v4}|(:${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(:${v6seg}){0,3}:${v4}|(:${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(:${v6seg}){0,4}:${v4}|(:${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::((?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\nconst ip = options => options && options.exact ?\n\tnew RegExp(`(?:^${v4}$)|(?:^${v6}$)`) :\n\tnew RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');\n\nip.v4 = options => options && options.exact ? new RegExp(`^${v4}$`) : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\nip.v6 = options => options && options.exact ? new RegExp(`^${v6}$`) : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\nmodule.exports = ip;\n","import { Directive, Input, EventEmitter, Optional, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /**\n         * Emits when the state of the accordion changes\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Stream that emits true/false when openAll/closeAll is triggered.\n         */\n        this._openCloseAllActions = new Subject();\n        /**\n         * A readonly id value to use for unique selection coordination.\n         */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /**\n     * Whether the accordion should allow multiple expanded accordion items simultaneously.\n     * @return {?}\n     */\n    get multi() { return this._multi; }\n    /**\n     * @param {?} multi\n     * @return {?}\n     */\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /**\n     * Opens all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /**\n     * Closes all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @private\n     * @param {?} expanded\n     * @return {?}\n     */\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion'\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordion.ngAcceptInputType_multi;\n    /**\n     * Emits when the state of the accordion changes\n     * @type {?}\n     */\n    CdkAccordion.prototype._stateChanges;\n    /**\n     * Stream that emits true/false when openAll/closeAll is triggered.\n     * @type {?}\n     */\n    CdkAccordion.prototype._openCloseAllActions;\n    /**\n     * A readonly id value to use for unique selection coordination.\n     * @type {?}\n     */\n    CdkAccordion.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordion.prototype._multi;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion item.\n * @type {?}\n */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /**\n         * Subscription to openAll/closeAll events.\n         */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted every time the AccordionItem is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted every time the AccordionItem is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event emitted when the AccordionItem is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * \\@docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /**\n         * The unique AccordionItem id.\n         */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /**\n         * Unregister function for _expansionDispatcher.\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} accordionId\n             * @return {?}\n             */\n            (id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            }));\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /**\n     * Whether the AccordionItem is expanded.\n     * @return {?}\n     */\n    get expanded() { return this._expanded; }\n    /**\n     * @param {?} expanded\n     * @return {?}\n     */\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 * @type {?}\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the AccordionItem is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /**\n     * Emits an event for the accordion item being destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /**\n     * Toggles the expanded state of the accordion item.\n     * @return {?}\n     */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to false.\n     * @return {?}\n     */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to true.\n     * @return {?}\n     */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe((/**\n         * @param {?} expanded\n         * @return {?}\n         */\n        expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        }));\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CdkAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n            // to the same accordion.\n            { provide: CdkAccordion, useValue: ɵ0 },\n        ])] });\n/** @nocollapse */\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n                    // to the same accordion.\n                    { provide: CdkAccordion, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_expanded;\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_disabled;\n    /**\n     * Subscription to openAll/closeAll events.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._openCloseAllSubscription;\n    /**\n     * Event emitted every time the AccordionItem is closed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.closed;\n    /**\n     * Event emitted every time the AccordionItem is opened.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.opened;\n    /**\n     * Event emitted when the AccordionItem is destroyed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.destroyed;\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.expandedChange;\n    /**\n     * The unique AccordionItem id.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._disabled;\n    /**\n     * Unregister function for _expansionDispatcher.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._removeUniqueSelectionListener;\n    /** @type {?} */\n    CdkAccordionItem.prototype.accordion;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkAccordionItem.prototype._expansionDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion,\n        CdkAccordionItem], exports: [CdkAccordion,\n        CdkAccordionItem] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n\n//# sourceMappingURL=accordion.js.map","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE, HOME, END } from '@angular/cdk/keycodes';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, group, query, animateChild } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a `MatAccordion`.\n * \\@docs-private\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r104 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r104._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nfunction MatAccordionBase() { }\nif (false) {\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.togglePosition;\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderKeydown;\n    /**\n     * Handles focus events on the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderFocus;\n}\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\nconst matExpansionAnimations = {\n    /**\n     * Animation that rotates the indicator arrow.\n     */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /**\n     * Animation that expands and collapses the panel header height.\n     */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /**\n     * Animation that expands and collapses the panel content.\n     */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanelContent.prototype._template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * Object that can be used to override the default options\n * for all of the expansion panels in a module.\n * @record\n */\nfunction MatExpansionPanelDefaultOptions() { }\nif (false) {\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.collapsedHeight;\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.hideToggle;\n}\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?} _animationMode\n     * @param {?=} defaultOptions\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /**\n         * Stream of body animation done events.\n         */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        }));\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * The position of the expansion indicator.\n     * @return {?}\n     */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * Toggles the expanded state of the expansion panel.\n     * @return {?}\n     */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to false.\n     * @return {?}\n     */\n    close() {\n        this.expanded = false;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to true.\n     * @return {?}\n     */\n    open() {\n        this.expanded = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith((/** @type {?} */ (null))), filter((/**\n             * @return {?}\n             */\n            () => this.expanded && !this._portal)), take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_hideToggle;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_expanded;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._togglePosition;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterExpand;\n    /**\n     * An event emitted after the body's collapse animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterCollapse;\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._inputChanges;\n    /**\n     * Optionally defined accordion the expansion panel belongs to.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.accordion;\n    /**\n     * Content that will be rendered lazily.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._lazyContent;\n    /**\n     * Element containing the panel's user-provided content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._body;\n    /**\n     * Portal holding the user's content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._portal;\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._headerId;\n    /**\n     * Stream of body animation done events.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._bodyAnimationDone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._viewContainerRef;\n    /** @type {?} */\n    MatExpansionPanel.prototype._animationMode;\n}\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultOptions\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /**\n         * Whether Angular animations in the panel header should be disabled.\n         */\n        this._animationsDisabled = true;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => !!(changes['hideToggle'] || changes['togglePosition'])))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            }))))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter((/**\n         * @return {?}\n         */\n        () => panel._containsFocus())))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => _focusMonitor.focusVia(_element, 'program')));\n        _focusMonitor.monitor(_element).subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        }));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _animationStarted() {\n        // Currently the `expansionHeight` animation has a `void => collapsed` transition which is\n        // there to work around a bug in Angular (see #13088), however this introduces a different\n        // issue. The new transition will cause the header to animate in on init (see #16067), if the\n        // consumer has set a header height that is different from the default one. We work around it\n        // by disabling animations on the header and re-enabling them after the first animation has run.\n        // Note that Angular dispatches animation events even if animations are disabled. Ideally this\n        // wouldn't be necessary if we remove the `void => collapsed` transition, but we have to wait\n        // for https://github.com/angular/angular/issues/18847 to be resolved.\n        this._animationsDisabled = false;\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets the toggle position for the header.\n     * @return {?}\n     */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"], hostVars: 19, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@expansionHeight.start\", function MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler() { return ctx._animationStarted(); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? 0 - 1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@.disabled\", ctx._animationsDisabled)(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(16, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(13, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@.disabled]': '_animationsDisabled',\n                    '(@expansionHeight.start)': '_animationStarted()',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._parentChangeSubscription;\n    /**\n     * Whether Angular animations in the panel header should be disabled.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype._animationsDisabled;\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.collapsedHeight;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype.panel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._changeDetectorRef;\n}\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /**\n         * Headers belonging to this accordion.\n         */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /**\n         * The position of the expansion indicator.\n         */\n        this.togglePosition = 'after';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((/**\n         * @param {?} headers\n         * @return {?}\n         */\n        (headers) => {\n            this._ownHeaders.reset(headers.filter((/**\n             * @param {?} header\n             * @return {?}\n             */\n            header => header.panel.accordion === this)));\n            this._ownHeaders.notifyOnChanges();\n        }));\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            if (!hasModifierKey(event)) {\n                manager.setFirstItemActive();\n                event.preventDefault();\n            }\n        }\n        else if (keyCode === END) {\n            if (!hasModifierKey(event)) {\n                manager.setLastItemActive();\n                event.preventDefault();\n            }\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAccordion.ngAcceptInputType_hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._keyManager;\n    /**\n     * Headers belonging to this accordion.\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._ownHeaders;\n    /**\n     * All headers inside the accordion. Includes headers inside nested accordions.\n     * @type {?}\n     */\n    MatAccordion.prototype._headers;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     * @type {?}\n     */\n    MatAccordion.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordion.prototype.togglePosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); }, imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n\n//# sourceMappingURL=expansion.js.map","import {AbstractControl} from '@angular/forms';\r\nimport {distinctUntilChanged, filter} from 'rxjs/operators';\r\nimport {slugifyString} from '@common/core/utils/slugify-string';\r\n\r\nexport function bindSlugTo(control: AbstractControl) {\r\n    control.valueChanges\r\n        .pipe(filter(value => !!value), distinctUntilChanged())\r\n        .subscribe(value => {\r\n            if ( ! control.parent.get('slug').dirty) {\r\n                control.parent.get('slug').setValue(slugifyString(value));\r\n            }\r\n        });\r\n}\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {Translations} from '@common/core/translations/translations.service';\r\nimport {ucFirst} from '@common/core/utils/uc-first';\r\n\r\n@Component({\r\n    selector: 'full-plan-name',\r\n    template: '{{getFullPlanName()}}',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FullPlanNameComponent {\r\n    @Input() plan: Plan;\r\n\r\n    constructor(private i18n: Translations) {}\r\n\r\n    public getFullPlanName(): string {\r\n        if ( ! this.plan) return;\r\n        let name = this.plan.parent ? this.plan.parent.name : this.plan.name;\r\n        name = ucFirst(this.i18n.t(name));\r\n        name += ' ' + this.i18n.t('Plan');\r\n        if (this.plan.parent) name += ': ' + this.plan.name;\r\n        return name;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {catchError, mergeMap} from 'rxjs/operators';\nimport {EMPTY, of} from 'rxjs';\nimport {GetLinkResponse, LinkService} from '../../../shared/link/link.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LinkShowResolverService implements Resolve<BackendResponse<GetLinkResponse>> {\n    constructor(\n        private router: Router,\n        private http: AppHttpClient,\n        private link: LinkService,\n    ) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BackendResponse<GetLinkResponse> {\n        return this.link.get(route.params.linkId).pipe(\n            catchError(() => {\n                this.router.navigate(['/dashboard/links']);\n                return EMPTY;\n            }),\n            mergeMap(response => {\n                if (response) {\n                    return of(response);\n                } else {\n                    this.router.navigate(['/dashboard/links']);\n                    return EMPTY;\n                }\n            })\n        );\n    }\n}\n\n","import { SPACE, BACKSPACE, DELETE, HOME, END, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, forwardRef, Input, Output, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an event fired on an individual `mat-chip`.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nfunction MatChipEvent() { }\nif (false) {\n    /**\n     * The chip the event was fired on.\n     * @type {?}\n     */\n    MatChipEvent.prototype.chip;\n}\n/**\n * Event object emitted by MatChip when selected or deselected.\n */\nclass MatChipSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?} selected\n     * @param {?=} isUserInput\n     */\n    constructor(source, selected, isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the chip that emitted the event.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.source;\n    /**\n     * Whether the chip that emitted the event is selected.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.selected;\n    /**\n     * Whether the selection change was a result of a user interaction.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.isUserInput;\n}\n// Boilerplate for applying mixins to MatChip.\n/**\n * \\@docs-private\n */\nclass MatChipBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatChipBase)), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * \\@docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * \\@docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' }\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?=} animationMode\n     * @param {?=} _changeDetectorRef\n     * @param {?=} tabIndex\n     * @param {?=} _document\n     */\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Whether the chip has focus.\n         */\n        this._hasFocus = false;\n        /**\n         * Whether the chip list is selectable\n         */\n        this.chipListSelectable = true;\n        /**\n         * Whether the chip list is in multi-selection mode.\n         */\n        this._chipListMultiple = false;\n        this._selected = false;\n        this._selectable = true;\n        this._removable = true;\n        /**\n         * Emits when the chip is focused.\n         */\n        this._onFocus = new Subject();\n        /**\n         * Emits when the chip is blured.\n         */\n        this._onBlur = new Subject();\n        /**\n         * Emitted when the chip is selected or deselected.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Emitted when the chip is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emitted when a chip is to be removed.\n         */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /**\n     * Whether the chip is selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /**\n     * The value of the chip. Defaults to the content inside `<mat-chip>` tags.\n     * @return {?}\n     */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     * @return {?}\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     * @return {?}\n     */\n    get removable() { return this._removable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * The ARIA selected applied to the chip.\n     * @return {?}\n     */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    /**\n     * @return {?}\n     */\n    _addHostClassName() {\n        /** @type {?} */\n        const basicChipAttrName = 'mat-basic-chip';\n        /** @type {?} */\n        const element = (/** @type {?} */ (this._elementRef.nativeElement));\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /**\n     * Selects the chip.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /**\n     * Handles click events on the chip.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipAvatar, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipTrailingIcon, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipRemove, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MatChipAvatar,] }],\n    trailingIcon: [{ type: ContentChild, args: [MatChipTrailingIcon,] }],\n    removeIcon: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatChipRemove)),] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MatChipAvatar]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MatChipTrailingIcon]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatChipRemove))]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selectable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_removable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disableRipple;\n    /**\n     * Reference to the RippleRenderer for the chip.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRipple;\n    /**\n     * Reference to the element that acts as the chip's ripple target. This element is\n     * dynamically added as a child node of the chip. The chip itself cannot be used as the\n     * ripple target because it must be the host of the focus indicator.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRippleTarget;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the chip ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChip.prototype.rippleConfig;\n    /**\n     * Whether the chip has focus.\n     * @type {?}\n     */\n    MatChip.prototype._hasFocus;\n    /**\n     * Whether animations for the chip are enabled.\n     * @type {?}\n     */\n    MatChip.prototype._animationsDisabled;\n    /**\n     * Whether the chip list is selectable\n     * @type {?}\n     */\n    MatChip.prototype.chipListSelectable;\n    /**\n     * Whether the chip list is in multi-selection mode.\n     * @type {?}\n     */\n    MatChip.prototype._chipListMultiple;\n    /**\n     * The chip avatar\n     * @type {?}\n     */\n    MatChip.prototype.avatar;\n    /**\n     * The chip's trailing icon.\n     * @type {?}\n     */\n    MatChip.prototype.trailingIcon;\n    /**\n     * The chip's remove toggler.\n     * @type {?}\n     */\n    MatChip.prototype.removeIcon;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selectable;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._removable;\n    /**\n     * Emits when the chip is focused.\n     * @type {?}\n     */\n    MatChip.prototype._onFocus;\n    /**\n     * Emits when the chip is blured.\n     * @type {?}\n     */\n    MatChip.prototype._onBlur;\n    /**\n     * Emitted when the chip is selected or deselected.\n     * @type {?}\n     */\n    MatChip.prototype.selectionChange;\n    /**\n     * Emitted when the chip is destroyed.\n     * @type {?}\n     */\n    MatChip.prototype.destroyed;\n    /**\n     * Emitted when a chip is to be removed.\n     * @type {?}\n     */\n    MatChip.prototype.removed;\n    /** @type {?} */\n    MatChip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._changeDetectorRef;\n}\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    /**\n     * @param {?} _parentChip\n     * @param {?=} elementRef\n     */\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        /** @type {?} */\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } } });\n/** @nocollapse */\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                }\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipRemove.prototype._parentChip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-default-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default options, for the chips module, that can be overridden.\n * @record\n */\nfunction MatChipsDefaultOptions() { }\nif (false) {\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     * @type {?}\n     */\n    MatChipsDefaultOptions.prototype.separatorKeyCodes;\n}\n/**\n * Injection token to be used to override the default options for the chips module.\n * @type {?}\n */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatChipList.\n/**\n * \\@docs-private\n */\nclass MatChipListBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipListBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatChipListBase.prototype._parentForm;\n    /** @type {?} */\n    MatChipListBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipListBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Change event object that is emitted when the chip list value has changed.\n */\nclass MatChipListChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Chip list that emitted the event.\n     * @type {?}\n     */\n    MatChipListChange.prototype.source;\n    /**\n     * Value of the chip list when the event was emitted.\n     * @type {?}\n     */\n    MatChipListChange.prototype.value;\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Uid of the chip list\n         */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /**\n         * Tab index for the chip list.\n         */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /**\n         * Function when touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Function when changed\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._multiple = false;\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._required = false;\n        this._disabled = false;\n        /**\n         * Orientation of the chip list.\n         */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * Event emitted when the selected chip list value has been changed by the user.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * The array of selected chips inside chip list.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The ARIA role applied to the chip list.\n     * @return {?}\n     */\n    get role() { return this.empty ? null : 'listbox'; }\n    /**\n     * Whether the user should be allowed to select multiple chips.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether any chips or the matChipInput inside of this chip-list has focus.\n     * @return {?}\n     */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     * @return {?}\n     */\n    get selectable() { return this._selectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.chipListSelectable = this._selectable));\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /**\n     * Combined stream of all of the child chips' selection change events.\n     * @return {?}\n     */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.selectionChange)));\n    }\n    /**\n     * Combined stream of all of the child chips' focus change events.\n     * @return {?}\n     */\n    get chipFocusChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onFocus)));\n    }\n    /**\n     * Combined stream of all of the child chips' blur change events.\n     * @return {?}\n     */\n    get chipBlurChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onBlur)));\n    }\n    /**\n     * Combined stream of all of the child chips' remove change events.\n     * @return {?}\n     */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.destroyed)));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            dir => this._keyManager.withHorizontalOrientation(dir)));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._syncChipsState();\n                }));\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Attempt to focus an input if we have one.\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            if (event.keyCode === HOME) {\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (event.keyCode === END) {\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @protected\n     * @return {?}\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     * @protected\n     * @return {?}\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                /** @type {?} */\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            /** @type {?} */\n            let input = (/** @type {?} */ (element));\n            return !input.value;\n        }\n        return false;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.deselect()));\n        if (Array.isArray(value)) {\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            currentValue => this._selectValue(currentValue, isUserInput)));\n            this._sortValues();\n        }\n        else {\n            /** @type {?} */\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @private\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        /** @type {?} */\n        const correspondingChip = this.chips.find((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        }));\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        }));\n    }\n    /**\n     * Deselects every chip in the list.\n     * @private\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        }));\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.value));\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                }));\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach((/**\n                 * @param {?} chip\n                 * @return {?}\n                 */\n                chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                }));\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        }));\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        }));\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._blur();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            const chip = event.chip;\n            /** @type {?} */\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        }));\n    }\n    /**\n     * Checks whether an event comes from inside a chip element.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _originatesFromChip(event) {\n        /** @type {?} */\n        let currentElement = (/** @type {?} */ (event.target));\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /**\n     * Checks whether any of the chips is focused.\n     * @private\n     * @return {?}\n     */\n    _hasFocusedChip() {\n        return this.chips.some((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._hasFocus));\n    }\n    /**\n     * Syncs the list's state with the individual chips.\n     * @private\n     * @return {?}\n     */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                chip.disabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            }));\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_required;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_selectable;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.controlType;\n    /**\n     * When a chip is destroyed, we store the index of the destroyed chip until the chips\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate chip that should receive focus until the array of chips updated completely.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._lastDestroyedChipIndex;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._destroyed;\n    /**\n     * Subscription to focus changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipFocusSubscription;\n    /**\n     * Subscription to blur changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipBlurSubscription;\n    /**\n     * Subscription to selection changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipSelectionSubscription;\n    /**\n     * Subscription to remove changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipRemoveSubscription;\n    /**\n     * The chip input to add more chips\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._chipInput;\n    /**\n     * Uid of the chip list\n     * @type {?}\n     */\n    MatChipList.prototype._uid;\n    /**\n     * The aria-describedby attribute on the chip list for improved a11y.\n     * @type {?}\n     */\n    MatChipList.prototype._ariaDescribedby;\n    /**\n     * Tab index for the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype._tabIndex;\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use _tabIndex\n     * @type {?}\n     */\n    MatChipList.prototype._userTabIndex;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatChipList.prototype._keyManager;\n    /**\n     * Function when touched\n     * @type {?}\n     */\n    MatChipList.prototype._onTouched;\n    /**\n     * Function when changed\n     * @type {?}\n     */\n    MatChipList.prototype._onChange;\n    /** @type {?} */\n    MatChipList.prototype._selectionModel;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatChipList.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._compareWith;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._disabled;\n    /**\n     * Orientation of the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.ariaOrientation;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._selectable;\n    /**\n     * Event emitted when the selected chip list value has been changed by the user.\n     * @type {?}\n     */\n    MatChipList.prototype.change;\n    /**\n     * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.valueChange;\n    /**\n     * The chip components contained within this chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.chips;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._dir;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.ngControl;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an input event on a `matChipInput`.\n * @record\n */\nfunction MatChipInputEvent() { }\nif (false) {\n    /**\n     * The native `<input>` element that the event is being fired for.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.input;\n    /**\n     * The value of the input.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.value;\n}\n// Increasing integer for generating unique ids.\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * Whether the control is focused.\n         */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /**\n         * Emitted when a chip is to be added.\n         */\n        this.chipEnd = new EventEmitter();\n        /**\n         * The input's placeholder text.\n         */\n        this.placeholder = '';\n        /**\n         * Unique id for the input.\n         */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Register input for chip list\n     * @param {?} value\n     * @return {?}\n     */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     * @return {?}\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is empty.\n     * @return {?}\n     */\n    get empty() { return !this._inputElement.value; }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /**\n     * Checks whether a keycode is one of the configured separators.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _isSeparatorKey(event) {\n        if (hasModifierKey(event)) {\n            return false;\n        }\n        /** @type {?} */\n        const separators = this.separatorKeyCodes;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_addOnBlur;\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatChipInput.prototype.focused;\n    /** @type {?} */\n    MatChipInput.prototype._chipList;\n    /** @type {?} */\n    MatChipInput.prototype._addOnBlur;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     * @type {?}\n     */\n    MatChipInput.prototype.separatorKeyCodes;\n    /**\n     * Emitted when a chip is to be added.\n     * @type {?}\n     */\n    MatChipInput.prototype.chipEnd;\n    /**\n     * The input's placeholder text.\n     * @type {?}\n     */\n    MatChipInput.prototype.placeholder;\n    /**\n     * Unique id for the input.\n     * @type {?}\n     */\n    MatChipInput.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._disabled;\n    /**\n     * The native input element to which this directive is attached.\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._defaultOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chips-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = ({\n    separatorKeyCodes: [ENTER]\n});\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ( /** @type {?} */(ɵ0))\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon], exports: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ( /** @type {?} */(ɵ0))\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule };\n\n//# sourceMappingURL=chips.js.map","(function (root, factory) {\n  if (root === undefined && window !== undefined) root = window;\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([\"chartist\"], function (a0) {\n      return (root['Chartist.plugins.tooltip'] = factory(a0));\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.tooltip'] = factory(root[\"Chartist\"]);\n  }\n}(this, function (Chartist) {\n\n/**\n * Chartist.js plugin to display a data label on top of the points in a line chart.\n *\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  var defaultOptions = {\n    currency: undefined,\n    currencyFormatCallback: undefined,\n    tooltipOffset: {\n      x: 0,\n      y: -20,\n    },\n    anchorToPoint: false,\n    appendToBody: true,\n    class: undefined,\n    pointClass: 'ct-point',\n  };\n\n  Chartist.plugins = Chartist.plugins || {};\n  Chartist.plugins.tooltip = function (options) {\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function tooltip(chart) {\n      // Warning: If you are using npm link or yarn link, these instanceof checks will fail and you won't any tooltips\n      var tooltipSelector = options.pointClass;\n      if (chart instanceof Chartist.Bar) {\n        tooltipSelector = 'ct-bar';\n      } else if (chart instanceof Chartist.Pie) {\n        // Added support for donut graph\n        if (chart.options.donut) {\n          // Added support for the solid donut graph\n          tooltipSelector = chart.options.donutSolid ? 'ct-slice-donut-solid' : 'ct-slice-donut';\n        } else {\n          tooltipSelector = 'ct-slice-pie';\n        }\n      }\n\n      var $chart = chart.container;\n      var $toolTipIsShown = false;\n      var $tooltipOffsetParent = offsetParent($chart);\n      var $toolTip;\n\n      if (!options.appendToBody) {\n        // searching for existing tooltip in the chart, because appendToBody is disabled\n        $toolTip = $chart.querySelector('.chartist-tooltip');\n      } else {\n        // searching for existing tooltip in the body, because appendToBody is enabled\n        $toolTip = document.querySelector('.chartist-tooltip');\n      }\n      if (!$toolTip) {\n        $toolTip = document.createElement('div');\n        $toolTip.className = (!options.class) ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\n        if (!options.appendToBody) {\n          $chart.appendChild($toolTip);\n        } else {\n          document.body.appendChild($toolTip);\n        }\n      }\n      var height = $toolTip.offsetHeight;\n      var width = $toolTip.offsetWidth;\n\n      hide($toolTip);\n\n      function on(event, selector, callback) {\n        $chart.addEventListener(event, function (e) {\n          if (!selector || hasClass(e.target, selector))\n            callback(e);\n        });\n      }\n\n      on('mouseover', tooltipSelector, function (event) {\n        var $point = event.target;\n        var tooltipText = '';\n\n        var isPieChart = (chart instanceof Chartist.Pie) ? $point : $point.parentNode;\n        var seriesName = (isPieChart) ? $point.parentNode.getAttribute('ct:meta') || $point.parentNode.getAttribute('ct:series-name') : '';\n        var meta = $point.getAttribute('ct:meta') || seriesName || '';\n        var hasMeta = !!meta;\n        var value = $point.getAttribute('ct:value');\n\n        if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\n          value = options.transformTooltipTextFnc(value);\n        }\n\n        if (options.tooltipFnc && typeof options.tooltipFnc === 'function') {\n          tooltipText = options.tooltipFnc(meta, value);\n        } else {\n          if (options.metaIsHTML) {\n            var txt = document.createElement('textarea');\n            txt.innerHTML = meta;\n            meta = txt.value;\n          }\n\n          meta = '<span class=\"chartist-tooltip-meta\">' + meta + '</span>';\n\n          if (hasMeta) {\n            tooltipText += meta + '<br>';\n          } else {\n            // For Pie Charts also take the labels into account\n            // Could add support for more charts here as well!\n            if (chart instanceof Chartist.Pie) {\n              var label = next($point, 'ct-label');\n              if (label) {\n                tooltipText += text(label) + '<br>';\n              }\n            }\n          }\n\n          if (value) {\n            if (options.currency) {\n              if (options.currencyFormatCallback != undefined) {\n                value = options.currencyFormatCallback(value, options);\n              } else {\n                value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, '$1,');\n              }\n            }\n            value = '<span class=\"chartist-tooltip-value\">' + value + '</span>';\n            tooltipText += value;\n          }\n        }\n\n        if (tooltipText) {\n          $toolTip.innerHTML = tooltipText;\n\n          // Calculate new width and height, as toolTip width/height may have changed with innerHTML change\n          height = $toolTip.offsetHeight;\n          width = $toolTip.offsetWidth;\n\n          if (options.appendToBody !== true) {\n            $tooltipOffsetParent = offsetParent($chart);\n          }\n          if ($toolTip.style.display !== 'absolute') {\n            $toolTip.style.display = 'absolute';\n          }\n          setPosition(event);\n          show($toolTip);\n\n          // Remember height and width to avoid wrong position in IE\n          height = $toolTip.offsetHeight;\n          width = $toolTip.offsetWidth;\n        }\n      });\n\n      on('mouseout', tooltipSelector, function () {\n        hide($toolTip);\n      });\n\n      on('mousemove', null, function (event) {\n        if (options.anchorToPoint === false && $toolTipIsShown) {\n          setPosition(event);\n        }\n      });\n\n      function setPosition(event) {\n        height = height || $toolTip.offsetHeight;\n        width = width || $toolTip.offsetWidth;\n        var offsetX = -width / 2 + options.tooltipOffset.x;\n        var offsetY = -height + options.tooltipOffset.y;\n\n        var anchor = options.anchorToPoint === true && event.target.x2 && event.target.y2;\n\n        if (options.appendToBody === true) {\n          if (anchor) {\n            var box = $chart.getBoundingClientRect();\n            var left = event.target.x2.baseVal.value + box.left + window.pageXOffset;\n            var top = event.target.y2.baseVal.value + box.top + window.pageYOffset;\n\n            $toolTip.style.left = left + offsetX + 'px';\n            $toolTip.style.top = top + offsetY + 'px';\n          } else {\n            $toolTip.style.left = event.pageX + offsetX + 'px';\n            $toolTip.style.top = event.pageY + offsetY + 'px';\n          }\n        } else {\n          var offsetBox = $tooltipOffsetParent.getBoundingClientRect();\n          var allOffsetLeft = -offsetBox.left - window.scrollX + offsetX;\n          var allOffsetTop = -offsetBox.top - window.scrollY + offsetY;\n\n          if (anchor) {\n            var box = $chart.getBoundingClientRect();\n            var left = event.target.x2.baseVal.value + box.left + window.pageXOffset;\n            var top = event.target.y2.baseVal.value + box.top + window.pageYOffset;\n\n            $toolTip.style.left = left + allOffsetLeft + 'px';\n            $toolTip.style.top = top + allOffsetTop + 'px';\n          } else {\n            $toolTip.style.left = event.pageX + allOffsetLeft + 'px';\n            $toolTip.style.top = event.pageY + allOffsetTop + 'px';\n          }\n        }\n      }\n\n      /**\n       * Shows the tooltip element, if not shown\n       * @param element\n       */\n      function show(element) {\n        $toolTipIsShown = true;\n        if (!hasClass(element, 'tooltip-show')) {\n          element.className = element.className + ' tooltip-show';\n        }\n      }\n\n      /**\n       * Hides the tooltip element\n       * @param element\n       */\n      function hide(element) {\n        $toolTipIsShown = false;\n        var regex = new RegExp('tooltip-show' + '\\\\s*', 'gi');\n        element.className = element.className.replace(regex, '').trim();\n      }\n\n    };\n  };\n\n  /**\n   * Returns whether a element has a css class called className\n   * @param element\n   * @param className\n   * @return {boolean}\n   */\n  function hasClass(element, className) {\n    return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\n  }\n\n  function next(element, className) {\n    do {\n      element = element.nextSibling;\n    } while (element && !hasClass(element, className));\n    return element;\n  }\n\n  /**\n   *\n   * @param element\n   * @return {string | string}\n   */\n  function text(element) {\n    return element.innerText || element.textContent;\n  }\n\n  /**\n   * Returns the first positioned parent of the element\n   * @return HTMLElement\n   */\n  function offsetParent(elem) {\n    if (offsetParent in elem) {\n      // Using the native property if possible\n      var parent = elem.offsetParent;\n\n      if (!parent) {\n        parent = document.body.parentElement;\n      }\n\n      return parent;\n    }\n\n    var parent = elem.parentNode;\n    if (!parent) {\n      return document.body.parentElement;\n    }\n\n    if (window.getComputedStyle(parent).position !== 'static') {\n      return parent;\n    } else if (parent.tagName === 'BODY') {\n      return parent.parentElement;\n    } else {\n      return offsetParent(parent);\n    }\n  }\n\n}(window, document, Chartist));\n\nreturn Chartist.plugins.tooltip;\n\n}));\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {GetLinkResponse} from '../../../shared/link/link.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {BehaviorSubject} from 'rxjs';\nimport {getFaviconFromUrl} from '@common/core/utils/get-favicon-from-url';\nimport {Settings} from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'link-show',\n    templateUrl: './link-show.component.html',\n    styleUrls: ['./link-show.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkShowComponent implements OnInit {\n    public data$ = new BehaviorSubject<GetLinkResponse>(null);\n\n    constructor(\n        private route: ActivatedRoute,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe((data: {api: GetLinkResponse}) => {\n            this.data$.next(data.api);\n        });\n    }\n\n    public favicon(url: string) {\n        return getFaviconFromUrl(url);\n    }\n}\n","<ng-container *ngIf=\"data$ | async as data\">\r\n    <header>\r\n        <img [src]=\"favicon(data.link.long_url)\" alt=\"link favicon\">\r\n        <a [href]=\"data.link.long_url\" class=\"long-url\" target=\"_blank\">{{data.link.long_url}}</a>\r\n<!--        <a mat-icon-button routerLink=\"/dashboard/links\" [queryParams]=\"{link_id: data.link.id}\" class=\"edit-btn\">-->\r\n<!--            <mat-icon svgIcon=\"edit\"></mat-icon>-->\r\n<!--        </a>-->\r\n        <copy-link-btn [model]=\"data.link\"></copy-link-btn>\r\n        <share-link-btns [colored]=\"true\" [link]=\"data.link\"></share-link-btns>\r\n    </header>\r\n\r\n    <click-charts [reports]=\"data.reports\" [link]=\"data.link\"></click-charts>\r\n</ng-container>\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BetweenInputComponent} from './between-input/between-input.component';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    declarations: [BetweenInputComponent],\n    imports: [\n        CommonModule,\n        TranslationsModule,\n        ReactiveFormsModule,\n    ],\n    exports: [BetweenInputComponent]\n})\nexport class BetweenDateInputModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SelectUserInputComponent} from './select-user-input/select-user-input.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\n\n@NgModule({\n    declarations: [SelectUserInputComponent],\n    imports: [\n        CommonModule,\n        MatButtonModule,\n        MatMenuModule,\n        TranslationsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        LoadingIndicatorModule,\n    ],\n    exports: [\n        SelectUserInputComponent\n    ],\n})\nexport class SelectUserInputModule {\n}\n","import { MatPaginatorIntl } from '@angular/material/paginator';\r\nimport {Translations} from '@common/core/translations/translations.service';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DataTableIntlService extends MatPaginatorIntl {\r\n    itemsPerPageLabel = this.i18n.t('Items per page');\r\n    nextPageLabel     = this.i18n.t('Next page');\r\n    previousPageLabel = this.i18n.t('Previous page');\r\n\r\n    constructor(protected i18n: Translations) {\r\n        super();\r\n    }\r\n\r\n    getRangeLabel = (page: number, pageSize: number, length: number) => {\r\n        const of = this.i18n.t('of');\r\n        if (length == 0 || pageSize == 0) { return `0 ${of} ${length}`; }\r\n\r\n        length = Math.max(length, 0);\r\n\r\n        const startIndex = page * pageSize;\r\n\r\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n        const endIndex = startIndex < length ?\r\n            Math.min(startIndex + pageSize, length) :\r\n            startIndex + pageSize;\r\n\r\n        return `${startIndex + 1} - ${endIndex} ${of} ${length}`;\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\r\nimport {AppDataTableInputsComponent} from './app-data-table-inputs/app-data-table-inputs.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppDataTableInputsComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatMenuModule,\r\n        TranslationsModule,\r\n        ReactiveFormsModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        LoadingIndicatorModule,\r\n    ],\r\n    exports: [\r\n        AppDataTableInputsComponent,\r\n    ]\r\n})\r\nexport class DataTableInputsModule {\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatPaginatorIntl, MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {DataTableComponent} from '@common/shared/data-table/data-table.component';\nimport {FilterPanelComponent} from './filter-panel/filter-panel.component';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {BetweenDateInputModule} from '@common/core/ui/between-date-input/between-date-input.module';\nimport {SelectUserInputModule} from '@common/core/ui/select-user-input/select-user-input.module';\nimport {DataTableIntlService} from '@common/shared/data-table/data-table-intl.service';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {DataTableInputsModule} from '../../../app/admin/data-table-inputs/data-table-inputs.module';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatIconModule} from '@angular/material/icon';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {NoResultsMessageModule} from '@common/core/ui/no-results-message/no-results-message.module';\n\n@NgModule({\n    declarations: [\n        DataTableComponent,\n        FilterPanelComponent,\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        SelectUserInputModule,\n        DataTableInputsModule,\n        TranslationsModule,\n        NoResultsMessageModule,\n\n        // material\n        MatCheckboxModule,\n        MatIconModule,\n        MatButtonModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatChipsModule,\n        BetweenDateInputModule,\n        MatProgressBarModule,\n        PortalModule,\n        DragDropModule,\n    ],\n    exports: [\n        DataTableComponent,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n    ],\n    providers: [\n        { provide: MatPaginatorIntl, useClass: DataTableIntlService}\n    ]\n})\nexport class DataTableModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ClickChartsComponent} from './click-charts.component';\nimport {ChartsModule} from '@common/shared/charts/charts.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\n\n\n@NgModule({\n    declarations: [\n        ClickChartsComponent,\n    ],\n    imports: [\n        CommonModule,\n        ChartsModule,\n        TranslationsModule,\n        ReactiveFormsModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatButtonToggleModule,\n    ],\n    exports: [\n        ClickChartsComponent,\n    ]\n})\nexport class ClickChartsModule {\n}\n","import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\n@Component({\r\n    selector: 'no-results-message',\r\n    templateUrl: './no-results-message.component.html',\r\n    styleUrls: ['./no-results-message.component.scss'],\r\n    host: {class: 'no-results-message'},\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NoResultsMessageComponent {\r\n    @Input() @HostBinding('class.horizontal') horizontal = false;\r\n    constructor(public settings: Settings) {}\r\n}\r\n","<div class=\"icon\">\r\n    <img [src]=\"settings.getAssetUrl('images/no-results.svg')\">\r\n</div>\r\n<div class=\"text\">\r\n    <div class=\"main\">\r\n        <ng-content select=\"[primary-text]\"></ng-content>\r\n    </div>\r\n    <div class=\"secondary\">\r\n        <ng-content select=\"[secondary-text]\"></ng-content>\r\n    </div>\r\n</div>","import { EventEmitter, isDevMode, Directive, Input, Output, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r87 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r87); const ctx_r86 = ɵngcc0.ɵɵnextContext(); return ctx_r86._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r87); const ctx_r88 = ɵngcc0.ɵɵnextContext(); return ctx_r88._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r85 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r85._getArrowViewState())(\"@arrowPosition\", ctx_r85._getArrowViewState())(\"@allowChildren\", ctx_r85._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r85._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r85._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r85._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a directive that holds sorting state consumed by `MatSortHeader`.\n * @record\n */\nfunction MatSortable() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    MatSortable.prototype.id;\n    /**\n     * Starting sort direction.\n     * @type {?}\n     */\n    MatSortable.prototype.start;\n    /**\n     * Whether to disable clearing the sorting state.\n     * @type {?}\n     */\n    MatSortable.prototype.disableClear;\n}\n/**\n * The current sort state.\n * @record\n */\nfunction Sort() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    Sort.prototype.active;\n    /**\n     * The sort direction.\n     * @type {?}\n     */\n    Sort.prototype.direction;\n}\n// Boilerplate for applying mixins to MatSort.\n/**\n * \\@docs-private\n */\nclass MatSortBase {\n}\n/** @type {?} */\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Collection of all registered sortables that this directive manages.\n         */\n        this.sortables = new Map();\n        /**\n         * Used to notify any child components listening to state changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /**\n         * Event emitted when the user changes either the active sort or sort direction.\n         */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * The sort direction of the currently active MatSortable.\n     * @return {?}\n     */\n    get direction() { return this._direction; }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    set direction(direction) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    register(sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        /** @type {?} */\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        /** @type {?} */\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        /** @type {?} */\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\nMatSort.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\nconst ɵMatSort_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disabled;\n    /**\n     * Collection of all registered sortables that this directive manages.\n     * @type {?}\n     */\n    MatSort.prototype.sortables;\n    /**\n     * Used to notify any child components listening to state changes.\n     * @type {?}\n     */\n    MatSort.prototype._stateChanges;\n    /**\n     * The id of the most recently sorted MatSortable.\n     * @type {?}\n     */\n    MatSort.prototype.active;\n    /**\n     * The direction to set when an MatSortable is initially sorted.\n     * May be overriden by the MatSortable's sort start.\n     * @type {?}\n     */\n    MatSort.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._disableClear;\n    /**\n     * Event emitted when the user changes either the active sort or sort direction.\n     * @type {?}\n     */\n    MatSort.prototype.sortChange;\n}\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    /** @type {?} */\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * \\@docs-private\n * @type {?}\n */\nconst matSortAnimations = {\n    /**\n     * Animation that moves the sort indicator.\n     */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the left pointer of the indicator based on the sorting direction.\n     */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the right pointer of the indicator based on the sorting direction.\n     */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that controls the arrow opacity.\n     */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /**\n     * Necessary trigger that calls animate on children animations.\n     */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         */\n        this.sortButtonLabel = (/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            return `Change sorting for ${id}`;\n        });\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\n/** @nocollapse */ MatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.changes;\n    /**\n     * ARIA label for the sorting button.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.sortButtonLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to the sort header.\n/**\n * \\@docs-private\n */\nclass MatSortHeaderBase {\n}\n/** @type {?} */\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * \\@docs-private\n * @record\n */\nfunction ArrowViewStateTransition() { }\nif (false) {\n    /** @type {?|undefined} */\n    ArrowViewStateTransition.prototype.fromState;\n    /** @type {?} */\n    ArrowViewStateTransition.prototype.toState;\n}\n/**\n * Column definition associated with a `MatSortHeader`.\n * @record\n */\nfunction MatSortHeaderColumnDef() { }\nif (false) {\n    /** @type {?} */\n    MatSortHeaderColumnDef.prototype.name;\n}\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    /**\n     * @param {?} _intl\n     * @param {?} changeDetectorRef\n     * @param {?} _sort\n     * @param {?} _columnDef\n     * @param {?=} _focusMonitor\n     * @param {?=} _elementRef\n     */\n    constructor(_intl, changeDetectorRef, _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The direction the arrow should be facing according to the current state.\n         */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /**\n         * Sets the position of the arrow that displays when sorted.\n         */\n        this.arrowPosition = 'after';\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        }));\n        if (_focusMonitor && _elementRef) {\n            // We use the focus monitor because we also want to style\n            // things differently based on the focus origin.\n            _focusMonitor.monitor(_elementRef, true)\n                .subscribe((/**\n             * @param {?} origin\n             * @return {?}\n             */\n            origin => this._setIndicatorHintVisible(!!origin)));\n        }\n    }\n    /**\n     * Overrides the disable clear value of the containing MatSort for this MatSortable.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // @breaking-change 10.0.0 Remove null check for _focusMonitor and _elementRef.\n        if (this._focusMonitor && this._elementRef) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     * @param {?} visible\n     * @return {?}\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     * @param {?} viewState\n     * @return {?}\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /**\n     * Triggers the sort on this sort header and removes the indicator hint.\n     * @return {?}\n     */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        /** @type {?} */\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /**\n     * Returns the animation state for the arrow direction (indicator and pointers).\n     * @return {?}\n     */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /**\n     * Returns the arrow position state (opacity, translation).\n     * @return {?}\n     */\n    _getArrowViewState() {\n        /** @type {?} */\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     * @return {?}\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     * @return {?}\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /**\n     * Whether the arrow inside the sort header should be rendered.\n     * @return {?}\n     */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 7, consts: [[1, \"mat-sort-header-container\"], [\"type\", \"button\", 1, \"mat-sort-header-button\", \"mat-focus-indicator\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx._isDisabled() || null)(\"aria-label\", ctx._intl.sortButtonLabel(ctx.id));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<div class=\\\"mat-sort-header-container\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\">\\n  <button class=\\\"mat-sort-header-button mat-focus-indicator\\\" type=\\\"button\\\"\\n          [attr.disabled]=\\\"_isDisabled() || null\\\"\\n          [attr.aria-label]=\\\"_intl.sortButtonLabel(id)\\\">\\n    <ng-content></ng-content>\\n  </button>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._rerenderSubscription;\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     * @type {?}\n     */\n    MatSortHeader.prototype._showIndicatorHint;\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     * @type {?}\n     */\n    MatSortHeader.prototype._viewState;\n    /**\n     * The direction the arrow should be facing according to the current state.\n     * @type {?}\n     */\n    MatSortHeader.prototype._arrowDirection;\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     * @type {?}\n     */\n    MatSortHeader.prototype._disableViewStateAnimation;\n    /**\n     * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n     * the column's name.\n     * @type {?}\n     */\n    MatSortHeader.prototype.id;\n    /**\n     * Sets the position of the arrow that displays when sorted.\n     * @type {?}\n     */\n    MatSortHeader.prototype.arrowPosition;\n    /**\n     * Overrides the sort start value of the containing MatSort for this MatSortable.\n     * @type {?}\n     */\n    MatSortHeader.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._disableClear;\n    /** @type {?} */\n    MatSortHeader.prototype._intl;\n    /** @type {?} */\n    MatSortHeader.prototype._sort;\n    /** @type {?} */\n    MatSortHeader.prototype._columnDef;\n    /**\n     * @deprecated _focusMonitor and _elementRef to become required parameters.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSortModule {\n}\nMatSortModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort,\n        MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort,\n        MatSortHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-direction.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ChartComponent} from '@common/shared/charts/chart/chart.component';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TranslationsModule,\n\n        // material\n        MatIconModule,\n    ],\n    declarations: [\n        ChartComponent\n    ],\n    exports: [\n        ChartComponent,\n    ]\n})\nexport class ChartsModule {\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { MatAutocomplete } from '@angular/material/autocomplete';\r\nimport { catchError, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'chip-input',\r\n    templateUrl: './chip-input.component.html',\r\n    styleUrls: ['./chip-input.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: ChipInputComponent,\r\n        multi: true,\r\n    }]\r\n})\r\nexport class ChipInputComponent implements ControlValueAccessor, OnInit {\r\n    @Input() placeholder: string;\r\n    @Input() type = 'text';\r\n    @Input() suggestFn: (query: string) => Observable<string[]>;\r\n    @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n    @ViewChild('inputEl', {static: true}) inputEl: HTMLInputElement;\r\n\r\n    public formControl = new FormControl();\r\n\r\n    public propagateChange: Function;\r\n    public items$ = new BehaviorSubject<string[]>([]);\r\n    public suggestedValues$ = new Subject<string[]>();\r\n\r\n    constructor(public el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        if (this.suggestFn) {\r\n            this.bindToSearchControl();\r\n        }\r\n    }\r\n\r\n    public remove(index: number) {\r\n        const items = [...this.items$.value];\r\n        items.splice(index, 1);\r\n        this.items$.next(items);\r\n        this.propagateChange(this.items$.value);\r\n    }\r\n\r\n    public addFromChipInput(value: string, propagate = true) {\r\n        if ( ! this.matAutocomplete.isOpen) {\r\n            this.add(value, propagate);\r\n        }\r\n    }\r\n\r\n    public addFromAutocomplete(value: string, propagate = true) {\r\n        this.add(value, propagate);\r\n    }\r\n\r\n    private add(value: string, propagate = true) {\r\n        value = value ? value.trim() : '';\r\n        const duplicate = this.items$.value.indexOf(value) > -1;\r\n        if (value && !duplicate) {\r\n            this.items$.next([...this.items$.value, value]);\r\n            if (propagate) {\r\n                this.propagateChange(this.items$.value);\r\n            }\r\n        }\r\n        if (this.inputEl) {\r\n            this.inputEl.value = '';\r\n        }\r\n        this.formControl.setValue(null);\r\n        this.suggestedValues$.next([]);\r\n    }\r\n\r\n    public writeValue(value: string[] = []) {\r\n        if (value && value.length) {\r\n            value.forEach(item => this.add(item, false));\r\n        } else if (this.items$.value.length) {\r\n            while (this.items$.value.length !== 0) {\r\n                this.remove(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    public registerOnChange(fn: Function) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    public registerOnTouched() {}\r\n\r\n    private bindToSearchControl() {\r\n        this.formControl.valueChanges.pipe(\r\n            debounceTime(150),\r\n            distinctUntilChanged(),\r\n            switchMap(query => query ? this.suggestFn(query) : of([])),\r\n            catchError(() => of([])),\r\n        ).subscribe(values => {\r\n            this.suggestedValues$.next(values);\r\n        });\r\n    }\r\n}\r\n","<mat-chip-list #chipList [selectable]=\"false\">\r\n    <mat-chip\r\n        *ngFor=\"let item of items$ | async; index as i\"\r\n        [selectable]=\"false\"\r\n        [removable]=\"true\"\r\n        (removed)=\"remove(i)\"\r\n    >\r\n        {{item}}\r\n        <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\r\n    </mat-chip>\r\n    <input [placeholder]=\"placeholder | trans\"\r\n           #inputEl\r\n           [type]=\"type\"\r\n           class=\"mat-chip-input mat-input-element\"\r\n           [matChipInputFor]=\"chipList\"\r\n           [matChipInputAddOnBlur]=\"true\"\r\n           [matAutocomplete]=\"auto\"\r\n           [matAutocompleteConnectedTo]=\"{elementRef: el}\"\r\n           [formControl]=\"formControl\"\r\n           (matChipInputTokenEnd)=\"addFromChipInput($event.value)\" />\r\n</mat-chip-list>\r\n<mat-autocomplete class=\"chip-input-autocomplete-panel\" #auto=\"matAutocomplete\" (optionSelected)=\"addFromAutocomplete($event.option.viewValue)\">\r\n    <mat-option *ngFor=\"let value of suggestedValues$ | async\" [value]=\"value\">{{value}}</mat-option>\r\n</mat-autocomplete>\r\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {GenericBackendResponse} from '@common/core/types/backend-response';\n\nexport interface LinkUsage {\n    links: {\n        used: number,\n        total: number | null,\n    };\n    clicks: {\n        used: number,\n        total: number | null,\n    };\n    link_overlays: {\n        used: number,\n        total: number | null,\n    };\n    custom_pages: {\n        used: number,\n        total: number | null,\n    };\n    custom_domains: {\n        used: number,\n        total: number | null,\n    };\n    link_groups: {\n        used: number,\n        total: number | null,\n    };\n    tracking_pixels: {\n        used: number,\n        total: number | null,\n    };\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LinkUsageService {\n    public usage$ = new BehaviorSubject<LinkUsage>(null);\n\n    constructor(private http: AppHttpClient) {}\n\n    public reload() {\n        this.http.get<GenericBackendResponse<{usage: LinkUsage}>>('link/usage').subscribe(response => {\n            this.usage$.next(response.usage);\n        });\n    }\n\n    public overClickQuota(): boolean {\n        if (!this.usage$.value || !this.usage$.value.clicks) {\n            return false;\n        }\n        return this.usage$.value.clicks.total <= this.usage$.value.clicks.used;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NoResultsMessageComponent} from '@common/core/ui/no-results-message/no-results-message.component';\n\n@NgModule({\n    declarations: [\n        NoResultsMessageComponent,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        NoResultsMessageComponent,\n    ]\n})\nexport class NoResultsMessageModule {\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SettingsResolve implements Resolve<{client: Object, server: Object}> {\r\n    constructor(private http: AppHttpClient, private router: Router) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Promise<{client: Object, server: Object}> {\r\n        return this.http.get('settings').toPromise().then(response => {\r\n            return response;\r\n        }, () => {\r\n            this.router.navigate(['/admin']);\r\n            return false;\r\n        }) as any;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {SettingsPayload} from '../../core/config/settings-payload';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SettingsState {\r\n    public initial: SettingsPayload = {server: {}, client: {}};\r\n    public server: {[key: string]: string|number} = {};\r\n    public client: {[key: string]: string|number} = {};\r\n\r\n    public getModified() {\r\n        return {\r\n            server: this.diffSettingObjects('server'),\r\n            client: this.diffSettingObjects('client'),\r\n        } as SettingsPayload;\r\n    }\r\n\r\n    private diffSettingObjects(name: string): Object {\r\n        const changed = {};\r\n\r\n        for (const key in this[name]) {\r\n            if (this[name][key] !== this.initial[name][key]) {\r\n                changed[key] = this[name][key];\r\n            }\r\n        }\r\n\r\n        return changed;\r\n    }\r\n\r\n    public setAll(settings: SettingsPayload) {\r\n        this.initial = settings;\r\n        this.client = {...settings.client};\r\n        this.server = {...settings.server};\r\n    }\r\n\r\n    public reset() {\r\n        this.server = {...this.initial.server};\r\n        this.client = {...this.initial.client};\r\n    }\r\n\r\n    public updateInitial(changedSettings: SettingsPayload) {\r\n        this.initial = {\r\n            client: {...this.initial.client, ...changedSettings.client},\r\n            server: {...this.initial.server, ...changedSettings.server},\r\n        };\r\n    }\r\n}\r\n","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _platform, _ngZone) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()',\n                    '(blur)': '_focusChanged(false)',\n                    '(focus)': '_focusChanged(true)',\n                    '(input)': '_onInput()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SpaceInputComponent } from './space-input.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {TranslationsModule} from '../../translations/translations.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        TranslationsModule,\r\n    ],\r\n    declarations: [\r\n        SpaceInputComponent\r\n    ],\r\n    exports: [\r\n        SpaceInputComponent,\r\n    ]\r\n})\r\nexport class SpaceInputModule {\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const RECAPTCHA_ACTIONS = new InjectionToken<any>('RECAPTCHA_ACTIONS');\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SettingsComponent} from './settings.component';\r\nimport {AuthenticationSettingsComponent} from './authentication/authentication-settings.component';\r\nimport {CacheSettingsComponent} from './cache/cache-settings.component';\r\nimport {AnalyticsSettingsComponent} from './analytics/analytics-settings.component';\r\nimport {LocalizationSettingsComponent} from './localization/localization-settings.component';\r\nimport {MailSettingsComponent} from './mail/mail-settings.component';\r\nimport {LoggingSettingsComponent} from './logging/logging-settings.component';\r\nimport {QueueSettingsComponent} from './queue/queue-settings.component';\r\nimport {SettingsResolve} from './settings-resolve.service';\r\nimport {SettingsState} from './settings-state.service';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {GeneralSettingsComponent} from './general/general-settings.component';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {BillingSettingsComponent} from './billing/billing-settings.component';\r\nimport {SpaceInputModule} from '../../core/ui/space-input/space-input.module';\r\nimport {UploadingSettingsComponent} from './uploading/uploading-settings.component';\r\nimport {ChipInputModule} from '../../core/ui/chip-input/chip-input.module';\r\nimport {FtpFormComponent} from './uploading/storage-forms/ftp-form/ftp-form.component';\r\nimport {DropboxFormComponent} from './uploading/storage-forms/dropbox-form/dropbox-form.component';\r\nimport {RackspaceFormComponent} from './uploading/storage-forms/rackspace-form/rackspace-form.component';\r\nimport {S3FormComponent} from './uploading/storage-forms/s3-form/s3-form.component';\r\nimport {DigitaloceanFormComponent} from './uploading/storage-forms/digitalocean-form/digitalocean-form.component';\r\nimport {RecaptchaSettingsComponent} from './recaptcha/recaptcha-settings.component';\r\nimport {BackblazeFormComponent} from './uploading/storage-forms/backblaze-form/backblaze-form.component';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\r\nimport { GdprSettingsComponent } from './gdpr-settings/gdpr-settings.component';\r\nimport {RECAPTCHA_ACTIONS} from '@common/admin/settings/recaptcha/recaptcha-actions.token';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        SpaceInputModule,\r\n        ChipInputModule,\r\n        TranslationsModule,\r\n        FormatPipesModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSnackBarModule,\r\n        MatTableModule,\r\n        MatCheckboxModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatMenuModule,\r\n        MatSlideToggleModule,\r\n        MatAutocompleteModule,\r\n        MatInputModule,\r\n        MatChipsModule,\r\n        MatProgressBarModule,\r\n        MatTabsModule,\r\n        MatRadioModule,\r\n    ],\r\n    declarations: [\r\n        SettingsComponent,\r\n        AuthenticationSettingsComponent,\r\n        CacheSettingsComponent,\r\n        AnalyticsSettingsComponent,\r\n        LocalizationSettingsComponent,\r\n        MailSettingsComponent,\r\n        LoggingSettingsComponent,\r\n        QueueSettingsComponent,\r\n        GeneralSettingsComponent,\r\n        BillingSettingsComponent,\r\n        RecaptchaSettingsComponent,\r\n\r\n        // uploading\r\n        UploadingSettingsComponent,\r\n        FtpFormComponent,\r\n        DropboxFormComponent,\r\n        RackspaceFormComponent,\r\n        S3FormComponent,\r\n        DigitaloceanFormComponent,\r\n        BackblazeFormComponent,\r\n        GdprSettingsComponent,\r\n    ],\r\n    providers: [\r\n        SettingsResolve,\r\n        SettingsState,\r\n        {provide: RECAPTCHA_ACTIONS, multi: true, useValue: [\r\n            {name: 'Registration Recaptcha', key: 'recaptcha.enable_for_registration', description: 'Enable recaptcha integration for registration page.'},\r\n            {name: 'Contact Recaptcha', key: 'recaptcha.enable_for_contact', description: 'Enable recaptcha integration for \"contact us\" page.'},\r\n        ]}\r\n    ],\r\n    exports: [\r\n        ChipInputModule,\r\n    ]\r\n})\r\nexport class SettingsModule {\r\n}\r\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, ChangeDetectorRef, Optional, Inject, ViewChild, forwardRef, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { MAT_DATE_FORMATS, DateAdapter, mixinColor } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r211 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r211._cellPadding)(\"padding-bottom\", ctx_r211._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r211.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r211.label, \" \");\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r215 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r215._cellPadding)(\"padding-bottom\", ctx_r215._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r215._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r215._firstRowOffset >= ctx_r215.labelMinRequiredCells ? ctx_r215.label : \"\", \" \");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r220 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r220); const item_r217 = ctx.$implicit; const ctx_r219 = ɵngcc0.ɵɵnextContext(2); return ctx_r219._cellClicked(item_r217); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r217 = ctx.$implicit;\n    const colIndex_r218 = ctx.index;\n    const rowIndex_r214 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r216 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r216._cellWidth)(\"padding-top\", ctx_r216._cellPadding)(\"padding-bottom\", ctx_r216._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r217.enabled)(\"mat-calendar-body-active\", ctx_r216._isActiveCell(rowIndex_r214, colIndex_r218));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r217.cssClasses)(\"tabindex\", ctx_r216._isActiveCell(rowIndex_r214, colIndex_r218) ? 0 : 0 - 1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r217.ariaLabel)(\"aria-disabled\", !item_r217.enabled || null)(\"aria-selected\", ctx_r216.selectedValue === item_r217.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r216.selectedValue === item_r217.value)(\"mat-calendar-body-today\", ctx_r216.todayValue === item_r217.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r217.displayValue, \" \");\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 20, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r213 = ctx.$implicit;\n    const rowIndex_r214 = ctx.index;\n    const ctx_r212 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r214 === 0 && ctx_r212._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r213);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r223 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r223.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r223.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r229 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r229); const ctx_r228 = ɵngcc0.ɵɵnextContext(); return ctx_r228.activeDate = $event; })(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r229); const ctx_r230 = ɵngcc0.ɵɵnextContext(); return ctx_r230._dateSelected($event); })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener() { ɵngcc0.ɵɵrestoreView(_r229); const ctx_r231 = ɵngcc0.ɵɵnextContext(); return ctx_r231._userSelected(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r225 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r225.activeDate)(\"selected\", ctx_r225.selected)(\"dateFilter\", ctx_r225.dateFilter)(\"maxDate\", ctx_r225.maxDate)(\"minDate\", ctx_r225.minDate)(\"dateClass\", ctx_r225.dateClass);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r233 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r233); const ctx_r232 = ɵngcc0.ɵɵnextContext(); return ctx_r232.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r233); const ctx_r234 = ɵngcc0.ɵɵnextContext(); return ctx_r234._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r233); const ctx_r235 = ɵngcc0.ɵɵnextContext(); return ctx_r235._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r226 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r226.activeDate)(\"selected\", ctx_r226.selected)(\"dateFilter\", ctx_r226.dateFilter)(\"maxDate\", ctx_r226.maxDate)(\"minDate\", ctx_r226.minDate);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r237 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r237); const ctx_r236 = ɵngcc0.ɵɵnextContext(); return ctx_r236.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r237); const ctx_r238 = ɵngcc0.ɵɵnextContext(); return ctx_r238._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r237); const ctx_r239 = ɵngcc0.ɵɵnextContext(); return ctx_r239._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r227 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r227.activeDate)(\"selected\", ctx_r227.selected)(\"dateFilter\", ctx_r227.dateFilter)(\"maxDate\", ctx_r227.maxDate)(\"minDate\", ctx_r227.minDate);\n} }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /**\n     * Formats a range of years.\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\n/** @nocollapse */ MatDatepickerIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.changes;\n    /**\n     * A label for the calendar popup (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.calendarLabel;\n    /**\n     * A label for the button used to open the calendar popup (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.openCalendarLabel;\n    /**\n     * A label for the previous month button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevMonthLabel;\n    /**\n     * A label for the next month button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextMonthLabel;\n    /**\n     * A label for the previous year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevYearLabel;\n    /**\n     * A label for the next year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextYearLabel;\n    /**\n     * A label for the previous multi-year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevMultiYearLabel;\n    /**\n     * A label for the next multi-year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextMultiYearLabel;\n    /**\n     * A label for the 'switch to month view' button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.switchToMonthViewLabel;\n    /**\n     * A label for the 'switch to year view' button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.switchToMultiYearViewLabel;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/calendar-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?} ariaLabel\n     * @param {?} enabled\n     * @param {?=} cssClasses\n     */\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCalendarCell.prototype.value;\n    /** @type {?} */\n    MatCalendarCell.prototype.displayValue;\n    /** @type {?} */\n    MatCalendarCell.prototype.ariaLabel;\n    /** @type {?} */\n    MatCalendarCell.prototype.enabled;\n    /** @type {?} */\n    MatCalendarCell.prototype.cssClasses;\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        /** @type {?} */\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            }));\n        }));\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", cellAspectRatio: \"cellAspectRatio\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", selectedValue: \"selectedValue\", labelMinRequiredCells: \"labelMinRequiredCells\" }, outputs: { selectedValueChange: \"selectedValueChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell mat-focus-indicator\", \"role\", \"button\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", \"role\", \"button\", 1, \"mat-calendar-body-cell\", \"mat-focus-indicator\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    selectedValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    selectedValueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{\n                selector: '[mat-calendar-body]',\n                template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell mat-focus-indicator\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"selectedValue === item.value\\\"\\n      (click)=\\\"_cellClicked(item)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      role=\\\"button\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content\\\"\\n        [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">\\n        {{item.displayValue}}\\n      </div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], selectedValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * The label for the table. (e.g. \"Jan 2017\").\n     * @type {?}\n     */\n    MatCalendarBody.prototype.label;\n    /**\n     * The cells to display in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.rows;\n    /**\n     * The value in the table that corresponds to today.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.todayValue;\n    /**\n     * The value in the table that is currently selected.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.selectedValue;\n    /**\n     * The minimum number of free cells needed to fit the label in the first row.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.labelMinRequiredCells;\n    /**\n     * The number of columns in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.numCols;\n    /**\n     * The cell number of the active cell in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.activeCell;\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.cellAspectRatio;\n    /**\n     * Emits when a new value is selected.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.selectedValueChange;\n    /**\n     * The number of blank cells to put at the beginning for the first row.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._firstRowOffset;\n    /**\n     * Padding for the individual date cells.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._cellPadding;\n    /**\n     * Width of an individual cell.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._cellWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarBody.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarBody.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/month-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate != date) {\n            /** @type {?} */\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Initializes the weekdays.\n     * @private\n     * @return {?}\n     */\n    _initWeekdays() {\n        /** @type {?} */\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        let weekdays = longWeekdays.map((/**\n         * @param {?} long\n         * @param {?} i\n         * @return {?}\n         */\n        (long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        }));\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    _createWeekCells() {\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            const enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            /** @type {?} */\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMonthView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], decls: 7, vars: 7, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"], [\"scope\", \"col\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\n    </tr>\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [selectedValue]=\\\"_selectedDate!\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._maxDate;\n    /**\n     * Function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatMonthView.prototype.dateFilter;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatMonthView.prototype.dateClass;\n    /**\n     * Emits when a new date is selected.\n     * @type {?}\n     */\n    MatMonthView.prototype.selectedChange;\n    /**\n     * Emits when any date is selected.\n     * @type {?}\n     */\n    MatMonthView.prototype._userSelection;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatMonthView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatMonthView.prototype._matCalendarBody;\n    /**\n     * The label for this month (e.g. \"January 2017\").\n     * @type {?}\n     */\n    MatMonthView.prototype._monthLabel;\n    /**\n     * Grid of calendar cells representing the dates of the month.\n     * @type {?}\n     */\n    MatMonthView.prototype._weeks;\n    /**\n     * The number of blank cells in the first row before the 1st of the month.\n     * @type {?}\n     */\n    MatMonthView.prototype._firstWeekOffset;\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     * @type {?}\n     */\n    MatMonthView.prototype._selectedDate;\n    /**\n     * The date of the month that today falls on. Null if today is in another month.\n     * @type {?}\n     */\n    MatMonthView.prototype._todayDate;\n    /**\n     * The names of the weekdays.\n     * @type {?}\n     */\n    MatMonthView.prototype._weekdays;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._dateFormats;\n    /** @type {?} */\n    MatMonthView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/multi-year-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst yearsPerPage = 24;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map((/**\n                 * @param {?} year\n                 * @return {?}\n                 */\n                year => this._createCellForYear(year))));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        /** @type {?} */\n        let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 6, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [selectedValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._maxDate;\n    /**\n     * A function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.dateFilter;\n    /**\n     * Emits when a new year is selected.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.selectedChange;\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     * @type {?}\n     */\n    MatMultiYearView.prototype.yearSelected;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatMultiYearView.prototype._matCalendarBody;\n    /**\n     * Grid of calendar cells representing the currently displayed years.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._years;\n    /**\n     * The year that today falls on.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._todayYear;\n    /**\n     * The year of the selected date. Null if the selected date is null.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._selectedYear;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatMultiYearView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._dir;\n}\n/**\n * @template D\n * @param {?} dateAdapter\n * @param {?} date1\n * @param {?} date2\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    /** @type {?} */\n    const year1 = dateAdapter.getYear(date1);\n    /** @type {?} */\n    const year2 = dateAdapter.getYear(date2);\n    /** @type {?} */\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n * @template D\n * @param {?} dateAdapter\n * @param {?} activeDate\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    /** @type {?} */\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n * @template D\n * @param {?} dateAdapter\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    /** @type {?} */\n    let startingYear = 0;\n    if (maxDate) {\n        /** @type {?} */\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/**\n * Gets remainder that is non-negative, even if first number is negative\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/year-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        /** @type {?} */\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((/**\n         * @param {?} row\n         * @return {?}\n         */\n        row => row.map((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => this._createCellForMonth(month, monthNames[month])))));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        /** @type {?} */\n        let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 8, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [selectedValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._maxDate;\n    /**\n     * A function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatYearView.prototype.dateFilter;\n    /**\n     * Emits when a new month is selected.\n     * @type {?}\n     */\n    MatYearView.prototype.selectedChange;\n    /**\n     * Emits the selected month. This doesn't imply a change on the selected date\n     * @type {?}\n     */\n    MatYearView.prototype.monthSelected;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatYearView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatYearView.prototype._matCalendarBody;\n    /**\n     * Grid of calendar cells representing the months of the year.\n     * @type {?}\n     */\n    MatYearView.prototype._months;\n    /**\n     * The label for this year (e.g. \"2017\").\n     * @type {?}\n     */\n    MatYearView.prototype._yearLabel;\n    /**\n     * The month in this year that today falls on. Null if today is in a different year.\n     * @type {?}\n     */\n    MatYearView.prototype._todayMonth;\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     * @type {?}\n     */\n    MatYearView.prototype._selectedMonth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._dateFormats;\n    /** @type {?} */\n    MatYearView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/calendar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} calendar\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        /** @type {?} */\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        /** @type {?} */\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        /** @type {?} */\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    /**\n     * @return {?}\n     */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the previous button.\n     * @return {?}\n     */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * The label for the next button.\n     * @return {?}\n     */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatCalendar))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 9, vars: 8, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.periodButtonText, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatCalendar)),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      {{periodButtonText}}\\n      <div class=\\\"mat-calendar-arrow\\\"\\n           [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatCalendar))]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._intl;\n    /** @type {?} */\n    MatCalendarHeader.prototype.calendar;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._dateFormats;\n}\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n    get currentView() { return this._currentView; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    updateTodaysDate() {\n        /** @type {?} */\n        const currentView = this.currentView;\n        /** @type {?} */\n        let view;\n        if (currentView === 'month') {\n            view = this.monthView;\n        }\n        else if (currentView === 'year') {\n            view = this.yearView;\n        }\n        else {\n            view = this.multiYearView;\n        }\n        view.ngAfterContentInit();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (date && !this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, true);\n        ɵngcc0.ɵɵviewQuery(MatYearView, true);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 6, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView,\n        MatYearView,\n        MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar',\n                template: \"\\n<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (selectedChange)=\\\"_dateSelected($event)\\\"\\n      (_userSelection)=\\\"_userSelected()\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\nif (false) {\n    /**\n     * An input indicating the type of the header component, if set.\n     * @type {?}\n     */\n    MatCalendar.prototype.headerComponent;\n    /**\n     * A portal containing the header component type for this calendar.\n     * @type {?}\n     */\n    MatCalendar.prototype._calendarHeaderPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._intlChanges;\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._moveFocusOnNextTick;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._startAt;\n    /**\n     * Whether the calendar should be started in month or year view.\n     * @type {?}\n     */\n    MatCalendar.prototype.startView;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._maxDate;\n    /**\n     * Function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatCalendar.prototype.dateFilter;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatCalendar.prototype.dateClass;\n    /**\n     * Emits when the currently selected date changes.\n     * @type {?}\n     */\n    MatCalendar.prototype.selectedChange;\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatCalendar.prototype.yearSelected;\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatCalendar.prototype.monthSelected;\n    /**\n     * Emits when any date is selected.\n     * @type {?}\n     */\n    MatCalendar.prototype._userSelection;\n    /**\n     * Reference to the current month view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.monthView;\n    /**\n     * Reference to the current year view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.yearView;\n    /**\n     * Reference to the current multi-year view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.multiYearView;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._clampedActiveDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._currentView;\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     * @type {?}\n     */\n    MatCalendar.prototype.stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._dateFormats;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nconst matDatepickerAnimations = {\n    /**\n     * Transforms the height of the datepicker's calendar.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * Fades in the content of the calendar.\n     */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatDatepickerContentBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(elementRef, _changeDetectorRef) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Current state of the animation.\n         */\n        this._animationState = 'enter';\n        /**\n         * Emits when an animation has finished.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationDone.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._animationState = 'void';\n        // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef`.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatDatepickerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() { return ctx._animationDone.next(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transformPanel\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 11, consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n        ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) { return ctx.datepicker.select($event); })(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) { return ctx.datepicker._selectMonth($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"dateClass\", ctx.datepicker.dateClass)(\"@fadeInCalendar\", \"enter\");\n    } }, directives: [MatCalendar, ɵngcc5.CdkTrapFocus, ɵngcc1.NgClass], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-content',\n                template: \"<mat-calendar cdkTrapFocus\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._minDate\\\"\\n    [maxDate]=\\\"datepicker._maxDate\\\"\\n    [dateFilter]=\\\"datepicker._dateFilter\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"datepicker._selected\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (selectedChange)=\\\"datepicker.select($event)\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (_userSelection)=\\\"datepicker.close()\\\">\\n</mat-calendar>\\n\",\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '_animationState',\n                    '(@transformPanel.done)': '_animationDone.next()',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\nif (false) {\n    /**\n     * Reference to the internal calendar component.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._calendar;\n    /**\n     * Reference to the datepicker that created the overlay.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype.datepicker;\n    /**\n     * Whether the datepicker is above or below the input.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._isAbove;\n    /**\n     * Current state of the animation.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._animationState;\n    /**\n     * Emits when an animation has finished.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._animationDone;\n    /**\n     * @deprecated `_changeDetectorRef` parameter to become required.\n     * \\@breaking-change 11.0.0\n     * @type {?}\n     * @private\n     */\n    MatDatepickerContent.prototype._changeDetectorRef;\n}\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n    /**\n     * @param {?} _dialog\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * The date to open the calendar to initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n    get touchUi() { return this._touchUi; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get _selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _selected(value) { this._validSelected = value; }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get _minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get _maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n    get _dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyPopup();\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    select(date) {\n        /** @type {?} */\n        let oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    _registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => this._selected = value));\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupComponentRef && this._popupRef) {\n            /** @type {?} */\n            const instance = this._popupComponentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => this._destroyPopup()));\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        /** @type {?} */\n        const completeClose = (/**\n         * @return {?}\n         */\n        () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        });\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n            // These values are all the same as the defaults, but we set them explicitly so that the\n            // datepicker dialog behaves consistently even if the user changed the defaults.\n            hasBackdrop: true,\n            disableClose: false,\n            width: '',\n            height: '',\n            minWidth: '',\n            minHeight: '',\n            maxWidth: '80vw',\n            maxHeight: '',\n            position: {},\n            autoFocus: true,\n            restoreFocus: true\n        });\n        this._dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this.close()));\n        this._dialogRef.componentInstance.datepicker = this;\n        this._dialogRef.componentInstance.color = this.color;\n    }\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    _openAsPopup() {\n        /** @type {?} */\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        this._destroyPopup();\n        this._createPopup();\n        /** @type {?} */\n        const ref = this._popupComponentRef = (/** @type {?} */ (this._popupRef)).attach(portal);\n        ref.instance.datepicker = this;\n        ref.instance.color = this.color;\n        // Update the position once the calendar has rendered.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (this._popupRef)).updatePosition();\n        }));\n    }\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    _createPopup() {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        })))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        }));\n    }\n    /**\n     * Destroys the current popup overlay.\n     * @private\n     * @return {?}\n     */\n    _destroyPopup() {\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupRef = this._popupComponentRef = null;\n        }\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) { return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], inputs: { startView: \"startView\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", panelClass: \"panelClass\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, exportAs: [\"matDatepicker\"], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDatepicker.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc7.MatDialog }, { type: ɵngcc8.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { startView: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepicker.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatDatepicker.ngAcceptInputType_touchUi;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._scrollStrategy;\n    /**\n     * An input indicating the type of the custom header component for the calendar, if set.\n     * @type {?}\n     */\n    MatDatepicker.prototype.calendarHeaderComponent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._startAt;\n    /**\n     * The view that the calendar should start in.\n     * @type {?}\n     */\n    MatDatepicker.prototype.startView;\n    /** @type {?} */\n    MatDatepicker.prototype._color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._touchUi;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._disabled;\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatDatepicker.prototype.yearSelected;\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatDatepicker.prototype.monthSelected;\n    /**\n     * Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatDatepicker.prototype.panelClass;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatDatepicker.prototype.dateClass;\n    /**\n     * Emits when the datepicker has been opened.\n     * @type {?}\n     */\n    MatDatepicker.prototype.openedStream;\n    /**\n     * Emits when the datepicker has been closed.\n     * @type {?}\n     */\n    MatDatepicker.prototype.closedStream;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._opened;\n    /**\n     * The id for the datepicker calendar.\n     * @type {?}\n     */\n    MatDatepicker.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._validSelected;\n    /**\n     * A reference to the overlay when the calendar is opened as a popup.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._popupRef;\n    /**\n     * A reference to the dialog when the calendar is opened as a dialog.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dialogRef;\n    /**\n     * Reference to the component instantiated in popup mode.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._popupComponentRef;\n    /**\n     * The element that was focused before the datepicker was opened.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._focusedElementBeforeOpen;\n    /**\n     * Subscription to value changes in the associated input element.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._inputSubscription;\n    /**\n     * The input element this datepicker is associated with.\n     * @type {?}\n     */\n    MatDatepicker.prototype._datepickerInput;\n    /**\n     * Emits when the datepicker is disabled.\n     * @type {?}\n     */\n    MatDatepicker.prototype._disabledChange;\n    /**\n     * Emits new selected date when selected date changes.\n     * @type {?}\n     */\n    MatDatepicker.prototype._selectedChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\nif (false) {\n    /**\n     * The new value for the target datepicker input.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.value;\n    /**\n     * Reference to the datepicker input component that emitted the event.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.target;\n    /**\n     * Reference to the native input element associated with the datepicker input.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.targetElement;\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._cvaOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._validatorOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = (/**\n         * @return {?}\n         */\n        () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        });\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': this.min, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': this.max, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        });\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.value = this.value;\n        }));\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepicker(value) {\n        if (!value) {\n            return;\n        }\n        this._datepicker = value;\n        this._datepicker._registerInput(this);\n        this._datepickerSubscription.unsubscribe();\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((/**\n         * @param {?} selected\n         * @return {?}\n         */\n        (selected) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }));\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepickerFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        /** @type {?} */\n        const oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        /** @type {?} */\n        const lastValueWasValid = this._lastValueValid;\n        /** @type {?} */\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else if (lastValueWasValid !== this._lastValueValid) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    _getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.MatFormField, 8)); };\nMatDatepickerInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostVars: 5, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    } }, inputs: { value: \"value\", matDatepicker: \"matDatepicker\", matDatepickerFilter: \"matDatepickerFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ])] });\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    matDatepickerFilter: [{ type: Input }],\n    value: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], matDatepicker: [{\n            type: Input\n        }], matDatepickerFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepickerInput.ngAcceptInputType_value;\n    /** @type {?} */\n    MatDatepickerInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatDatepickerInput.prototype._datepicker;\n    /** @type {?} */\n    MatDatepickerInput.prototype._dateFilter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._min;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._max;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._disabled;\n    /**\n     * Emits when a `change` event is fired on this `<input>`.\n     * @type {?}\n     */\n    MatDatepickerInput.prototype.dateChange;\n    /**\n     * Emits when an `input` event is fired on this `<input>`.\n     * @type {?}\n     */\n    MatDatepickerInput.prototype.dateInput;\n    /**\n     * Emits when the value changes (either due to user input or programmatic change).\n     * @type {?}\n     */\n    MatDatepickerInput.prototype._valueChange;\n    /**\n     * Emits when the disabled state has changed\n     * @type {?}\n     */\n    MatDatepickerInput.prototype._disabledChange;\n    /** @type {?} */\n    MatDatepickerInput.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._cvaOnChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._validatorOnChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._datepickerSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._localeSubscription;\n    /**\n     * The form control validator for whether the input parses.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._parseValidator;\n    /**\n     * The form control validator for the min date.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._minValidator;\n    /**\n     * The form control validator for the max date.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._maxValidator;\n    /**\n     * The form control validator for the date filter.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._filterValidator;\n    /**\n     * The combined form control validator for this input.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._validator;\n    /**\n     * Whether the last value set on the input was valid.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._lastValueValid;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._elementRef;\n    /** @type {?} */\n    MatDatepickerInput.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._dateFormats;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._formField;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?} defaultTabIndex\n     */\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _watchStateChanges() {\n        /** @type {?} */\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 7, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler() { return ctx._button.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\", \"click\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-toggle',\n                template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"_intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\"\\n  (click)=\\\"_open($event)\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    '(focus)': '_button.focus()'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepickerToggle.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._stateChanges;\n    /**\n     * Datepicker instance that the button will toggle.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.datepicker;\n    /**\n     * Tabindex for the toggle.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.tabIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._disabled;\n    /**\n     * Whether ripples on the toggle should be disabled.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.disableRipple;\n    /**\n     * Custom icon set by the consumer.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype._customIcon;\n    /**\n     * Underlying button element.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype._button;\n    /** @type {?} */\n    MatDatepickerToggle.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); }, providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatDialogModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule]; }, exports: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatMultiYearView, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n\n//# sourceMappingURL=datepicker.js.map","import {AppConfig} from '@common/core/config/app-config';\r\n\r\nexport const COMMON_ADMIN_CONFIG: AppConfig = {\r\n    admin: {\r\n        pages: [],\r\n        appearance: {\r\n            navigationRoutes: [],\r\n            menus: {\r\n                availableRoutes: [\r\n                    'login',\r\n                    'register',\r\n                    'contact',\r\n                    'billing/pricing',\r\n                    'account-settings',\r\n                    'admin/appearance',\r\n                    'admin/users',\r\n                    'admin/settings/authentication',\r\n                    'admin/settings/branding',\r\n                    'admin/settings/cache',\r\n                    'admin/settings/providers',\r\n                    'admin/roles',\r\n                ],\r\n            },\r\n            sections: [\r\n                {name: 'general', position: 1},\r\n                {name: 'themes', position: 2},\r\n                {name: 'menus', position: 3},\r\n                {name: 'custom-code', position: 4},\r\n                {name: 'seo-settings', position: 5}\r\n            ]\r\n        }\r\n    }\r\n};\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ImageZoomComponent} from './image-zoom.component';\nimport { ImageZoomOverlayComponent } from './image-zoom-overlay/image-zoom-overlay.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    declarations: [ImageZoomComponent, ImageZoomOverlayComponent],\n    imports: [\n        CommonModule,\n        MatButtonModule,\n        MatIconModule,\n    ],\n    entryComponents: [\n        ImageZoomOverlayComponent,\n    ],\n    exports: [\n        ImageZoomComponent,\n    ]\n})\nexport class ImageZoomModule {\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {Settings} from '../core/config/settings.service';\r\nimport {CurrentUser} from '../auth/current-user';\r\nimport {BreakpointsService} from '../core/ui/breakpoints.service';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {filter} from 'rxjs/operators';\r\nimport {MenuItem} from '@common/core/ui/custom-menu/menu-item';\r\n\r\n@Component({\r\n    selector: 'admin',\r\n    templateUrl: './admin.component.html',\r\n    styleUrls: ['./admin.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AdminComponent implements OnInit {\r\n    public leftColumnIsHidden = false;\r\n    public menu = this.generateMenu();\r\n\r\n    constructor(\r\n        public settings: Settings,\r\n        public currentUser: CurrentUser,\r\n        public breakpoints: BreakpointsService,\r\n        private router: Router,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.leftColumnIsHidden = this.breakpoints.isMobile$.value;\r\n        this.menu = this.generateMenu();\r\n\r\n        // close left column when navigating between admin pages on mobile\r\n        this.router.events\r\n            .pipe(filter(e => e instanceof NavigationEnd))\r\n            .subscribe(() => {\r\n                this.leftColumnIsHidden = this.breakpoints.isMobile$.value;\r\n            });\r\n    }\r\n\r\n    public toggleLeftSidebar() {\r\n        this.leftColumnIsHidden = !this.leftColumnIsHidden;\r\n    }\r\n\r\n    public getCustomSidebarItems() {\r\n        return this.settings.get('vebto.admin.pages');\r\n    }\r\n\r\n    // TODO: refactor this later, so can be changed from menu manager\r\n    private generateMenu() {\r\n        const items = [\r\n            {name: 'analytics', icon: 'pie-chart', permission: 'reports.view', route: 'analytics'},\r\n            {name: 'appearance', icon: 'style', permission: 'resources.defaults.permissions.update', route: 'appearance'},\r\n            {name: 'settings', icon: 'settings', permission: 'settings.view', route: 'settings'},\r\n\r\n            {name: 'plans', icon: 'assignment', permission: 'plans.view', route: 'plans'},\r\n            {name: 'subscriptions', icon: 'subscriptions', permission: 'subscriptions.view', route: 'subscriptions'},\r\n\r\n            ...this.getCustomSidebarItems(),\r\n\r\n            {name: 'users', icon: 'person', permission: 'users.view', route: 'users'},\r\n            {name: 'roles', icon: 'people', permission: 'roles.view', route: 'roles'},\r\n            {name: 'pages', icon: 'page', permission: 'pages.view', route: 'custom-pages'},\r\n            {name: 'files', icon: 'file', permission: 'files.view', route: 'files'},\r\n            {name: 'translations', icon: 'translate', permission: 'localizations.view', route: 'translations'},\r\n            {name: 'mail templates', icon: 'mail', permission: 'localizations.view', route: 'mail-templates'},\r\n        ];\r\n\r\n        if (this.settings.get('vebto.admin.ads')) {\r\n            items.push({name: 'ads', icon: 'ads', permission: 'settings.view', route: 'ads'});\r\n        }\r\n        \r\n        return items.map(item => {\r\n            item.type = 'route';\r\n            item.label = item.name;\r\n            item.action = 'admin/' + item.route;\r\n            item.activeExact = false;\r\n            item.condition = function(user: CurrentUser, settings: Settings) {\r\n                let condition = true;\r\n                if (item.name === 'plans' || item.name === 'subscriptions') {\r\n                    condition = settings.get('billing.enable');\r\n                }\r\n                return condition && user.hasPermission(item.permission);\r\n            };\r\n            return item;\r\n        }) as MenuItem[];\r\n    }\r\n}\r\n","<material-navbar menuPosition=\"admin-navbar\" color=\"primary\" [showToggleButton]=\"true\" (toggleButtonClick)=\"toggleLeftSidebar()\"></material-navbar>\r\n\r\n<mat-sidenav-container class=\"admin-page-content\">\r\n    <mat-sidenav [opened]=\"!leftColumnIsHidden\" [mode]=\"(breakpoints.isMobile$ | async) ? 'over' : 'side'\" [fixedInViewport]=\"true\" [fixedTopGap]=\"70\" class=\"left-column\">\r\n        <div class=\"left-column-inner\">\r\n            <custom-menu [position]=\"menu\" [vertical]=\"true\"></custom-menu>\r\n            <div class=\"version\">\r\n                {{'Version:' | trans}} {{settings.get('version')}}\r\n            </div>\r\n        </div>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content class=\"content-inner\">\r\n        <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '../core/http/app-http-client.service';\nimport {BackendResponse} from '../core/types/backend-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ArtisanService {\n    constructor(private http: AppHttpClient) {}\n\n    public call(payload: {command: string, params?: {[key: string]: string|number}}): BackendResponse<void> {\n        return this.http.post('artisan/call', payload);\n    }\n}\n","import { ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport {SettingsState} from './settings-state.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {Toast} from '../../core/ui/toast.service';\r\nimport {Modal} from '../../core/ui/dialogs/modal.service';\r\nimport {CustomHomepage} from '../../core/pages/shared/custom-homepage.service';\r\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\r\nimport {ArtisanService} from '../artisan.service';\r\nimport {SettingsPayload} from '../../core/config/settings-payload';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {ValueLists} from '@common/core/services/value-lists.service';\r\n\r\nexport abstract class SettingsPanelComponent implements OnDestroy {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public errors$ = new BehaviorSubject<{[key: string]: string}>({});\r\n\r\n    constructor(\r\n        public settings: Settings,\r\n        protected toast: Toast,\r\n        protected http: AppHttpClient,\r\n        protected modal: Modal,\r\n        protected route: ActivatedRoute,\r\n        protected artisan: ArtisanService,\r\n        protected customHomepage: CustomHomepage,\r\n        protected valueLists: ValueLists,\r\n        protected cd: ChangeDetectorRef,\r\n        public state: SettingsState,\r\n    ) {}\r\n\r\n    ngOnDestroy() {\r\n        this.state.reset();\r\n    }\r\n\r\n    public setJson(name: string, value: string[]|number[]) {\r\n        this.state.client[name] = JSON.stringify(value);\r\n    }\r\n\r\n    public getJson(name: string): any[] {\r\n        const value = this.state.client[name];\r\n        if ( ! value) return [];\r\n        return JSON.parse(value as string);\r\n    }\r\n\r\n    public saveSettings(settings?: SettingsPayload) {\r\n        this.loading$.next(true);\r\n        const changedSettings = settings || this.state.getModified();\r\n        this.settings.save(changedSettings)\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(() => {\r\n                this.toast.open('Settings saved.');\r\n                this.clearErrors();\r\n                // update initial settings after saving, so\r\n                // so new setting state is not lost when\r\n                // navigating between setting panels\r\n                this.state.updateInitial(changedSettings);\r\n            }, errResponse => {\r\n                this.errors$.next(errResponse.messages);\r\n                this.scrollInvalidInputIntoView();\r\n            });\r\n    }\r\n\r\n    public clearErrors() {\r\n        this.errors$.next({});\r\n    }\r\n\r\n    private scrollInvalidInputIntoView() {\r\n        const firstKey = Object.keys(this.errors$.value)[0];\r\n        if (firstKey) {\r\n            const node = document.getElementById(firstKey);\r\n            if (node) {\r\n                node.scrollIntoView({behavior: 'smooth', block: 'center', inline: 'center'});\r\n            }\r\n        }\r\n    }\r\n}\r\n","<div class=\"header\">\n    <div class=\"title\" trans>Links</div>\n    <div class=\"subtitle\" trans>Configure various link behaviour across the site.</div>\n</div>\n\n<form class=\"body\" (ngSubmit)=\"saveSettings()\" ngNativeValidate>\n    <mat-tab-group color=\"accent\" animationDuration=\"0\">\n        <mat-tab [label]=\"'Behaviour' | trans\">\n            <div class=\"many-inputs\">\n                <div class=\"error-group\">\n                    <div class=\"setting-toggle-container\">\n                        <mat-slide-toggle name=\"links.enable_type\" id=\"links.enable_type\" [(ngModel)]=\"state.client['links.enable_type']\" trans>Type Selection</mat-slide-toggle>\n                        <p trans>Whether user should be able to change type when creating or updating links.</p>\n                    </div>\n\n                    <div class=\"input-container\">\n                        <label for=\"links.default_type\" trans>Default Link Type</label>\n                        <select name=\"links.default_type\" id=\"links.default_type\" [(ngModel)]=\"state.client['links.default_type']\">\n                            <option value=\"direct\" trans>Direct</option>\n                            <option value=\"frame\" trans>Frame</option>\n                            <option value=\"splash\" trans>Splash</option>\n                        </select>\n                        <p trans>What type should newly created types have by default (If user did not manually select type).</p>\n                    </div>\n\n                    <div class=\"inline-inputs-container\">\n                        <div class=\"input-container\">\n                            <label for=\"links.alias_min\" trans>Alias Min Length</label>\n                            <input type=\"number\" id=\"links.alias_min\" name=\"links.alias_min\" [(ngModel)]=\"state.client['links.alias_min']\" required>\n                        </div>\n\n                        <div class=\"input-container\">\n                            <label for=\"links.alias_max\" trans>Alias Max Length</label>\n                            <input type=\"number\" id=\"links.alias_max\" name=\"links.alias_max\" [(ngModel)]=\"state.client['links.alias_max']\" required>\n                        </div>\n                    </div>\n                    <p class=\"inline-inputs-description\" trans>Specify minimum and maximum length for custom link alias.</p>\n                </div>\n\n                <div class=\"input-container\">\n                    <label for=\"links.redirect_time\" trans>Splash Page Redirect Time</label>\n                    <input type=\"number\" name=\"links.redirect_time\" id=\"links.redirect_time\" [(ngModel)]=\"state.client['links.redirect_time']\" min=\"0\" max=\"60\">\n                    <p trans>After how many seconds should user be redirect to their destination on splash page. In Seconds. 0 will disable automatic redirection.</p>\n                </div>\n\n                <div class=\"error-group\">\n                    <div class=\"setting-toggle-container\">\n                        <mat-slide-toggle name=\"links.geo_targeting\" id=\"links.geo_targeting\" [(ngModel)]=\"state.client['links.geo_targeting']\" trans>Enable Geotargeting</mat-slide-toggle>\n                        <p trans>Whether redirection based on country functionality is enabled.</p>\n                    </div>\n\n                    <div class=\"setting-toggle-container\">\n                        <mat-slide-toggle name=\"links.device_targeting\" id=\"links.device_targeting\" [(ngModel)]=\"state.client['links.device_targeting']\" trans>Enable Device Targeting</mat-slide-toggle>\n                        <p trans>Whether redirection based on device functionality is enabled.</p>\n                    </div>\n\n                    <div class=\"setting-toggle-container\">\n                        <mat-slide-toggle name=\"links.pixels\" id=\"links.pixels\" [(ngModel)]=\"state.client['links.pixels']\" trans>Enable Tracking Pixels</mat-slide-toggle>\n                        <p trans>Whether user should be able to apply tracking pixels to links.</p>\n                    </div>\n                </div>\n\n                <div class=\"setting-toggle-container\">\n                    <mat-slide-toggle name=\"links.homepage_creation\" id=\"links.homepage_creation\" [(ngModel)]=\"state.client['links.homepage_creation']\" trans>Homepage Link Creation</mat-slide-toggle>\n                    <p trans>Whether non-logged in users can shorten links on homepage.</p>\n                </div>\n\n                <div class=\"setting-toggle-container\">\n                    <mat-slide-toggle name=\"links.homepage_stats\" id=\"links.homepage_stats\" [(ngModel)]=\"state.client['links.homepage_stats']\" trans>Show Homepage Stats</mat-slide-toggle>\n                    <p trans>Whether statistics about about number of links, clicks and users should be displayed on homepage.</p>\n                </div>\n\n                <div class=\"input-container\">\n                    <label for=\"links.gchart_api_key\" trans>Google Chart API Key</label>\n                    <input type=\"text\" name=\"links.gchart_api_key\" id=\"links.gchart_api_key\" [(ngModel)]=\"state.client['links.gchart_api_key']\">\n                    <p trans>Required in order to show world geochart on link and group report pages.</p>\n                </div>\n            </div>\n        </mat-tab>\n\n        <mat-tab [label]=\"'Security' | trans\">\n           <div class=\"many-inputs security-tab\">\n               <div class=\"error-group many-inputs\">\n                   <div class=\"input-container\">\n                       <label for=\"links.blacklist.keywords\" trans>Blacklist Keywords</label>\n                       <textarea name=\"links.blacklist.keywords\" id=\"links.blacklist.keywords\" [(ngModel)]=\"state.client['links.blacklist.keywords']\"></textarea>\n                       <p trans>Comma separated list of keywords. User will not be able to shorten any URLs that contain specified keywords.</p>\n                   </div>\n\n                   <div class=\"input-container\">\n                       <label for=\"links.blacklist.domains\" trans>Blacklist Domains</label>\n                       <textarea name=\"links.blacklist.domains\" id=\"links.blacklist.domains\" [(ngModel)]=\"state.client['links.blacklist.domains']\"></textarea>\n                       <p trans>Comma separated domain list (domain1.com, domain2.com etc.). User will not be able to shorten any URLs from specified domains.</p>\n                   </div>\n               </div>\n\n               <div class=\"input-container\">\n                   <label for=\"links.google_safe_browsing_key\" trans>Google Safe Browsing API Key</label>\n                   <input type=\"text\" name=\"links.google_safe_browsing_key\" id=\"links.google_safe_browsing_key\" [(ngModel)]=\"state.client['links.google_safe_browsing_key']\">\n                   <p trans>Entering this API key will prevent urls that are considered unsafe by google from being shortened.</p>\n               </div>\n\n               <div class=\"input-container\">\n                   <label for=\"links.phishtank_key\" trans>Phishtank API Key</label>\n                   <input type=\"text\" name=\"links.phishtank_key\" id=\"links.phishtank_key\" [(ngModel)]=\"state.client['links.phishtank_key']\">\n                   <p trans>Entering this API key will prevent urls that are considered unsafe by Phishtank from being shortened.</p>\n               </div>\n           </div>\n        </mat-tab>\n\n        <mat-tab [label]=\"'Domains' | trans\">\n            <div class=\"error-group\">\n                <div class=\"input-container default-domain-input-container\">\n                    <label for=\"custom-domains-default-host\" trans>Default Domain</label>\n                    <select id=\"custom-domains-default-host\" name=\"custom-domains-default-host\" [(ngModel)]=\"state.client['custom_domains.default_host']\">\n                        <option [value]=\"''\">{{defaultDomain}}</option>\n                        <option [value]=\"domain.host\" *ngFor=\"let domain of customDomains$ | async\">{{domain.host}}</option>\n                    </select>\n                    <p trans>Which domain should be used by default for links.</p>\n                </div>\n\n                <div class=\"setting-toggle-container margin-top\">\n                    <mat-slide-toggle id=\"custom-domains-allow-select\" name=\"custom-domains-allow-select\" [(ngModel)]=\"state.client['custom_domains.allow_select']\" trans>Allow Domain Selection</mat-slide-toggle>\n                    <p trans>Allow users to select which domain they want to use for each link.</p>\n                </div>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n\n    <button mat-raised-button color=\"accent\" class=\"button primary update-button\" type=\"submit\" [disabled]=\"loading$ | async\" trans>Update</button>\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {SettingsPanelComponent} from '@common/admin/settings/settings-panel.component';\nimport {BehaviorSubject} from 'rxjs';\nimport {CustomDomain} from '@common/custom-domain/custom-domain';\n\n@Component({\n    selector: 'link-settings',\n    templateUrl: './link-settings.component.html',\n    styleUrls: ['./link-settings.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'settings-panel'},\n})\nexport class LinkSettingsComponent extends SettingsPanelComponent implements OnInit {\n    public customDomains$ = new BehaviorSubject<CustomDomain[]>([]);\n    public defaultDomain: string;\n\n    public ngOnInit() {\n        this.valueLists.get(['domains']).subscribe(response => {\n            this.customDomains$.next(response.domains);\n        });\n\n        this.defaultDomain = this.settings.getBaseUrl()\n            .replace(/\\/$/, '');\n    }\n}\n","import {LinkIndexComponent} from '../dashboard/link/link-index/link-index.component';\r\nimport {LinkShowResolverService} from '../dashboard/link/link-show/link-show-resolver.service';\r\nimport {LinkShowComponent} from '../dashboard/link/link-show/link-show.component';\r\nimport {LinkGroupIndexComponent} from '../dashboard/link-group/link-group-index/link-group-index.component';\r\nimport {LinkGroupResolverService} from '../dashboard/link-group/link-group-show/link-group-resolver.service';\r\nimport {LinkGroupShowComponent} from '../dashboard/link-group/link-group-show/link-group-show.component';\r\nimport {CustomDomainIndexComponent} from '@common/custom-domain/custom-domain-index/custom-domain-index.component';\r\nimport {LinkOverlayIndexComponent} from '../dashboard/link-overlay/link-overlay-index/link-overlay-index.component';\r\nimport {TrackingPixelIndexComponent} from '../dashboard/pixels/tracking-pixel-index/tracking-pixel-index.component';\r\nimport {LinkSettingsComponent} from './settings/link-settings/link-settings.component';\r\nimport {Routes} from '@angular/router';\r\n\r\nexport const APP_ADMIN_ROUTES: Routes = [\r\n    // link\r\n    {path: 'links', component: LinkIndexComponent},\r\n    {path: 'links/:linkId', resolve: {api: LinkShowResolverService}, component: LinkShowComponent},\r\n\r\n    // group\r\n    {path: 'groups', component: LinkGroupIndexComponent},\r\n    {path: 'groups/:groupId', resolve: {api: LinkGroupResolverService}, component: LinkGroupShowComponent},\r\n\r\n    // custom domain\r\n    {path: 'custom-domains', component: CustomDomainIndexComponent},\r\n\r\n    // link overlay\r\n    {path: 'link-overlays', component: LinkOverlayIndexComponent},\r\n\r\n    // tracking pixels\r\n    {path: 'pixels', component: TrackingPixelIndexComponent},\r\n];\r\n\r\nexport const APP_SETTING_ROUTES: Routes = [\r\n    {path: 'links', component: LinkSettingsComponent}\r\n];\r\n","<ng-template #navItems>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"general\" routerLinkActive=\"selected\"><div class=\"name\" trans>General</div></a>\r\n    <a class=\"nav-item\" mat-menu-item *ngFor=\"let route of appRoutes()\" [routerLink]=\"route.path\" routerLinkActive=\"selected\"><div class=\"name\" trans>{{route.path.replace('-', ' ')}}</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"billing\" *ngIf=\"settings.get('billing.integrated')\" routerLinkActive=\"selected\"><div class=\"name\" trans>Billing</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"localization\" routerLinkActive=\"selected\"><div class=\"name\" trans>Localization</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"authentication\" routerLinkActive=\"selected\"><div class=\"name\" trans>Authentication</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"uploading\" routerLinkActive=\"selected\"><div class=\"name\" trans>Uploading</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"mail\" routerLinkActive=\"selected\"><div class=\"name\" trans>Mail</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"cache\" routerLinkActive=\"selected\"><div class=\"name\" trans>Cache</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"analytics\" routerLinkActive=\"selected\"><div class=\"name\" trans>Analytics</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"logging\" routerLinkActive=\"selected\"><div class=\"name\" trans>Logging</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"queue\" routerLinkActive=\"selected\"><div class=\"name\" trans>Queue</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"recaptcha\" routerLinkActive=\"selected\"><div class=\"name\" trans>Recaptcha</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"gdpr\" routerLinkActive=\"selected\"><div class=\"name\" trans>GDPR</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"/admin/appearance\" [queryParams]=\"{panel: 'menus'}\" routerLinkActive=\"selected\"><div class=\"name\" trans>Menus</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"/admin/appearance\" [queryParams]=\"{panel: 'seo-settings'}\" routerLinkActive=\"selected\"><div class=\"name\" trans>Seo</div></a>\r\n    <a class=\"nav-item\" mat-menu-item routerLink=\"/admin/appearance\" [queryParams]=\"{panel: 'themes'}\" routerLinkActive=\"selected\"><div class=\"name\" trans>Themes</div></a>\r\n</ng-template>\r\n\r\n<ng-container *ngIf=\"breakpoints.isMobile$ | async; else desktopNav\">\r\n    <button [matMenuTriggerFor]=\"navMenu\" class=\"no-style admin-pill-nav-mobile-selector\">\r\n        <span class=\"name\" trans>{{activePanel$ | async}}</span>\r\n        <mat-icon svgIcon=\"keyboard-arrow-down\"></mat-icon>\r\n    </button>\r\n    <mat-menu #navMenu=\"matMenu\" class=\"admin-pill-nav-menu\">\r\n        <ng-container *ngTemplateOutlet=\"navItems\"></ng-container>\r\n    </mat-menu>\r\n</ng-container>\r\n\r\n<ng-template #desktopNav>\r\n    <aside class=\"admin-pill-nav rounded\">\r\n        <ng-container *ngTemplateOutlet=\"navItems\"></ng-container>\r\n    </aside>\r\n</ng-template>\r\n\r\n<div class=\"settings-panels-container\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, NavigationEnd, Router, Routes} from '@angular/router';\r\nimport {SettingsState} from './settings-state.service';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {APP_SETTING_ROUTES} from '../../../app/admin/app-admin-routes';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {BreakpointsService} from '@common/core/ui/breakpoints.service';\r\nimport {filter} from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'settings',\r\n    templateUrl: './settings.component.html',\r\n    styleUrls: ['./settings.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n    public activePanel$ = new BehaviorSubject<string>(this.route.firstChild.routeConfig.path);\r\n    constructor(\r\n        public settings: Settings,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private state: SettingsState,\r\n        public breakpoints: BreakpointsService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe(data => {\r\n            this.state.setAll(data['settings']);\r\n        });\r\n\r\n        this.router.events\r\n            .pipe(filter(e => e instanceof NavigationEnd))\r\n            .subscribe(() => {\r\n                this.activePanel$.next(this.route.firstChild.routeConfig.path);\r\n            });\r\n    }\r\n\r\n    public appRoutes(): Routes {\r\n        return APP_SETTING_ROUTES;\r\n    }\r\n}\r\n","<div class=\"header\">\r\n    <div class=\"title\" trans>General</div>\r\n    <div class=\"subtitle\" trans>Configure general site settings.</div>\r\n</div>\r\n\r\n<form class=\"body many-inputs\" (ngSubmit)=\"saveSettings()\" ngNativeValidate>\r\n    <div class=\"input-container\">\r\n        <label for=\"app_url\" trans>Site Url</label>\r\n        <input type=\"text\" id=\"app_url\" name=\"app_url\" [(ngModel)]=\"state.server['app_url']\" readonly=\"readonly\" required>\r\n    </div>\r\n\r\n    <div class=\"error-group many-inputs\">\r\n        <div class=\"input-container\">\r\n            <label for=\"homepage.type\" trans>Homepage Type</label>\r\n            <select name=\"homepage.type\" id=\"homepage.type\" [(ngModel)]=\"state.client['homepage.type']\">\r\n                <option value=\"default\">Default</option>\r\n                <option value=\"component\">Application Page</option>\r\n                <option [value]=\"category.name\" *ngFor=\"let category of menuItemCategories$ | async\">{{category.name}}</option>\r\n            </select>\r\n            <p trans>Type of the homepage.</p>\r\n        </div>\r\n\r\n        <ng-container *ngFor=\"let category of menuItemCategories$ | async\">\r\n            <div class=\"input-container\" *ngIf=\"state.client['homepage.type'] === category.name\">\r\n                <label [for]=\"category.name\">{{category.name}}</label>\r\n                <select [id]=\"category.name\" [name]=\"category.name\" [(ngModel)]=\"state.client['homepage.value']\">\r\n                    <option *ngFor=\"let item of category.items\" [value]=\"item.model_id\">{{item.label}}</option>\r\n                </select>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <div class=\"input-container\" *ngIf=\"state.client['homepage.type'] === 'component'\">\r\n            <label for=\"homepage.value\" trans>Application Page</label>\r\n            <select name=\"homepage.value\" id=\"homepage.value\" [(ngModel)]=\"state.client['homepage.value']\">\r\n                <option [ngValue]=\"page.name\" *ngFor=\"let page of getHomepageComponents()\" trans>{{getDisplayName(page)}}</option>\r\n            </select>\r\n            <p trans>Select application page that should be used for homepage.</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"themes.default_mode\" trans>Default Site Theme</label>\r\n        <select id=\"themes.default_mode\" name=\"themes.default_mode\" [(ngModel)]=\"state.client['themes.default_mode']\">\r\n            <option value=\"light\" trans>Light</option>\r\n            <option value=\"dark\" trans>Dark</option>\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"setting-toggle-container\">\r\n        <mat-slide-toggle name=\"themes.user_change\" id=\"themes.user_change\" [(ngModel)]=\"state.client['themes.user_change']\" trans>Allow Theme Change</mat-slide-toggle>\r\n        <p trans>Allow user to switch from dark to light mode and vice versa.</p>\r\n    </div>\r\n\r\n    <div class=\"setting-toggle-container\">\r\n        <mat-slide-toggle name=\"site.force_https\" id=\"site.force_https\" [(ngModel)]=\"state.client['site.force_https']\" trans>\r\n            Redirect to HTTPS\r\n        </mat-slide-toggle>\r\n        <p trans>You must have SSL set up on the server for this to work.</p>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" class=\"button primary update-button\" type=\"submit\" [disabled]=\"loading$ | async\" trans>Update</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {SettingsPanelComponent} from '../settings-panel.component';\r\nimport {CssTheme} from '@common/core/types/models/CssTheme';\r\nimport {MenuItemCategory} from '@common/admin/appearance/panels/menus-appearance-panel/menus/item-categories/menu-item-category';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {CustomHomepagePage} from '@common/core/pages/shared/custom-homepage.service';\r\n\r\n@Component({\r\n    selector: 'homepage-settings',\r\n    templateUrl: './general-settings.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {'class': 'settings-panel'},\r\n})\r\nexport class GeneralSettingsComponent extends SettingsPanelComponent implements OnInit {\r\n    public menuItemCategories$ = new BehaviorSubject<MenuItemCategory[]>([]);\r\n    public cssThemes: CssTheme[] = [];\r\n\r\n    ngOnInit() {\r\n        this.valueLists.get(['menuItemCategories', 'themes']).subscribe(response => {\r\n            this.menuItemCategories$.next(response.menuItemCategories);\r\n            this.cssThemes = response.themes;\r\n        });\r\n    }\r\n\r\n    public getHomepageComponents() {\r\n        return this.customHomepage.getComponents();\r\n    }\r\n\r\n    public getDisplayName(page: CustomHomepagePage) {\r\n        return (page.routeConfig.data && page.routeConfig.data.name) ||\r\n            page.name.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\r\n    }\r\n}\r\n","<div class=\"header\">\r\n    <div class=\"title\" trans>Authentication</div>\r\n    <div class=\"subtitle\" trans>Configure registration, social login and related 3rd party integrations.</div>\r\n</div>\r\n\r\n<form class=\"body many-inputs social-login-container\" (ngSubmit)=\"saveSettings()\" ngNativeValidate *ngIf=\"errors$ | async as errors\">\r\n\r\n    <div class=\"setting-toggle-container\">\r\n        <mat-slide-toggle name=\"require_email_confirmation\" id=\"require_email_confirmation\" [(ngModel)]=\"state.client['require_email_confirmation']\" trans>Require Email Confirmation</mat-slide-toggle>\r\n        <p trans>Require new users to validate their email address before being able to login.</p>\r\n    </div>\r\n\r\n    <div class=\"setting-toggle-container\">\r\n        <mat-slide-toggle name=\"registration.disable\" id=\"registration.disable\" [(ngModel)]=\"state.client['registration.disable']\" trans>Disable Registration</mat-slide-toggle>\r\n        <p trans>All registration (including social login) will be disabled.</p>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"settings.get('envato.enable')\">\r\n        <div class=\"setting-toggle-container envato\">\r\n            <mat-slide-toggle name=\"social.envato.enable\" id=\"social.envato.enable\" [(ngModel)]=\"state.client['social.envato.enable']\" trans>Envato Login</mat-slide-toggle>\r\n            <p trans>Enable logging into the site via envato.</p>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"state.client['social.envato.enable']\">\r\n            <div class=\"input-container\">\r\n                <label for=\"social.envato.id\" trans>Envato ID</label>\r\n                <input name=\"social.envato.id\" id=\"social.envato.id\" [(ngModel)]=\"state.server['envato_id']\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"social.envato.secret\" trans>Envato Secret</label>\r\n                <input name=\"social.envato.secret\" id=\"social.envato.secret\" [(ngModel)]=\"state.server['envato_secret']\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"social.envato.personal_token\" trans>Envato Personal Token</label>\r\n                <input name=\"social.envato.personal_token\" id=\"social.envato.personal_token\" [(ngModel)]=\"state.server['envato_personal_token']\">\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n\r\n    <div class=\"error-group many-inputs no-bottom-border\" id=\"google_group\" [class.has-error]=\"errors.google_group\">\r\n        <div class=\"setting-toggle-container google\">\r\n            <mat-slide-toggle name=\"social.google.enable\" id=\"social.google.enable\" [(ngModel)]=\"state.client['social.google.enable']\" trans>Google Login</mat-slide-toggle>\r\n            <p trans>Enable logging into the site via google.</p>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"state.client['social.google.enable']\">\r\n            <div class=\"input-container\">\r\n                <label for=\"social.google.id\" trans>Google Client ID</label>\r\n                <input name=\"social.google.id\" id=\"social.google.id\" [(ngModel)]=\"state.server['google_id']\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"social.google.secret\" trans>Google Client Secret</label>\r\n                <input name=\"social.google.secret\" id=\"social.google.secret\" [(ngModel)]=\"state.server['google_secret']\">\r\n            </div>\r\n        </ng-container>\r\n\r\n        <p class=\"error\" *ngIf=\"errors.google_group\" [innerHTML]=\"errors.google_group\"></p>\r\n    </div>\r\n\r\n    <div class=\"error-group many-inputs no-bottom-border\" [class.has-error]=\"errors.facebook_group\">\r\n        <div class=\"setting-toggle-container facebook\">\r\n            <mat-slide-toggle name=\"social.facebook.enable\" id=\"social.facebook.enable\" [(ngModel)]=\"state.client['social.facebook.enable']\" trans>Facebook Login</mat-slide-toggle>\r\n            <p trans>Enable logging into the site via facebook.</p>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"state.client['social.facebook.enable']\">\r\n            <div class=\"input-container\">\r\n                <label for=\"social.facebook.id\" trans>Facebook App ID</label>\r\n                <input name=\"social.facebook.id\" id=\"social.facebook.id\" [(ngModel)]=\"state.server['facebook_id']\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"social.facebook.secret\" trans>Facebook App Secret</label>\r\n                <input name=\"social.facebook.secret\" id=\"social.facebook.secret\" [(ngModel)]=\"state.server['facebook_secret']\">\r\n            </div>\r\n        </ng-container>\r\n\r\n        <p class=\"error\" *ngIf=\"errors.facebook_group\" [innerHTML]=\"errors.facebook_group\"></p>\r\n    </div>\r\n\r\n    <div class=\"error-group many-inputs\" [class.has-error]=\"errors.twitter_group\">\r\n        <div class=\"setting-toggle-container twitter\">\r\n            <mat-slide-toggle name=\"social.twitter.enable\" id=\"social.twitter.enable\" [(ngModel)]=\"state.client['social.twitter.enable']\" trans>Twitter Login</mat-slide-toggle>\r\n            <p trans>Enable logging into the site via twitter.</p>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"state.client['social.twitter.enable']\">\r\n            <div class=\"input-container\">\r\n                <label for=\"social.twitter.id\" trans>Twitter ID</label>\r\n                <input name=\"social.twitter.id\" id=\"social.twitter.id\" [(ngModel)]=\"state.server['twitter_id']\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"social.twitter.secret\" trans>Twitter Secret</label>\r\n                <input name=\"social.twitter.secret\" id=\"social.twitter.secret\" [(ngModel)]=\"state.server['twitter_secret']\">\r\n            </div>\r\n        </ng-container>\r\n\r\n        <p class=\"error\" *ngIf=\"errors.twitter_group\" [innerHTML]=\"errors.twitter_group\"></p>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" class=\"button primary update-button\" type=\"submit\" [disabled]=\"loading$ | async\" trans>Update</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>","import {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\r\nimport {SettingsPanelComponent} from '../settings-panel.component';\r\n\r\n@Component({\r\n    selector: 'authentication-settings',\r\n    templateUrl: './authentication-settings.component.html',\r\n    styleUrls: ['./authentication-settings.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    host: {'class': 'settings-panel'},\r\n})\r\nexport class AuthenticationSettingsComponent extends SettingsPanelComponent {}\r\n","<div class=\"header\">\r\n    <div class=\"title\" trans>Cache</div>\r\n    <div class=\"subtitle\" trans>Configure cache time, method and related 3rd party integrations.</div>\r\n</div>\r\n\r\n<form class=\"body many-inputs\" (submit)=\"saveSettings()\" ngNativeValidate *ngIf=\"errors$ | async as errors\">\r\n    <div class=\"error-group many-inputs no-border-top\" id=\"cache_group\" [class.has-error]=\"errors.cache_group\">\r\n        <div class=\"input-container\">\r\n            <label for=\"cache.driver\" trans>Cache Method</label>\r\n            <select name=\"cache.driver\" id=\"cache.driver\" [(ngModel)]=\"state.server['cache_driver']\" (ngModelChange)=\"clearErrors()\">\r\n                <option value=\"file\">File (Default)</option>\r\n                <option value=\"array\">None</option>\r\n                <option value=\"apc\">APC</option>\r\n                <option value=\"memcached\">Memcached</option>\r\n                <option value=\"redis\">Redis</option>\r\n            </select>\r\n            <p trans>Which method should be used for storing and retrieving cached items.</p>\r\n        </div>\r\n\r\n        <!-- MEMCACHED -->\r\n        <ng-container *ngIf=\"state.server['cache_driver'] === 'memcached'\">\r\n            <div class=\"input-container\">\r\n                <label for=\"cache.memcached_host\" trans>Memcached Host</label>\r\n                <input name=\"cache.memcached_host\" id=\"cache.memcached_host\" [(ngModel)]=\"state.server['memcached_host']\" required>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"cache.memcached_port\" trans>Memcached Port</label>\r\n                <input name=\"cache.memcached_port\" id=\"cache.memcached_port\" [(ngModel)]=\"state.server['memcached_port']\" required>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <p class=\"error\" *ngIf=\"errors.cache_group\" [innerHTML]=\"errors.cache_group\"></p>\r\n    </div>\r\n\r\n    <button mat-stroked-button color=\"accent\" class=\"button flat\" (click)=\"clearCache()\" type=\"button\" trans>Clear Cache</button>\r\n\r\n    <div class=\"widget widget-info widget-important\">\r\n        <div class=\"title\" trans>Important!</div>\r\n        <p trans>\"File\" is the best option for most cases and should not be changed, unless you are familiar with another cache method and have it set up on the server already.</p>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" class=\"button primary update-button\" [disabled]=\"loading$ | async\" type=\"submit\" trans>Update</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SettingsPanelComponent} from '../settings-panel.component';\r\nimport {finalize} from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'cache-settings',\r\n    templateUrl: './cache-settings.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {'class': 'settings-panel'},\r\n})\r\nexport class CacheSettingsComponent extends SettingsPanelComponent {\r\n    public clearCache() {\r\n        this.loading$.next(true);\r\n        this.artisan.call({command: 'cache:clear'})\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(() => {\r\n                this.toast.open('Cache cleared.');\r\n            });\r\n    }\r\n}\r\n","<div class=\"header\">\r\n    <div class=\"title\">Analytics</div>\r\n    <div class=\"subtitle\" trans>Configure google analytics integration and credentials.</div>\r\n</div>\r\n\r\n<form class=\"body many-inputs\" (submit)=\"saveSettings()\" ngNativeValidate *ngIf=\"errors$ | async as errors\">\r\n    <div class=\"error-group many-inputs no-spacing\" id=\"analytics_group\" [class.has-error]=\"errors.analytics_group\">\r\n        <div class=\"input-container\" [class.has-error]=\"errors['certificate']\">\r\n            <label for=\"certificate\" trans>Google Analytics Private Key File (.p12)</label>\r\n            <input type=\"file\" id=\"certificate\" name=\"certificate\" #fileInput (change)=\"setCertificateFile(fileInput.files)\" accept=\".p12\">\r\n            <p class=\"error\" *ngIf=\"errors['certificate']\">{{errors['certificate']}}</p>\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n            <label for=\"analytics.view_id\" trans>Google Analytics View ID</label>\r\n            <input type=\"number\" name=\"analytics.view_id\" id=\"analytics.view_id\" [(ngModel)]=\"state.server['analytics_view_id']\">\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n            <label for=\"analytics.service_email\" trans>Google Analytics Service Email</label>\r\n            <input type=\"email\" name=\"analytics.service_email\" id=\"analytics.service_email\" [(ngModel)]=\"state.server['analytics_service_email']\" placeholder=\"account@project.iam.gserviceaccount.com\">\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n            <label for=\"analytics.tracking_code\" trans>Google Analytics Tracking Code</label>\r\n            <input name=\"analytics.tracking_code\" id=\"analytics.tracking_code\" [(ngModel)]=\"state.client['analytics.tracking_code']\" min=\"1\" max=\"20\" placeholder=\"UA-******-2\">\r\n            <p trans>Google analytics tracking code only, not the whole javascript code snippet.</p>\r\n        </div>\r\n\r\n        <p class=\"error\" *ngIf=\"errors.analytics_group\" [innerHTML]=\"errors.analytics_group\"></p>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" class=\"button primary update-button\" [disabled]=\"loading$ | async\" type=\"submit\" trans>Update</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SettingsPanelComponent} from '@common/admin/settings/settings-panel.component';\r\nimport {SettingsPayload} from '@common/core/config/settings-payload';\r\n\r\n@Component({\r\n    selector: 'analytics-settings',\r\n    templateUrl: './analytics-settings.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {'class': 'settings-panel'},\r\n})\r\nexport class AnalyticsSettingsComponent extends SettingsPanelComponent {\r\n    public certificateFile: File;\r\n\r\n    public saveSettings(settings?: SettingsPayload) {\r\n        const payload = this.getPayload(settings || this.state.getModified());\r\n        super.saveSettings(payload);\r\n    }\r\n\r\n    private getPayload(settings: SettingsPayload) {\r\n        if (this.certificateFile) {\r\n            settings.files = {certificate: this.certificateFile};\r\n        }\r\n        return settings;\r\n    }\r\n\r\n    public setCertificateFile(files: FileList) {\r\n        this.certificateFile = files.item(0);\r\n    }\r\n}\r\n","<div class=\"header\">\r\n    <div class=\"title\" trans>Localization</div>\r\n    <div class=\"subtitle\" trans>Manage localization settings for the site.</div>\r\n</div>\r\n\r\n<form class=\"body many-inputs\" (submit)=\"saveSettings()\">\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"app.timezone\" trans>Timezone</label>\r\n        <select name=\"app.timezone\" id=\"app.timezone\" [(ngModel)]=\"state.server['app_timezone']\">\r\n            <optgroup [label]=\"pair.key\" *ngFor=\"let pair of selects.timezones | keyvalue\">\r\n                <option [value]=\"timezone.value\" *ngFor=\"let timezone of pair.value\">{{timezone.text}}</option>\r\n            </optgroup>\r\n        </select>\r\n        <p trans>Choose either a city in the same timezone as you or a UTC timezone offset.</p>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"app.locale\" trans>Site Language</label>\r\n        <select name=\"app.locale\" id=\"app.locale\" [(ngModel)]=\"state.server['app_locale']\">\r\n            <option [value]=\"localization.language\" *ngFor=\"let localization of selects.localizations\">{{localization.name}}</option>\r\n        </select>\r\n        <p trans>Which translation should be selected by default for new users.</p>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"dates.format\" trans>Date Format</label>\r\n        <select name=\"dates.format\" id=\"dates.format\" class=\"no-capitalize\" [(ngModel)]=\"initialDateFormat\" (ngModelChange)=\"updateDateFormat($event)\" required>\r\n            <option [value]=\"format\" *ngFor=\"let format of defaultDateFormats\">{{getCurrentDate() | formattedDate:format}} ({{format}})</option>\r\n            <option value=\"custom\" trans>Custom</option>\r\n        </select>\r\n        <p>\r\n            {{'Default format for dates on the site.' | trans}}\r\n            <br>\r\n            {{'Preview:' | trans}} <strong>{{ getCurrentDate() | formattedDate:selectedDateFormat() }}</strong>\r\n        </p>\r\n    </div>\r\n\r\n    <div class=\"input-container\" [class.hidden]=\"initialDateFormat !== 'custom'\">\r\n        <label for=\"dates.custom-format\" trans>Custom Date Format</label>\r\n        <input type=\"text\" id=\"dates.custom-format\" name=\"dates.custom-format\" [(ngModel)]=\"state.client['dates.format']\" required>\r\n    </div>\r\n\r\n    <div class=\"setting-toggle-container\">\r\n        <mat-slide-toggle [(ngModel)]=\"state.client['i18n.enable']\" name=\"translations\" trans>Translations</mat-slide-toggle>\r\n        <p trans>Enable translations functionality for the site.</p>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" class=\"button primary update-button\" type=\"submit\" [disabled]=\"loading$ | async\" trans>Update</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { SettingsPanelComponent } from '../settings-panel.component';\r\nimport { SelectOptionLists } from '@common/core/services/value-lists.service';\r\n\r\n@Component({\r\n    selector: 'localization-settings',\r\n    templateUrl: './localization-settings.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {'class': 'settings-panel'},\r\n})\r\nexport class LocalizationSettingsComponent extends SettingsPanelComponent implements OnInit {\r\n    public selects: SelectOptionLists = {\r\n        timezones: {},\r\n        localizations: []\r\n    };\r\n    public defaultDateFormats = ['MMMM d, y', 'y-M-d', 'M/d/y', 'd/M/y'];\r\n    public initialDateFormat: string;\r\n\r\n    ngOnInit() {\r\n        const initial = this.state.client['dates.format'] as string;\r\n        this.initialDateFormat = this.defaultDateFormats.includes(initial) ? initial : 'custom';\r\n        this.valueLists.get(['timezones', 'localizations']).subscribe(response => {\r\n            this.selects = response;\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    public getCurrentDate() {\r\n        return new Date();\r\n    }\r\n\r\n    public updateDateFormat(value: string) {\r\n        if (value && value !== 'custom') {\r\n            this.state.client['dates.format'] = value;\r\n        }\r\n    }\r\n\r\n    public selectedDateFormat() {\r\n        return this.state.client['dates.format'] as string;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router, Resolve, ActivatedRouteSnapshot} from '@angular/router';\r\nimport {Localization} from '../../core/types/models/Localization';\r\nimport {Localizations} from '../../core/translations/localizations.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LocalizationsResolve implements Resolve<Localization[]> {\r\n\r\n    constructor(private localizations: Localizations, private router: Router) {\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Promise<Localization[]> {\r\n        return this.localizations.all().toPromise().then(response => {\r\n            return response.localizations;\r\n        }, () => {\r\n            this.router.navigate(['/admin']);\r\n            return false;\r\n        }) as any;\r\n    }\r\n}\r\n","<div class=\"header\">\r\n    <div class=\"title\" trans>Mail</div>\r\n    <div class=\"subtitle\" trans>Change incoming and outgoing email handlers, email credentials and more.</div>\r\n</div>\r\n\r\n<form class=\"body many-inputs\" (submit)=\"saveSettings()\" ngNativeValidate *ngIf=\"errors$ | async as errors\">\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"env.mail_from_address\" trans>From Address</label>\r\n        <input type=\"email\" name=\"env.mail_from_address\" id=\"env.mail_from_address\" [(ngModel)]=\"state.server['mail_from_address']\" required>\r\n        <p trans>All outgoing application emails will be sent from this email address.</p>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"env.mail_from_name\" trans>From Name</label>\r\n        <input name=\"env.mail_from_name\" id=\"env.mail_from_name\" [(ngModel)]=\"state.server['mail_from_name']\" required>\r\n        <p trans>All outgoing application emails will be sent using this name.</p>\r\n    </div>\r\n\r\n    <div class=\"widget widget-info widget-important\">\r\n        <div class=\"title\" trans>Important!</div>\r\n        <p trans>Your selected mail method must be authorized to send emails using this address and name.</p>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"settings.get('vebto.admin.showIncomingMailMethod')\">\r\n        <div class=\"input-container\">\r\n            <label for=\"mail.handler\" trans>Incoming Mail Method</label>\r\n            <select name=\"mail.handler\" id=\"mail.handler\" [(ngModel)]=\"state.client['mail.handler']\">\r\n                <option value=\"mailgun\" trans>Mailgun</option>\r\n                <option value=\"null\" trans>API (Send emails via http API)</option>\r\n                <option value=\"mime\" trans>Pipe (Pipe emails directly)</option>\r\n            </select>\r\n            <p trans>Which method should be used to handle incoming application emails.</p>\r\n        </div>\r\n\r\n        <div class=\"input-container\" *ngIf=\"state.client['mail.handler'] === 'null'\">\r\n            <label for=\"webhook_secret_key\">API Secret Key</label>\r\n            <input type=\"text\" id=\"webhook_secret_key\" name=\"webhook_secret_key\" [(ngModel)]=\"state.client['mail.webhook_secret_key']\" required minlength=\"30\" maxlength=\"30\">\r\n        </div>\r\n    </ng-container>\r\n\r\n    <div class=\"error-group many-inputs\" id=\"mail_group\" [class.has-error]=\"errors.mail_group\">\r\n        <div class=\"input-container\">\r\n            <label for=\"mail.driver\" trans>Outgoing Mail Method</label>\r\n            <select name=\"mail.driver\" id=\"mail.driver\" [(ngModel)]=\"state.server['mail_driver']\" (ngModelChange)=\"clearErrors()\">\r\n                <option value=\"mailgun\">Mailgun</option>\r\n                <option value=\"smtp\">SMTP</option>\r\n                <option value=\"sparkpost\">SparkPost</option>\r\n                <option value=\"ses\">Ses (Amazon Simple Email Service)</option>\r\n                <option value=\"mandrill\">Mandrill</option>\r\n                <option value=\"mail\">PHP Mail</option>\r\n                <option value=\"sendmail\">SendMail</option>\r\n                <option value=\"log\">Log (Email will be saved to error log)</option>\r\n            </select>\r\n            <p trans>Which method should be used for sending outgoing application emails.</p>\r\n        </div>\r\n\r\n        <!-- SMTP -->\r\n        <ng-container *ngIf=\"state.server['mail_driver'] === 'smtp'\">\r\n            <div class=\"input-container\">\r\n                <label for=\"env.mail_host\" trans>SMTP Host</label>\r\n                <input name=\"env.mail_host\" id=\"env.mail_host\" [(ngModel)]=\"state.server['mail_host']\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"env.mail_username\" trans>SMTP Username</label>\r\n                <input name=\"env.mail_username\" id=\"env.mail_username\" [(ngModel)]=\"state.server['mail_username']\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"env.mail_password\" trans>SMTP Password</label>\r\n                <input type=\"password\" name=\"env.mail_password\" id=\"env.mail_password\" [(ngModel)]=\"state.server['mail_password']\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"env.mail_port\" trans>SMTP Port</label>\r\n                <input name=\"env.mail_port\" id=\"env.mail_port\" [(ngModel)]=\"state.server['mail_port']\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"env.mail_encryption\" trans>SMTP Encryption</label>\r\n                <input name=\"env.mail_encryption\" id=\"env.mail_encryption\" [(ngModel)]=\"state.server['mail_encryption']\">\r\n            </div>\r\n        </ng-container>\r\n\r\n        <!-- MAILGUN -->\r\n        <ng-container *ngIf=\"state.server['mail_driver'] === 'mailgun'\">\r\n            <div class=\"input-container\" [class.has-error]=\"errors.mailgun_domain\">\r\n                <label for=\"mailgun_domain\" trans>Mailgun Domain</label>\r\n                <input name=\"mailgun_domain\" id=\"mailgun_domain\" [(ngModel)]=\"state.server['mailgun_domain']\">\r\n                <div class=\"error\" *ngIf=\"errors.mailgun_domain\">{{errors.mailgun_domain}}</div>\r\n                <p trans>Usually the domain of your site (site.com)</p>\r\n            </div>\r\n\r\n            <div class=\"input-container\" [class.has-error]=\"errors.mailgun_secret\">\r\n                <label for=\"mailgun_secret\" trans>Mailgun API Key</label>\r\n                <input name=\"mailgun_secret\" id=\"mailgun_secret\" [(ngModel)]=\"state.server['mailgun_secret']\">\r\n                <div class=\"error\" *ngIf=\"errors.mailgun_secret\">{{errors.mailgun_secret}}</div>\r\n                <p trans>Should start with \"key-\"</p>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <!-- SES -->\r\n        <ng-container *ngIf=\"state.server['mail_driver'] === 'ses'\">\r\n            <div class=\"input-container\">\r\n                <label for=\"env.ses_key\" trans>SES Key</label>\r\n                <input name=\"env.ses_key\" id=\"env.ses_key\" [(ngModel)]=\"state.server['ses_key']\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"env.ses_secret\" trans>SES Secret</label>\r\n                <input name=\"env.ses_secret\" id=\"env.ses_secret\" [(ngModel)]=\"state.server['ses_secret']\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"env.ses_region\" trans>SES Region</label>\r\n                <input name=\"env.ses_region\" id=\"env.ses_region\" [(ngModel)]=\"state.server['ses_region']\" placeholder=\"us-east-1\">\r\n            </div>\r\n        </ng-container>\r\n\r\n        <!-- SPARKPOST-->\r\n        <div class=\"input-container\" *ngIf=\"state.server['mail_driver'] === 'sparkpost'\">\r\n            <label for=\"env.sparkpost_secret\" trans>Sparkpost Secret</label>\r\n            <input name=\"env.sparkpost_secret\" id=\"env.sparkpost_secret\" [(ngModel)]=\"state.server['sparkpost_secret']\">\r\n        </div>\r\n\r\n        <p class=\"error group-error\" *ngIf=\"errors.mail_group\" [innerHTML]=\"errors.mail_group\"></p>\r\n    </div>\r\n\r\n    <div class=\"setting-toggle-container margin-top\">\r\n        <mat-slide-toggle name=\"mail.use_default_templates\" id=\"mail.use_default_templates\" [(ngModel)]=\"state.client['mail.use_default_templates']\" trans>Default Mail Templates</mat-slide-toggle>\r\n        <p trans>Use default email templates, even if they have been modified via \"Mail Templates\" page.</p>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" class=\"button primary update-button\" type=\"submit\" [disabled]=\"loading$ | async\" trans>Update</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SettingsPanelComponent} from '../settings-panel.component';\r\n\r\n@Component({\r\n    selector: 'mail-settings',\r\n    templateUrl: './mail-settings.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {'class': 'settings-panel'},\r\n})\r\nexport class MailSettingsComponent extends SettingsPanelComponent {}\r\n","<div class=\"header\">\r\n    <div class=\"title\" trans>Logging</div>\r\n    <div class=\"subtitle\" trans>Configure site error and access logging and related 3rd party integrations.</div>\r\n</div>\r\n\r\n<form class=\"body many-inputs\" (submit)=\"saveSettings()\" ngNativeValidate *ngIf=\"errors$ | async as errors\">\r\n    <div class=\"error-group many-inputs no-spacing\" id=\"logging-group\" [class.has-error]=\"errors.logging_group\">\r\n        <div class=\"input-container\">\r\n            <label for=\"logging.sentry_dsn\" trans>Sentry DSN</label>\r\n            <input type=\"url\" name=\"logging.sentry_dsn\" id=\"logging.sentry_dsn\" [(ngModel)]=\"state.server['sentry_dsn']\" minlength=\"30\">\r\n        </div>\r\n\r\n        <p class=\"error\" *ngIf=\"errors.logging_group\" [innerHTML]=\"errors.logging_group\"></p>\r\n    </div>\r\n\r\n    <div class=\"widget widget-info\">\r\n        <div class=\"title\" trans>Information</div>\r\n        <p>\r\n            <a href=\"https://sentry.io\" target=\"_blank\">Sentry</a>\r\n            <span> {{'integration provides real-time error tracking and helps identify and fix issues when site is in production.' | trans}}</span>\r\n        </p>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" class=\"update-button\" type=\"submit\" [disabled]=\"loading$ | async\" trans>Update</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SettingsPanelComponent} from '../settings-panel.component';\r\n\r\n@Component({\r\n    selector: 'logging-settings',\r\n    templateUrl: './logging-settings.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {'class': 'settings-panel'},\r\n})\r\nexport class LoggingSettingsComponent extends SettingsPanelComponent {\r\n}\r\n","<div class=\"header\">\r\n    <div class=\"title\" trans>Queue</div>\r\n    <div class=\"subtitle\" trans>Select active queue method and enter related 3rd party API keys.</div>\r\n</div>\r\n\r\n<form class=\"body many-inputs\" (submit)=\"saveSettings()\" ngNativeValidate *ngIf=\"errors$ | async as errors\">\r\n    <div class=\"widget widget-info\">\r\n        <div class=\"title\" trans>Information</div>\r\n        <p trans>Queues allow to defer time consuming tasks, such as sending an email, until a later time. Deferring these tasks can speed up web requests to the application.</p>\r\n    </div>\r\n\r\n    <div class=\"widget widget-info widget-important\">\r\n        <div class=\"title\" trans>Important</div>\r\n        <p trans>All methods except sync require additional setup, which should be performed before changing the queue method. Consult documentation for more information.</p>\r\n    </div>\r\n\r\n    <div class=\"error-group many-inputs no-spacing\" id=\"queue-group\" [class.has-error]=\"errors.queue_group\">\r\n        <div class=\"input-container\">\r\n            <label for=\"queue.driver\" trans>Queue Method</label>\r\n            <select name=\"queue.driver\" id=\"queue.driver\" [(ngModel)]=\"state.server['queue_driver']\" (ngModelChange)=\"clearErrors()\">\r\n                <option value=\"sync\" trans>Sync (Default)</option>\r\n                <option value=\"beanstalkd\">Beanstalkd</option>\r\n                <option value=\"database\">Database</option>\r\n                <option value=\"sqs\" trans>SQS (Amazon simple queue service)</option>\r\n                <option value=\"redis\">Redis</option>\r\n            </select>\r\n        </div>\r\n\r\n        <!-- SQS -->\r\n        <ng-container *ngIf=\"state.server['queue_driver'] === 'sqs'\">\r\n            <div class=\"input-container\">\r\n                <label for=\"sqs_queue_key\" trans>SQS Queue Key</label>\r\n                <input name=\"sqs_queue_key\" id=\"sqs_queue_key\" [(ngModel)]=\"state.server['sqs_queue_key']\" required>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"sqs_queue_secret\" trans>SQS Queue Secret</label>\r\n                <input name=\"sqs_queue_secret\" id=\"sqs_queue_secret\" [(ngModel)]=\"state.server['sqs_queue_secret']\" required>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"sqs_queue_prefix\" trans>SQS Queue Prefix</label>\r\n                <input name=\"sqs_queue_prefix\" id=\"sqs_queue_prefix\" [(ngModel)]=\"state.server['sqs_queue_prefix']\" required>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"sqs_queue_name\" trans>SQS Queue Name</label>\r\n                <input name=\"sqs_queue_name\" id=\"sqs_queue_name\" [(ngModel)]=\"state.server['sqs_queue_name']\" required>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"sqs_queue_region\" trans>SQS Queue Region</label>\r\n                <input name=\"sqs_queue_region\" id=\"sqs_queue_region\" [(ngModel)]=\"state.server['sqs_queue_region']\" required>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <p class=\"error\" *ngIf=\"errors.queue_group\" [innerHTML]=\"errors.queue_group\"></p>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" class=\"button primary update-button\" [disabled]=\"loading$ | async\" type=\"submit\" trans>Update</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SettingsPanelComponent} from '@common/admin/settings/settings-panel.component';\r\n\r\n@Component({\r\n    selector: 'queue-settings',\r\n    templateUrl: './queue-settings.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {'class': 'settings-panel'},\r\n})\r\nexport class QueueSettingsComponent extends SettingsPanelComponent {\r\n    public saveSettings() {\r\n        const settings = this.state.getModified();\r\n\r\n        // need to save pusher key to both .env file and database\r\n        // because it is used on server side and on client side\r\n        if (settings.client['realtime.pusher_key']) {\r\n            settings.server['pusher_key'] = settings.client['realtime.pusher_key'];\r\n        }\r\n\r\n        super.saveSettings(settings);\r\n    }\r\n}\r\n","<div class=\"header\">\r\n    <div class=\"title\" trans>Billing</div>\r\n    <div class=\"subtitle\" trans>Configure billing and subscription settings.</div>\r\n</div>\r\n\r\n<form class=\"body many-inputs\" (submit)=\"saveSettings()\" ngNativeValidate *ngIf=\"errors$ | async as errors\">\r\n    <mat-tab-group color=\"accent\" animationDuration=\"0\">\r\n        <mat-tab [label]=\"'General' | trans\">\r\n            <div class=\"many-inputs tab-content\">\r\n                <div class=\"setting-toggle-container\">\r\n                    <mat-slide-toggle name=\"billing.enable\" id=\"billing.enable\" [(ngModel)]=\"state.client['billing.enable']\" trans>Enable Billing</mat-slide-toggle>\r\n                    <p trans>Enable or disable all billing functionality across the site.</p>\r\n                </div>\r\n\r\n                <div class=\"setting-toggle-container\">\r\n                    <mat-slide-toggle name=\"billing.force_subscription\" id=\"billing.force_subscription\" [(ngModel)]=\"state.client['billing.force_subscription']\" trans>Force Subscription</mat-slide-toggle>\r\n                    <p trans>If enabled, users will need to subscribe before being able to use any site functionality.</p>\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"state.client['billing.enable']\">\r\n                    <div class=\"setting-toggle-container\">\r\n                        <mat-slide-toggle name=\"billing.paypal.enable\" id=\"billing.paypal.enable\" [(ngModel)]=\"state.client['billing.paypal.enable']\" trans>Paypal Gateway</mat-slide-toggle>\r\n                        <p trans>Enable PayPal payment gateway.</p>\r\n                    </div>\r\n\r\n                    <div class=\"error-group many-inputs\" id=\"paypal_group\" *ngIf=\"state.client['billing.paypal.enable']\" [class.has-error]=\"errors.paypal_group\">\r\n                        <div class=\"input-container\">\r\n                            <label for=\"billing.paypal.id\" trans>Paypal Client ID</label>\r\n                            <input name=\"billing.paypal.id\" id=\"billing.paypal.id\" [(ngModel)]=\"state.server['paypal_client_id']\" required>\r\n                        </div>\r\n\r\n                        <div class=\"input-container\">\r\n                            <label for=\"billing.paypal.secret\" trans>Paypal Secret</label>\r\n                            <input name=\"billing.paypal.secret\" id=\"billing.paypal.secret\" [(ngModel)]=\"state.server['paypal_secret']\" required>\r\n                        </div>\r\n\r\n                        <div class=\"input-container\">\r\n                            <label for=\"billing.paypal.webhook_id\" trans>Paypal Webhook ID</label>\r\n                            <input name=\"billing.paypal.webhook_id\" id=\"billing.paypal.webhook_id\" [(ngModel)]=\"state.server['paypal_webhook_id']\" required>\r\n                        </div>\r\n\r\n                        <div class=\"setting-toggle-container\">\r\n                            <mat-slide-toggle name=\"billing.paypal.test_mode\" id=\"billing.paypal.test_mode\" [(ngModel)]=\"state.client['billing.paypal_test_mode']\" trans>Paypal Test Mode</mat-slide-toggle>\r\n                            <p trans>Allows testing PayPal payments with sandbox accounts.</p>\r\n                        </div>\r\n\r\n                        <p class=\"error\" *ngIf=\"errors.paypal_group\" [innerHTML]=\"errors.paypal_group\"></p>\r\n                    </div>\r\n\r\n                    <div class=\"setting-toggle-container\">\r\n                        <mat-slide-toggle name=\"billing.enable.stripe\" id=\"billing.enable.stripe\" [(ngModel)]=\"state.client['billing.stripe.enable']\" trans>Stripe Gateway</mat-slide-toggle>\r\n                        <p trans>Enable Stripe payment gateway.</p>\r\n                    </div>\r\n\r\n                    <div class=\"error-group many-inputs\" id=\"stripe_group\" *ngIf=\"state.client['billing.stripe.enable']\" [class.has-error]=\"errors.stripe_group\">\r\n                        <div class=\"input-container\">\r\n                            <label for=\"stripe_key\" trans>Stripe Client ID</label>\r\n                            <input name=\"billing.stripe.id\" id=\"stripe_key\" [(ngModel)]=\"state.server['stripe_key']\" required>\r\n                        </div>\r\n\r\n                        <div class=\"input-container\" [class.has-error]=\"errors.stripe_secret\">\r\n                            <label for=\"stripe_secret\" trans>Stripe Secret</label>\r\n                            <input name=\"billing.stripe.secret\" id=\"stripe_secret\" [(ngModel)]=\"state.server['stripe_secret']\" required>\r\n                            <div class=\"error\" *ngIf=\"errors.stripe_secret\">{{errors.stripe_secret}}</div>\r\n                        </div>\r\n\r\n                        <p class=\"error\" *ngIf=\"errors.stripe_group\" [innerHTML]=\"errors.stripe_group\"></p>\r\n                    </div>\r\n\r\n                    <div class=\"input-container\">\r\n                        <label for=\"accepted-cards\" trans>Accepted Cards</label>\r\n                        <chip-input\r\n                                id=\"accepted-cards\"\r\n                                name=\"accepted-cards\"\r\n                                [(ngModel)]=\"acceptedCards\"\r\n                                placeholder=\"+New Card...\"\r\n                                trans-placeholder\r\n                        ></chip-input>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab [label]=\"'Invoices' | trans\">\r\n            <div class=\"many-inputs tab-content\">\r\n                <div class=\"input-container\">\r\n                    <label for=\"billing.invoice.address\" trans>Invoice Address</label>\r\n                    <textarea name=\"billing.invoice.address\" id=\"billing.invoice.address\" [(ngModel)]=\"state.client['billing.invoice.address']\" rows=\"5\"></textarea>\r\n                    <p trans>Address to show under \"from\" section of user invoice. Supports HTML. Optional.</p>\r\n                </div>\r\n\r\n                <div class=\"input-container\">\r\n                    <label for=\"billing.invoice.notes\" trans>Invoice Note</label>\r\n                    <textarea name=\"billing.invoice.notes\" id=\"billing.invoice.notes\" [(ngModel)]=\"state.client['billing.invoice.notes']\" rows=\"5\"></textarea>\r\n                    <p trans>Default notes to show under \"notes\" section of user invoice. Optional.</p>\r\n                </div>\r\n            </div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n\r\n    <button mat-raised-button color=\"accent\" class=\"button primary update-button\" type=\"submit\" [disabled]=\"loading$ | async\" trans>Update</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {SettingsPanelComponent} from '../settings-panel.component';\r\n\r\n@Component({\r\n    selector: 'billing-settings',\r\n    templateUrl: './billing-settings.component.html',\r\n    styleUrls: ['./billing-settings.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {'class': 'settings-panel'},\r\n})\r\nexport class BillingSettingsComponent extends SettingsPanelComponent implements OnInit {\r\n    public acceptedCards: string[] = [];\r\n\r\n    ngOnInit() {\r\n        this.acceptedCards = this.settings.getJson('billing.accepted_cards', []);\r\n    }\r\n\r\n    public saveSettings() {\r\n        const settings = this.state.getModified();\r\n        settings.client['billing.accepted_cards'] = JSON.stringify(this.acceptedCards);\r\n        super.saveSettings(settings);\r\n    }\r\n}\r\n","<label for=\"space-input-{{id}}\" *ngIf=\"label\" trans>{{label}}</label>\r\n<div class=\"wrapper\">\r\n    <input type=\"number\" min=\"0\" id=\"space-input-{{id}}\" [formControl]=\"form.get('amount')\" placeholder=\"Optional...\" trans-placeholder>\r\n    <select [formControl]=\"form.get('unit')\">\r\n        <option [ngValue]=\"unit\" *ngFor=\"let unit of spaceUnits\" trans>{{unit}}</option>\r\n    </select>\r\n</div>\r\n<ng-content select=\".description\"></ng-content>\r\n<ng-content select=\".error\"></ng-content>","import {ChangeDetectionStrategy, Component, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {randomString} from '../../utils/random-string';\r\nimport {spaceUnits} from '../../utils/space-units';\r\nimport {ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {map} from 'rxjs/operators';\r\nimport {convertToBytes} from '../../utils/convertToBytes';\r\nimport {prettyBytes} from '../../utils/pretty-bytes';\r\n\r\n@Component({\r\n    selector: 'space-input',\r\n    templateUrl: './space-input.component.html',\r\n    styleUrls: ['./space-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: SpaceInputComponent,\r\n        multi: true,\r\n    }]\r\n})\r\nexport class SpaceInputComponent implements ControlValueAccessor, OnInit {\r\n    @HostBinding('class.input-container') inputContainer = true;\r\n    @Input() label: string;\r\n    @Input() name: string;\r\n\r\n    public id = randomString();\r\n    public spaceUnits = spaceUnits;\r\n    public form = new FormGroup({\r\n        unit: new FormControl('MB'),\r\n        amount: new FormControl(null)\r\n    });\r\n\r\n    public propagateChange: Function;\r\n\r\n    ngOnInit() {\r\n        this.form.valueChanges\r\n            .pipe(map(model => convertToBytes(model.amount, model.unit)))\r\n            .subscribe(value => this.propagateChange(value));\r\n    }\r\n\r\n    public writeValue(value: number) {\r\n        this.form.setValue(this.fromBytes(value), {emitEvent: false});\r\n    }\r\n\r\n    public registerOnChange(fn: Function) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    public registerOnTouched() {}\r\n\r\n    private fromBytes(bytes: number) {\r\n        const pretty = prettyBytes(bytes);\r\n        if ( ! pretty) return {amount: null, unit: 'MB'};\r\n        return {amount: pretty.split(' ')[0], unit: pretty.split(' ')[1]};\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SettingsState} from '../../../settings-state.service';\r\n\r\n@Component({\r\n    selector: 'ftp-form',\r\n    templateUrl: './ftp-form.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FtpFormComponent {\r\n    constructor(public state: SettingsState) {}\r\n}\r\n","<div class=\"input-container\">\r\n    <label for=\"storage_ftp_host\" trans>FTP Hostname</label>\r\n    <input type=\"text\" id=\"storage_ftp_host\" name=\"storage_ftp_host\" [(ngModel)]=\"state.server['storage_ftp_host']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_ftp_username\" trans>FTP Username</label>\r\n    <input type=\"text\" id=\"storage_ftp_username\" name=\"storage_ftp_username\" [(ngModel)]=\"state.server['storage_ftp_username']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_ftp_password\" trans>FTP Password</label>\r\n    <input type=\"password\" id=\"storage_ftp_password\" name=\"storage_ftp_password\" [(ngModel)]=\"state.server['storage_ftp_password']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_ftp_root\" trans>FTP Directory</label>\r\n    <input type=\"text\" id=\"storage_ftp_root\" name=\"storage_ftp_root\" [(ngModel)]=\"state.server['storage_ftp_root']\" placeholder=\"/\">\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_ftp_port\" trans>FTP Port</label>\r\n    <input type=\"number\" id=\"storage_ftp_port\" name=\"storage_ftp_port\" [(ngModel)]=\"state.server['storage_ftp_port']\" min=\"0\" placeholder=\"21\">\r\n</div>\r\n\r\n<div class=\"setting-toggle-container\">\r\n    <mat-slide-toggle name=\"storage_ftp_passive\" id=\"storage_ftp_passive\" [(ngModel)]=\"state.server['storage_ftp_passive']\" trans>Passive</mat-slide-toggle>\r\n</div>\r\n\r\n<div class=\"setting-toggle-container\">\r\n    <mat-slide-toggle name=\"storage_ftp_ssl\" id=\"storage_ftp_ssl\" [(ngModel)]=\"state.server['storage_ftp_ssl']\" trans>SSL</mat-slide-toggle>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SettingsState} from '../../../settings-state.service';\r\n\r\n@Component({\r\n    selector: 'dropbox-form',\r\n    templateUrl: './dropbox-form.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DropboxFormComponent {\r\n    constructor(public state: SettingsState) {}\r\n}\r\n","<div class=\"input-container\">\r\n    <label for=\"storage_dropbox_access_token\" trans>Access Token</label>\r\n    <input type=\"text\" id=\"storage_dropbox_access_token\" name=\"storage_dropbox_access_token\" [(ngModel)]=\"state.server['storage_dropbox_access_token']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_dropbox_root\" trans>Root Directory</label>\r\n    <input type=\"text\" id=\"storage_dropbox_root\" name=\"storage_dropbox_root\" [(ngModel)]=\"state.server['storage_dropbox_root']\" placeholder=\"/\">\r\n</div>\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SettingsState} from '../../../settings-state.service';\r\n\r\n@Component({\r\n    selector: 'rackspace-form',\r\n    templateUrl: './rackspace-form.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RackspaceFormComponent {\r\n    constructor(public state: SettingsState) {}\r\n}\r\n","<div class=\"input-container\">\r\n    <label for=\"storage_rackspace_username\" trans>Rackspace Username</label>\r\n    <input type=\"text\" id=\"storage_rackspace_username\" name=\"storage_rackspace_username\" [(ngModel)]=\"state.server['storage_rackspace_username']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_rackspace_key\" trans>Rackspace Key</label>\r\n    <input type=\"text\" id=\"storage_rackspace_key\" name=\"storage_rackspace_key\" [(ngModel)]=\"state.server['storage_rackspace_key']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_rackspace_region\" trans>Rackspace Region</label>\r\n    <input type=\"text\" id=\"storage_rackspace_region\" name=\"storage_rackspace_region\" [(ngModel)]=\"state.server['storage_rackspace_region']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_rackspace_container\" trans>Rackspace Container</label>\r\n    <input type=\"text\" id=\"storage_rackspace_container\" name=\"storage_rackspace_container\" [(ngModel)]=\"state.server['storage_rackspace_container']\" required>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SettingsState} from '../../../settings-state.service';\r\n\r\n@Component({\r\n    selector: 's3-form',\r\n    templateUrl: './s3-form.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class S3FormComponent {\r\n    constructor(public state: SettingsState) {}\r\n}\r\n","<div class=\"input-container\">\r\n    <label for=\"storage_s3_key\" trans>Amazon S3 Key</label>\r\n    <input type=\"text\" id=\"storage_s3_key\" name=\"storage_s3_key\" [(ngModel)]=\"state.server['storage_s3_key']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_s3_secret\" trans>Amazon S3 Secret</label>\r\n    <input type=\"text\" id=\"storage_s3_secret\" name=\"storage_s3_secret\" [(ngModel)]=\"state.server['storage_s3_secret']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_s3_region\" trans>Amazon S3 Region</label>\r\n    <input type=\"text\" id=\"storage_s3_region\" pattern=\"[a-z1-9\\-]+\" placeholder=\"us-east-1\" name=\"storage_s3_region\" [(ngModel)]=\"state.server['storage_s3_region']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_s3_bucket\" trans>Amazon S3 Bucket</label>\r\n    <input type=\"text\" id=\"storage_s3_bucket\" name=\"storage_s3_bucket\" [(ngModel)]=\"state.server['storage_s3_bucket']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_s3_endpoint\" trans>Amazon S3 Endpoint</label>\r\n    <input type=\"url\" id=\"storage_s3_endpoint\" name=\"storage_s3_endpoint\" [placeholder]=\"'Optional' | trans\" [(ngModel)]=\"state.server['storage_s3_endpoint']\">\r\n    <p trans>Only change endpoint if you are using another S3 compatible storage service.</p>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SettingsState} from '../../../settings-state.service';\r\n\r\n@Component({\r\n    selector: 'digitalocean-form',\r\n    templateUrl: './digitalocean-form.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DigitaloceanFormComponent {\r\n    constructor(public state: SettingsState) {}\r\n}\r\n","<div class=\"input-container\">\r\n    <label for=\"storage_digitalocean_key\" trans>DigitalOcean Key</label>\r\n    <input type=\"text\" id=\"storage_digitalocean_key\" name=\"storage_digitalocean_key\" [(ngModel)]=\"state.server['storage_digitalocean_key']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_digitalocean_secret\" trans>DigitalOcean Secret</label>\r\n    <input type=\"text\" id=\"storage_digitalocean_secret\" name=\"storage_digitalocean_secret\" [(ngModel)]=\"state.server['storage_digitalocean_secret']\" required>\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_digitalocean_region\" trans>DigitalOcean Region</label>\r\n    <input type=\"text\" id=\"storage_digitalocean_region\" name=\"storage_digitalocean_region\" [(ngModel)]=\"state.server['storage_digitalocean_region']\" required pattern=\"[a-z0-9]+\" maxlength=\"5\">\r\n</div>\r\n\r\n<div class=\"input-container\">\r\n    <label for=\"storage_digitalocean_bucket\" trans>DigitalOcean Bucket</label>\r\n    <input type=\"text\" id=\"storage_digitalocean_bucket\" name=\"storage_digitalocean_bucket\" [(ngModel)]=\"state.server['storage_digitalocean_bucket']\" required>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SettingsState} from '../../../settings-state.service';\n\n@Component({\n    selector: 'backblaze-form',\n    templateUrl: './backblaze-form.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BackblazeFormComponent {\n    constructor(public state: SettingsState) {}\n}\n","<div class=\"input-container\">\n    <label for=\"storage_backblaze_application_key\" trans>Backblaze Application Key (Master)</label>\n    <input type=\"text\" id=\"storage_backblaze_application_key\" name=\"storage_backblaze_application_key\" [(ngModel)]=\"state.server['storage_backblaze_application_key']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_backblaze_account_id\" trans>Backblaze Application Key ID (Master)</label>\n    <input type=\"text\" id=\"storage_backblaze_account_id\" name=\"storage_backblaze_account_id\" [(ngModel)]=\"state.server['storage_backblaze_account_id']\" required>\n</div>\n\n<div class=\"input-container\">\n    <label for=\"storage_backblaze_bucket\" trans>Backblaze Bucket Name</label>\n    <input type=\"text\" id=\"storage_backblaze_bucket\" name=\"storage_backblaze_bucket\" [(ngModel)]=\"state.server['storage_backblaze_bucket']\" required>\n</div>\n","<div class=\"header\">\r\n    <div class=\"title\" trans>User Uploads</div>\r\n    <div class=\"subtitle\" trans>Configure size and type of files that users are able to upload. This will affect all uploads across the site.</div>\r\n</div>\r\n\r\n<form class=\"body many-inputs\" (ngSubmit)=\"saveSettings()\" ngNativeValidate *ngIf=\"errors$ | async as errors\">\r\n    <div class=\"input-container\" *ngIf=\"state.server.uploads_disk_driver\">\r\n        <label for=\"uploads_disk_driver\" trans>User Uploads Storage Method</label>\r\n        <select name=\"uploads_disk_driver\" id=\"uploads_disk_driver\" [(ngModel)]=\"state.server.uploads_disk_driver\" (ngModelChange)=\"clearErrors()\">\r\n            <option value=\"local\" trans>Local Disk (Default)</option>\r\n            <option value=\"s3\">Amazon S3</option>\r\n            <option value=\"ftp\">FTP</option>\r\n            <option value=\"digitalocean\">DigitalOcean</option>\r\n            <option value=\"backblaze\">Backblaze</option>\r\n            <option value=\"dropbox\">Dropbox</option>\r\n            <option value=\"rackspace\">Rackspace</option>\r\n        </select>\r\n        <p trans>{{settings.get('vebto.translations.uploads_disk_driver_description')}}</p>\r\n    </div>\r\n\r\n    <div class=\"input-container\" *ngIf=\"state.server.public_disk_driver\">\r\n        <label for=\"public_disk_driver\" trans>Public Uploads Storage Method</label>\r\n        <select name=\"public_disk_driver\" id=\"public_disk_driver\" [(ngModel)]=\"state.server.public_disk_driver\" (ngModelChange)=\"clearErrors()\">\r\n            <option value=\"local\" trans>Local Disk (Default)</option>\r\n            <option value=\"s3\">Amazon S3</option>\r\n            <option value=\"digitalocean\">DigitalOcean</option>\r\n            <option value=\"backblaze\">Backblaze</option>\r\n        </select>\r\n        <p trans>{{settings.get('vebto.translations.public_disk_driver_description')}}</p>\r\n    </div>\r\n\r\n    <div class=\"error-group storage-credentials-group\" id=\"storage_group\" [class.hidden]=\"allSelectedDriversAreLocal()\" [class.has-error]=\"errors.storage_group\">\r\n        <ftp-form class=\"many-inputs credentials-form\" *ngIf=\"driverSelected('ftp')\"></ftp-form>\r\n        <dropbox-form class=\"many-inputs credentials-form\" *ngIf=\"driverSelected('dropbox')\"></dropbox-form>\r\n        <rackspace-form class=\"many-inputs credentials-form\" *ngIf=\"driverSelected('rackspace')\"></rackspace-form>\r\n        <s3-form class=\"many-inputs credentials-form\" *ngIf=\"driverSelected('s3')\"></s3-form>\r\n        <digitalocean-form class=\"many-inputs credentials-form\" *ngIf=\"driverSelected('digitalocean')\"></digitalocean-form>\r\n        <backblaze-form class=\"many-inputs credentials-form\" *ngIf=\"driverSelected('backblaze')\"></backblaze-form>\r\n        <p class=\"error\" *ngIf=\"errors.storage_group\" [innerHTML]=\"errors.storage_group\"></p>\r\n    </div>\r\n\r\n    <div class=\"input-container\" *ngIf=\"driverSelected('local')\">\r\n        <label for=\"static_file_delivery\" trans>File Delivery Optimization</label>\r\n        <select name=\"static_file_delivery\" id=\"static_file_delivery\" [(ngModel)]=\"state.server['static_file_delivery']\">\r\n            <option [ngValue]=\"null\" trans>None</option>\r\n            <option value=\"xsendfile\">X-Sendfile (Apache)</option>\r\n            <option value=\"xaccel\">X-Accel (Nginx)</option>\r\n        </select>\r\n        <p trans>Both X-Sendfile and X-Accel need to be enabled on the server first. When enabled it will reduce server memory and CPU usage when previewing or downloading files, especially for large files. </p>\r\n    </div>\r\n\r\n    <div class=\"error-group\">\r\n        <div class=\"setting-toggle-container\">\r\n            <mat-slide-toggle name=\"uploads.chunk\" id=\"uploads.chunk\" [(ngModel)]=\"state.client['uploads.chunk']\" trans>Chunked Uploads</mat-slide-toggle>\r\n            <p trans>When enabled larger files will be uploaded in smaller chunks to improve upload reliability and avoid server max upload size limits.</p>\r\n        </div>\r\n\r\n        <div class=\"input-container\" *ngIf=\"state.client['uploads.chunk']\">\r\n            <label for=\"uploads.max_size\" trans>Chunk Size</label>\r\n            <space-input name=\"uploads.chunk_size\" id=\"uploads.chunk_size\" [(ngModel)]=\"state.client['uploads.chunk_size']\"></space-input>\r\n            <p trans>Size for each file chunk. Should be equal to or lower then max upload file size on your server.</p>\r\n        </div>\r\n\r\n        <div class=\"widget widget-important\">\r\n            <div class=\"title\" trans>Important</div>\r\n            <p>{{ 'Maximum upload size on your server currently is set to' | trans }} <strong>{{serverMaxUploadSize$ | async}}</strong>.</p>\r\n        </div>\r\n\r\n        <div class=\"setting-toggle-container\" *ngIf=\"state.client['uploads.chunk']\">\r\n            <mat-slide-toggle name=\"uploads.resume\" id=\"uploads.resume\" [(ngModel)]=\"state.client['uploads.resume']\" trans>Resumable Uploads</mat-slide-toggle>\r\n            <p trans>Allow users to resume partial or failed uploads.</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"uploads.max_size\" trans>Maximum file size</label>\r\n        <space-input name=\"uploads.max_size\" id=\"uploads.max_size\"  [(ngModel)]=\"state.client['uploads.max_size']\"></space-input>\r\n        <p trans>Maximum size for a single file user can upload.</p>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"uploads.available_space\" trans>Available Space</label>\r\n        <space-input name=\"uploads.available_space\" id=\"uploads.available_space\" [(ngModel)]=\"state.client['uploads.available_space']\"></space-input>\r\n        <p trans>Disk space each user uploads are allowed to take up. This can be overridden per user.</p>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"allowed_extensions\" trans>Allowed file types</label>\r\n        <chip-input\r\n            id=\"allowed_extensions\"\r\n            name=\"allowed_extensions\"\r\n            placeholder=\"All types allowed...\"\r\n            [(ngModel)]=\"allowedExtensions\"\r\n        ></chip-input>\r\n        <p trans>List of allowed file types (jpg, mp3, pdf etc.). Leave empty to allow all file types.</p>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"blocked_extensions\" trans>Blocked file types</label>\r\n        <chip-input\r\n            id=\"blocked_extensions\"\r\n            name=\"blocked_extensions\"\r\n            placeholder=\"No types blocked...\"\r\n            [(ngModel)]=\"blockedExtensions\"\r\n        ></chip-input>\r\n        <p trans>Prevent uploading of these file types, even if they are allowed above.</p>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" class=\"update-button\" type=\"submit\" [disabled]=\"loading$ | async\" trans>Update</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { SettingsPanelComponent } from '../settings-panel.component';\r\nimport { GenericBackendResponse } from '@common/core/types/backend-response';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'uploading-settings',\r\n    templateUrl: './uploading-settings.component.html',\r\n    styleUrls: ['./uploading-settings.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {'class': 'settings-panel'},\r\n})\r\nexport class UploadingSettingsComponent extends SettingsPanelComponent implements OnInit {\r\n    public allowedExtensions: string[] = [];\r\n    public blockedExtensions: string[] = [];\r\n    public serverMaxUploadSize$ = new Subject<string>();\r\n\r\n    ngOnInit() {\r\n        this.allowedExtensions = this.settings.getJson('uploads.allowed_extensions', []);\r\n        this.blockedExtensions = this.settings.getJson('uploads.blocked_extensions', []);\r\n        this.getServerMaxUploadSize();\r\n    }\r\n\r\n    public saveSettings() {\r\n        this.setJson('uploads.allowed_extensions', this.allowedExtensions);\r\n        this.setJson('uploads.blocked_extensions', this.blockedExtensions);\r\n        super.saveSettings();\r\n    }\r\n\r\n    public driverSelected(name: string): boolean {\r\n        return [this.state.server.uploads_disk_driver, this.state.server.public_disk_driver]\r\n            .includes(name);\r\n    }\r\n\r\n    public allSelectedDriversAreLocal() {\r\n        return [this.state.server.uploads_disk_driver, this.state.server.public_disk_driver]\r\n            .every(d => !d || d === 'local');\r\n    }\r\n\r\n    private getServerMaxUploadSize() {\r\n        this.http.get<GenericBackendResponse<{maxSize: string}>>('uploads/server-max-file-size').subscribe(response => {\r\n            this.serverMaxUploadSize$.next(response.maxSize);\r\n        });\r\n    }\r\n}\r\n","/**\r\n * Flatten specified array of arrays.\r\n */\r\nexport function flattenArray<T>(arrays: T[][]): T[] {\r\n    return [].concat.apply([], arrays);\r\n}\r\n","<div class=\"header\">\r\n    <div class=\"title\" trans>Recaptcha</div>\r\n    <div class=\"subtitle\" trans>Configure google recaptcha integration and credentials.</div>\r\n</div>\r\n\r\n<form class=\"body many-inputs\" (submit)=\"saveSettings()\" ngNativeValidate *ngIf=\"errors$ | async as errors\">\r\n\r\n    <div class=\"setting-toggle-container\" *ngFor=\"let action of actions\">\r\n        <mat-slide-toggle [name]=\"action.key\" [id]=\"action.key\" [(ngModel)]=\"state.client[action.key]\">{{action.name | trans}}</mat-slide-toggle>\r\n        <p>{{action.description | trans}}</p>\r\n    </div>\r\n\r\n    <div class=\"error-group many-inputs no-spacing\" id=\"recaptcha-group\" [class.has-error]=\"errors.recaptcha_group\">\r\n        <div class=\"input-container\" [class.has-error]=\"errors['recaptcha.site_key']\">\r\n            <label for=\"recaptcha.site_key\" trans>Recaptcha V3 Site Key</label>\r\n            <input name=\"recaptcha.site_key\" id=\"recaptcha.site_key\" [(ngModel)]=\"state.client['recaptcha.site_key']\">\r\n            <p class=\"error\" *ngIf=\"errors['recaptcha.site_key']\">{{errors['recaptcha.site_key']}}</p>\r\n        </div>\r\n\r\n        <div class=\"input-container\" [class.has-error]=\"errors['recaptcha.secret_key']\">\r\n            <label for=\"recaptcha.secret_key\" trans>Recaptcha V3 Secret Key</label>\r\n            <input name=\"recaptcha.secret_key\" id=\"recaptcha.secret_key\" [(ngModel)]=\"state.client['recaptcha.secret_key']\">\r\n            <p class=\"error\" *ngIf=\"errors['recaptcha.secret_key']\">{{errors['recaptcha.secret_key']}}</p>\r\n        </div>\r\n\r\n        <p class=\"error\" *ngIf=\"errors.recaptcha_group\" [innerHTML]=\"errors.recaptcha_group\"></p>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" class=\"button primary update-button\" [disabled]=\"loading$ | async\" type=\"submit\" trans>Update</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject} from '@angular/core';\r\nimport {SettingsPanelComponent} from '../settings-panel.component';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ArtisanService} from '@common/admin/artisan.service';\r\nimport {CustomHomepage} from '@common/core/pages/shared/custom-homepage.service';\r\nimport {ValueLists} from '@common/core/services/value-lists.service';\r\nimport {SettingsState} from '@common/admin/settings/settings-state.service';\r\nimport {RECAPTCHA_ACTIONS} from '@common/admin/settings/recaptcha/recaptcha-actions.token';\r\nimport {RecaptchaAction} from '@common/admin/settings/recaptcha/recaptcha-action';\r\nimport {flattenArray} from '@common/core/utils/flatten-array';\r\n\r\n@Component({\r\n    selector: 'recaptcha-settings',\r\n    templateUrl: './recaptcha-settings.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {'class': 'settings-panel'},\r\n})\r\nexport class RecaptchaSettingsComponent extends SettingsPanelComponent {\r\n    public readonly actions: RecaptchaAction[];\r\n    constructor(\r\n        public settings: Settings,\r\n        protected toast: Toast,\r\n        protected http: AppHttpClient,\r\n        protected modal: Modal,\r\n        protected route: ActivatedRoute,\r\n        protected artisan: ArtisanService,\r\n        protected customHomepage: CustomHomepage,\r\n        protected valueLists: ValueLists,\r\n        protected cd: ChangeDetectorRef,\r\n        public state: SettingsState,\r\n        @Inject(RECAPTCHA_ACTIONS) private recaptchaActions: RecaptchaAction[][],\r\n    ) {\r\n        super(settings, toast, http, modal, route, artisan, customHomepage, valueLists, cd, state);\r\n        this.actions = flattenArray(this.recaptchaActions).reverse();\r\n    }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadInputConfig } from '../upload-input-config';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\n\r\n@Directive({\r\n    selector: '[uploadButton]'\r\n})\r\nexport class UploadButtonDirective implements OnInit {\r\n    @Input('uploadButton') config: UploadInputConfig = {};\r\n    @Output() filesSelected = new EventEmitter<UploadedFile[]>();\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            openUploadWindow(this.config).then(files => {\r\n                if (files && files.length) {\r\n                    this.filesSelected.emit(files);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends OuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, OnDestroy } from '@angular/core';\r\nimport { UploadQueueService } from '../upload-queue/upload-queue.service';\r\nimport { animationFrameScheduler, Subscription } from 'rxjs';\r\nimport { throttleTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'upload-progress-bar',\r\n    templateUrl: './upload-progress-bar.component.html',\r\n    styleUrls: ['./upload-progress-bar.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadProgressBarComponent implements OnDestroy {\r\n    @HostBinding('class.hidden') hidden = true;\r\n    private subscription: Subscription;\r\n    public progress: number;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        public uploadQueue: UploadQueueService,\r\n        private cd: ChangeDetectorRef,\r\n    ) {\r\n        this.subscription = this.uploadQueue.totalProgress()\r\n            // material progress bar animation lasts 250ms\r\n            .pipe(throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}))\r\n            .subscribe(progress => {\r\n                this.progress = progress;\r\n                this.hidden = progress === 100 || this.uploadQueue.count$.value.pending === 0;\r\n                this.cd.markForCheck();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}\r\n\r\n","<mat-progress-bar mode=\"determinate\" [value]=\"progress\" color=\"accent\"></mat-progress-bar>\r\n","<image-or-icon *ngIf=\"src$ | async as src; else defaultBg\" [src]=\"src\" class=\"inherit-size\"></image-or-icon>\r\n<ng-template #defaultBg>\r\n    <image-or-icon *ngIf=\"defaultBackground\" [src]=\"defaultBackground\" class=\"inherit-size\"></image-or-icon>\r\n</ng-template>\r\n<div class=\"action-buttons\">\r\n    <button type=\"button\" class=\"action-button\" mat-stroked-button color=\"accent\" [uploadButton]=\"uploadInputConfig\" (filesSelected)=\"uploadImage($event)\" trans>{{buttonText}}</button>\r\n    <button type=\"button\" class=\"action-button delete-button\" mat-icon-button *ngIf=\"src$ | async\" (click)=\"deleteUpload()\">\r\n        <mat-icon svgIcon=\"delete\"></mat-icon>\r\n    </button>\r\n</div>\r\n<upload-progress-bar></upload-progress-bar>","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\nimport {UploadInputConfig, UploadInputTypes} from '@common/uploads/upload-input-config';\nimport {AppearanceImageUploadValidator} from '@common/admin/appearance/appearance-image-input/appearance-image-upload-validator';\nimport {UploadUri} from '@common/uploads/types/upload-uri.enum';\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\nimport {UploadsApiService} from '@common/uploads/uploads-api.service';\n\n@Component({\n    selector: 'upload-image-control',\n    templateUrl: './upload-image-control.component.html',\n    styleUrls: ['./upload-image-control.component.scss'],\n    providers: [UploadQueueService, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: UploadImageControlComponent,\n        multi: true,\n    }]\n})\nexport class UploadImageControlComponent implements ControlValueAccessor {\n    @Output() fileDeleted = new EventEmitter();\n    @Input() defaultBackground: string;\n    @Input() buttonText = 'Upload image';\n    @Input() uploadConfig: UploadApiConfig;\n    @Input() diskPrefix: string;\n    public uploadInputConfig: UploadInputConfig = {multiple: false, types: [UploadInputTypes.image]};\n    public src$ = new BehaviorSubject<string>(null);\n    private propagateChange: Function;\n\n    constructor(\n        private uploadQueue: UploadQueueService,\n        private imageValidator: AppearanceImageUploadValidator,\n        private uploadsApi: UploadsApiService,\n    ) {}\n\n    public writeValue(value: string) {\n        this.src$.next(value);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    public uploadImage(files: UploadedFile[]) {\n        this.uploadQueue.start(files, this.uploadConfig || this.defaultUploadConfig())\n            .subscribe(response => {\n                this.src$.next(response.fileEntry.url);\n                this.propagateChange(response.fileEntry.url);\n            });\n    }\n\n    public deleteUpload() {\n        this.uploadsApi.delete({paths: [this.src$.value], deleteForever: true})\n            .subscribe(() => {\n                this.src$.next(null);\n                this.propagateChange(null);\n                this.fileDeleted.emit();\n            });\n    }\n\n    private defaultUploadConfig(): UploadApiConfig {\n        return {\n            httpParams: {diskPrefix: this.diskPrefix || 'common_media'},\n            uri: UploadUri.Image,\n            validator: this.imageValidator,\n        };\n    }\n}\n","export class SelectionModel<T> {\r\n    private readonly selected = [];\r\n\r\n    constructor(initialValues: T[], private readonly key: string|'id') {\r\n        this.selected = [...initialValues];\r\n        this.key = key || 'id';\r\n    }\r\n\r\n    public isSelected(item: T): boolean {\r\n        return this.findIndex(item) > -1;\r\n    }\r\n\r\n    public toggle(item: T) {\r\n        const i = this.findIndex(item);\r\n        if (i > -1) {\r\n            this.selected.splice(i, 1);\r\n        } else {\r\n            this.selected.push({...item});\r\n        }\r\n    }\r\n\r\n    public updateValue(newValue: T) {\r\n        const i = this.findIndex(newValue);\r\n        this.selected[i] = {...newValue};\r\n    }\r\n\r\n    public getValue(key: number|string): T {\r\n        return this.selected.find(item => item[this.key] === key);\r\n    }\r\n\r\n    public values(): T[] {\r\n        return [...this.selected];\r\n    }\r\n\r\n    private findIndex(item: T): number {\r\n        return this.selected.findIndex(p => p[this.key] === item[this.key]);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpCacheClient} from '../../core/http/http-cache-client';\r\nimport {Observable} from 'rxjs';\r\nimport {Role} from '../../core/types/models/Role';\r\nimport {PaginatedBackendResponse} from '../../core/types/pagination/paginated-backend-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class RoleService {\r\n    constructor(private httpClient: HttpCacheClient) {}\r\n\r\n    public getRoles(): PaginatedBackendResponse<Role> {\r\n        return this.httpClient.getWithCache('roles?per_page=15');\r\n    }\r\n\r\n    public createNew(data): Observable<Role> {\r\n        return this.httpClient.post('roles', data);\r\n    }\r\n\r\n    public update(roleId, data): Observable<Role> {\r\n        return this.httpClient.put('roles/' + roleId, data);\r\n    }\r\n\r\n    public delete(roleId: number): Observable<any> {\r\n        return this.httpClient.delete('roles/' + roleId);\r\n    }\r\n\r\n    public addUsers(roleId: number, emails: string[]): Observable<Role> {\r\n        return this.httpClient.post('roles/' + roleId + '/add-users', {emails});\r\n    }\r\n\r\n    public removeUsers(roleId: number, userIds: number[]): Observable<Role> {\r\n        return this.httpClient.post('roles/' + roleId + '/remove-users', {ids: userIds});\r\n    }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title\" mat-dialog-title trans>Select Roles</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\"><mat-icon svgIcon=\"close\"></mat-icon></button>\r\n</div>\r\n\r\n<form (ngSubmit)=\"confirm()\" ngNativeValidate>\r\n    <mat-dialog-content>\r\n        <ul class=\"selection-list\">\r\n            <li class=\"list-item\" *ngFor=\"let role of allRoles$ | async\">\r\n                <div class=\"list-item-header\" (click)=\"selectionModel.toggle(role)\" matRipple>\r\n                    <div class=\"meta\">\r\n                        <div class=\"list-item-name\">{{role.name}}</div>\r\n                    </div>\r\n                    <mat-pseudo-checkbox [state]=\"selectionModel.isSelected(role) ? 'checked' : 'unchecked'\"></mat-pseudo-checkbox>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions class=\"buttons right mat-dialog-actions\">\r\n        <button (click)=\"close()\" mat-button type=\"button\" trans>Cancel</button>\r\n        <button type=\"submit\" mat-raised-button color=\"accent\" trans>Select</button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Role} from '@common/core/types/models/Role';\r\nimport {RoleService} from '@common/admin/roles/role.service';\r\nimport {SelectionModel} from '@common/core/utils/SelectionModel';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\nexport interface SelectRolesModalData {\r\n    initialRoles?: Role[];\r\n}\r\n\r\n@Component({\r\n    selector: 'select-roles-modal',\r\n    templateUrl: './select-roles-modal.component.html',\r\n    styleUrls: ['./select-roles-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SelectRolesModalComponent implements OnInit {\r\n    public allRoles$ = new BehaviorSubject<Role[]>([]);\r\n    public selectionModel = new SelectionModel(this.data.initialRoles || [], 'id');\r\n\r\n    constructor(\r\n        private rolesService: RoleService,\r\n        private dialogRef: MatDialogRef<SelectRolesModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: SelectRolesModalData,\r\n    ) {}\r\n\r\n    public ngOnInit() {\r\n        this.fetchAllRoles();\r\n    }\r\n\r\n    public confirm() {\r\n        this.close(this.selectionModel.values());\r\n    }\r\n\r\n    public close(data?) {\r\n        this.dialogRef.close(data);\r\n    }\r\n\r\n    private fetchAllRoles() {\r\n        this.rolesService.getRoles()\r\n            .subscribe(response => this.allRoles$.next(response.pagination.data));\r\n    }\r\n}\r\n","<div class=\"panel-outter\" *ngIf=\"currentUser.hasPermission('roles.update')\">\n    <div class=\"header\">\n        <div class=\"title\" trans>Roles</div>\n        <div class=\"add-button\" *ngIf=\"!readonly\">\n            <button mat-flat-button color=\"accent\" class=\"select-roles-modal-button\" (click)=\"openSelectRolesModal()\" type=\"button\" trans>Manage</button>\n        </div>\n    </div>\n    <div class=\"panel-body roles\">\n        <div class=\"no-permissions\" *ngIf=\"!(roles$ | async)?.length\" trans>No roles yet.</div>\n\n        <mat-chip-list [selectable]=\"false\">\n            <mat-chip (removed)=\"detachRole(role)\" [removable]=\"true\" *ngFor=\"let role of roles$ | async\" [disabled]=\"readonly\">\n                <span class=\"role-name\">{{role.name}}</span>\n                <mat-icon svgIcon=\"cancel\" matChipRemove></mat-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Role} from '@common/core/types/models/Role';\nimport {Users} from '@common/auth/users.service';\nimport {RoleService} from '@common/admin/roles/role.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {SelectRolesModalComponent} from '@common/admin/users/select-roles-modal/select-roles-modal.component';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\n\n@Component({\n    selector: 'role-manager',\n    templateUrl: './role-manager.component.html',\n    styleUrls: ['./role-manager.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: RoleManagerComponent,\n        multi: true,\n    }]\n})\nexport class RoleManagerComponent implements ControlValueAccessor {\n    public roles$ = new BehaviorSubject<Role[]>([]);\n    @Input() readonly = false;\n    private propagateChange: Function;\n\n    constructor(\n        public users: Users,\n        private roleApi: RoleService,\n        private modal: Modal,\n        public currentUser: CurrentUser,\n    ) {}\n\n    public openSelectRolesModal() {\n        this.modal.open(\n            SelectRolesModalComponent,\n            {initialRoles: this.roles$.value},\n            'select-roles-modal-container'\n        ).afterClosed().subscribe((roles: Role[]) => {\n            if ( ! roles) return;\n            this.setRoles(roles);\n        });\n    }\n\n    public setRoles(roles: Role[]) {\n        this.roles$.next(roles);\n        this.propagateChange(this.roles$.value);\n    }\n\n    public detachRole(role: Role) {\n        const roles = this.roles$.value.filter(r => r.id !== role.id);\n        this.setRoles(roles);\n    }\n\n    public writeValue(value: Role[]) {\n        this.roles$.next(value);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n}\n","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title mat-dialog-title\" mat-dialog-title trans>Select Permissions</h2>\r\n    <button type=\"button\" tabindex=\"-1\" (click)=\"close()\" class=\"close-button no-style\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n    <mat-accordion>\r\n        <mat-expansion-panel class=\"mat-elevation-z2\" *ngFor=\"let pair of allPermissions$ | async | keyvalue\" [expanded]=\"false\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title trans>{{pair.key.replace('_', ' ')}}</mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n\r\n            <ul class=\"selection-list\">\r\n                <li class=\"list-item\" *ngFor=\"let permission of pair.value\">\r\n                    <div class=\"list-item-header\" (click)=\"selectionModel.toggle(permission)\" matRipple>\r\n                        <div class=\"meta\">\r\n                            <div class=\"list-item-name\" trans>{{permission.display_name || permission.name}}</div>\r\n                            <p *ngIf=\"permission.description\" class=\"list-item-description\">{{permission.description}}</p>\r\n                        </div>\r\n                        <mat-pseudo-checkbox\r\n                                [state]=\"selectionModel.isSelected(permission) ? 'checked' : 'unchecked'\"></mat-pseudo-checkbox>\r\n                    </div>\r\n                    <div class=\"list-item-restrictions\"\r\n                         *ngIf=\"permission.restrictions?.length && selectionModel.isSelected(permission)\">\r\n                        <ng-container *ngFor=\"let restriction of permission.restrictions\">\r\n                            <div class=\"input-container\" [ngSwitch]=\"restriction.type\">\r\n                                <label [for]=\"permission.name + '-' + restriction.name\">{{viewName(restriction.name)}}</label>\r\n                                <input type=\"number\" min=\"0\" [id]=\"permission.name + '-' + restriction.name\" *ngSwitchCase=\"'number'\" [(ngModel)]=\"restriction.value\">\r\n                                <p class=\"description\" *ngIf=\"restriction.description\" trans>{{restriction.description}}</p>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n\r\n        </mat-expansion-panel>\r\n    </mat-accordion>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <button (click)=\"close()\" mat-button type=\"button\" trans>Cancel</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" (click)=\"confirm()\" trans>Select</button>\r\n</mat-dialog-actions>\r\n\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay overlay-partial\"></loading-indicator>","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Permission} from '@common/core/types/models/permission';\r\nimport {ValueLists} from '@common/core/services/value-lists.service';\r\nimport {SelectionModel} from '@common/core/utils/SelectionModel';\r\nimport {groupBy} from '@common/core/utils/group-by';\r\nimport {flattenArray} from '@common/core/utils/flatten-array';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {finalize} from 'rxjs/operators';\r\n\r\nexport interface SelectPermissionsModalData {\r\n    initialPermissions: Permission[];\r\n}\r\n\r\n@Component({\r\n    selector: 'select-permissions-modal',\r\n    templateUrl: './select-permissions-modal.component.html',\r\n    styleUrls: ['./select-permissions-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SelectPermissionsModalComponent implements OnInit {\r\n    public allPermissions$ = new BehaviorSubject<{[key: string]: Permission[]}>({});\r\n    public loading$ = new BehaviorSubject(false);\r\n    public selectionModel = new SelectionModel(this.data.initialPermissions || [], 'name');\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<SelectPermissionsModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: SelectPermissionsModalData,\r\n        private values: ValueLists,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.fetchAllPermissions();\r\n    }\r\n\r\n    public confirm() {\r\n        this.close(this.getSelectedPermissions());\r\n    }\r\n\r\n    public close(permissions?: Permission[]) {\r\n        this.dialogRef.close(permissions);\r\n    }\r\n\r\n    private fetchAllPermissions() {\r\n        this.loading$.next(true);\r\n        this.values.get(['permissions'])\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.allPermissions$.next(groupBy<Permission>(this.mergeRestrictions(response.permissions), 'group'));\r\n            });\r\n    }\r\n\r\n    private getSelectedPermissions(): Permission[] {\r\n        const allPermissions = flattenArray(Object.values(this.allPermissions$.value));\r\n        return allPermissions.filter(permission => {\r\n            return this.selectionModel.isSelected(permission);\r\n        });\r\n    }\r\n\r\n    private mergeRestrictions(allPermissions: Permission[]) {\r\n        return allPermissions.map(permission => {\r\n            // merge restriction definition from \"allPermissions\" and value set for that\r\n            // restriction on pivot table so can bind ngModel to \"allRestrictions\" variable\r\n            const modelPermission = this.selectionModel.getValue(permission.name);\r\n            permission.restrictions = permission.restrictions.map(restriction => {\r\n                let modelRestriction = {};\r\n                if (modelPermission && modelPermission.restrictions) {\r\n                    modelRestriction = modelPermission.restrictions.find(r => r.name === restriction.name) || {};\r\n                }\r\n                return {...restriction, ...modelRestriction};\r\n            });\r\n            return permission;\r\n        });\r\n    }\r\n\r\n    public viewName(name: string) {\r\n        return name.replace(/_/g, ' ');\r\n    }\r\n}\r\n","export const groupBy = function<T>(array: object[], key: string): {[key: string]: T[]} {\r\n    return array.reduce(function(rv, x) {\r\n        (rv[x[key]] = rv[x[key]] || []).push(x);\r\n        return rv;\r\n    }, {}) as {[key: string]: T[]};\r\n};\r\n\r\n","<div class=\"header\">\r\n    <span class=\"title\" trans>Permissions</span>\r\n    <button mat-flat-button color=\"accent\" (click)=\"showSelectPermissionsModal()\" type=\"button\" trans>Manage</button>\r\n</div>\r\n<div class=\"manage-permissions\">\r\n    <div class=\"no-permissions\" *ngIf=\"!(permissions$ | async)?.length\" trans>No permissions yet.</div>\r\n\r\n    <mat-chip-list [selectable]=\"false\">\r\n        <mat-chip (removed)=\"removePermission(permission.name)\" [removable]=\"true\" *ngFor=\"let permission of permissions$ | async\">\r\n            <span>\r\n                {{permission.name}}\r\n                <ng-container *ngIf=\"getCountRestriction(permission) as restriction\">\r\n                    <span *ngIf=\"restriction.value\">({{restriction.value + ' ' + 'max' | trans}})</span>\r\n                </ng-container>\r\n            </span>\r\n            <mat-icon svgIcon=\"cancel\" matChipRemove></mat-icon>\r\n        </mat-chip>\r\n    </mat-chip-list>\r\n</div>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {SelectPermissionsModalComponent} from '@common/admin/permissions/select-permissions-modal/select-permissions-modal.component';\r\nimport {Permission, PermissionRestriction} from '@common/core/types/models/permission';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'permission-manager',\r\n    templateUrl: './permission-manager.component.html',\r\n    styleUrls: ['./permission-manager.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: PermissionManagerComponent,\r\n        multi: true,\r\n    }]\r\n})\r\nexport class PermissionManagerComponent implements ControlValueAccessor {\r\n    public permissions$ = new BehaviorSubject<Permission[]>([]);\r\n    private propagateChange: Function;\r\n\r\n    constructor(private modal: Modal) {}\r\n\r\n    public showSelectPermissionsModal() {\r\n        this.modal.open(\r\n            SelectPermissionsModalComponent,\r\n            {initialPermissions: this.permissions$.value},\r\n            {panelClass: 'select-permissions-modal-container'},\r\n        ).afterClosed()\r\n        .subscribe(permissions => {\r\n            if ( ! permissions) return;\r\n            this.setPermissions(permissions);\r\n        });\r\n    }\r\n\r\n    public removePermission(name: string) {\r\n        const permissions = this.permissions$.value.filter(p => p.name !== name);\r\n        this.setPermissions(permissions);\r\n    }\r\n\r\n    public setPermissions(permissions: Permission[]) {\r\n        this.permissions$.next(permissions);\r\n        this.propagateChange(this.permissions$.value);\r\n    }\r\n\r\n    public getCountRestriction(permission: Permission): PermissionRestriction {\r\n        return permission.restrictions.find(r => r.name === 'count');\r\n    }\r\n\r\n    public writeValue(value: Permission[]) {\r\n        this.permissions$.next(value);\r\n    }\r\n\r\n    public registerOnChange(fn: Function) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    public registerOnTouched() {}\r\n}\r\n","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"data.user\" trans>Update User Details</h2>\r\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"!data.user\" trans>Create a New User</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<form autocomplete=\"off\" (ngSubmit)=\"confirm()\" [formGroup]=\"form\" *ngIf=\"errors$ | async as errors\" ngNativeValidate>\r\n    <mat-dialog-content class=\"many-inputs\">\r\n        <div class=\"input-container\" *ngIf=\"!data.user\">\r\n            <label for=\"email\" trans>Email</label>\r\n            <input type=\"email\" id=\"email\" formControlName=\"email\" required>\r\n            <div class=\"error\" *ngIf=\"errors?.email\">{{errors?.email}}</div>\r\n        </div>\r\n\r\n        <div class=\"input-container\" *ngIf=\"!data.user\">\r\n            <label for=\"password\" trans>Password</label>\r\n            <input type=\"password\" id=\"password\" formControlName=\"password\" required>\r\n            <div class=\"error\" *ngIf=\"errors?.password\">{{errors?.password}}</div>\r\n        </div>\r\n\r\n        <div class=\"avatar-container\">\r\n            <div class=\"input-container avatar-input-container\">\r\n                <upload-image-control class=\"inherit-size\" formControlName=\"avatar\"></upload-image-control>\r\n                <div class=\"error\" *ngIf=\"errors?.avatar\">{{errors?.avatar}}</div>\r\n            </div>\r\n            <div class=\"many-inputs\">\r\n                <div class=\"input-container\">\r\n                    <label for=\"first_name\" trans>First Name</label>\r\n                    <input type=\"text\" id=\"first_name\" formControlName=\"first_name\">\r\n                    <div class=\"error\" *ngIf=\"errors?.first_name\">{{errors?.first_name}}</div>\r\n                </div>\r\n\r\n                <div class=\"input-container\">\r\n                    <label for=\"last_name\" trans>Last Name</label>\r\n                    <input type=\"text\" id=\"last_name\" formControlName=\"last_name\">\r\n                    <div class=\"error\" *ngIf=\"errors?.last_name\">{{errors?.last_name}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"input-container\" [class.resend-button-visible]=\"shouldShowResendButton()\">\r\n            <label for=\"confirmed\" trans>Email Confirmed</label>\r\n            <div class=\"confirmed-select-wrapper\">\r\n                <select id=\"confirmed\" formControlName=\"confirmed\">\r\n                    <option [ngValue]=\"true\" trans>Yes</option>\r\n                    <option [ngValue]=\"false\" trans>No</option>\r\n                </select>\r\n                <button mat-flat-button color=\"accent\" class=\"resend-confirmation-button\" [disabled]=\"loading$ | async\" (click)=\"sendEmailConfirmation()\" trans>Resend</button>\r\n            </div>\r\n            <div class=\"error\" *ngIf=\"errors?.confirmed\">{{errors?.confirmed}}</div>\r\n        </div>\r\n\r\n        <space-input label=\"Available Space\" formControlName=\"available_space\">\r\n            <p class=\"description\" trans>Disk space available to user. If left empty, it will be inherited from value set in \"admin -> settings -> uploading\" page.</p>\r\n            <div class=\"error\" *ngIf=\"errors?.available_space\">{{errors?.available_space}}</div>\r\n        </space-input>\r\n\r\n        <role-manager formControlName=\"roles\"></role-manager>\r\n        <div class=\"error\" *ngIf=\"errors?.roles\">{{errors?.roles}}</div>\r\n\r\n        <permission-manager formControlName=\"permissions\" *ngIf=\"currentUser.hasPermission('permissions.update')\"></permission-manager>\r\n        <div class=\"error\" *ngIf=\"errors?.permissions\">{{errors?.permissions}}</div>\r\n    </mat-dialog-content>\r\n\r\n    <div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\r\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel\" trans>Cancel</button>\r\n        <button type=\"submit\" class=\"button primary\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\r\n            <span *ngIf=\"data.user\" trans>Update User</span>\r\n            <span *ngIf=\"!data.user\" trans>Create User</span>\r\n        </button>\r\n    </div>\r\n</form>\r\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {User} from '@common/core/types/models/User';\r\nimport {Users} from '@common/auth/users.service';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport { AuthService } from '@common/auth/auth.service';\r\nimport { Settings } from '@common/core/config/settings.service';\r\n\r\nexport interface CrupdateUserModalData {\r\n    user?: User;\r\n}\r\n\r\n@Component({\r\n    selector: 'crupdate-user-modal',\r\n    templateUrl: './crupdate-user-modal.component.html',\r\n    styleUrls: ['./crupdate-user-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CrupdateUserModalComponent implements OnInit {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public form = this.fb.group({\r\n        email: [''],\r\n        password: [''],\r\n        avatar: [''],\r\n        first_name: [''],\r\n        last_name: [''],\r\n        confirmed: [false],\r\n        available_space: [''],\r\n        roles: [],\r\n        permissions: [],\r\n    });\r\n    public errors$ = new BehaviorSubject<Partial<User>>({});\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<CrupdateUserModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateUserModalData,\r\n        public users: Users,\r\n        private toast: Toast,\r\n        public currentUser: CurrentUser,\r\n        private fb: FormBuilder,\r\n        private auth: AuthService,\r\n        private settings: Settings,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        if (this.data.user) {\r\n            this.form.patchValue(this.data.user);\r\n        }\r\n    }\r\n    \r\n    public confirm() {\r\n        if (this.loading$.value) return;\r\n        let request;\r\n        const payload = this.getPayload();\r\n\r\n        this.loading$.next(true);\r\n\r\n        if (this.data.user) {\r\n            request = this.users.update(this.data.user.id, payload);\r\n        } else {\r\n            request = this.users.create(payload);\r\n        }\r\n\r\n        request.pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.close(response.user);\r\n                const action = this.data.user ? 'updated' : 'created';\r\n                this.toast.open('User ' + action);\r\n            }, err => this.errors$.next(err.messages));\r\n    }\r\n    \r\n    public close(data?: any) {\r\n        this.dialogRef.close(data);\r\n    }\r\n    \r\n    private getPayload() {\r\n        const payload = {...this.form.value};\r\n        payload.roles = (payload.roles || []).map(role => role.id);\r\n        payload.permissions = (payload.permissions || []);\r\n        if (this.data.user) {\r\n            delete payload.password;\r\n        }\r\n        return payload;\r\n    }\r\n\r\n    public sendEmailConfirmation() {\r\n        this.loading$.next(true);\r\n        this.auth.resendEmailConfirmation(this.data.user.email)\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(() => {\r\n                this.toast.open('Confirmation sent.');\r\n            });\r\n    }\r\n\r\n    public shouldShowResendButton(): boolean {\r\n        return this.data.user && this.data.user.id && this.settings.get('require_email_confirmation') && !this.form.get('confirmed').value;\r\n    }\r\n}\r\n","import {DataTableFilter} from '@common/shared/data-table/filter-panel/data-table-filters';\r\n\r\nexport const USER_INDEX_FILTERS: DataTableFilter[] = [\r\n    {\r\n        name: 'subscribed',\r\n        column: 'subscribed',\r\n        condition: 'billing.enable',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'any'},\r\n            {name: 'subscribed', value: true},\r\n            {name: 'not subscribed', value: false},\r\n        ]\r\n    },\r\n    {\r\n        name: 'status',\r\n        column: 'confirmed',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'any'},\r\n            {name: 'confirmed', value: true},\r\n            {name: 'not confirmed', value: false},\r\n        ]\r\n    },\r\n    {\r\n        name: 'created between',\r\n        column: 'created_at',\r\n        type: 'date',\r\n    },\r\n];\r\n","<data-table [dataSource]=\"dataSource\" itemsName=\"users\" matSort class=\"responsive-material-table\">\r\n    <button mat-raised-button color=\"accent\" (click)=\"showCrupdateUserModal()\" *ngIf=\"currentUser.hasPermission('users.create')\" headerActions trans>Add</button>\r\n\r\n    <button mat-icon-button [matTooltip]=\"'Delete selected' | trans\" (click)=\"maybeDeleteSelectedUsers()\" headerSelectedActions *ngIf=\"currentUser.hasPermission('users.delete')\">\r\n        <mat-icon svgIcon=\"delete\"></mat-icon>\r\n    </button>\r\n\r\n    <ng-container matColumnDef=\"avatar\">\r\n        <mat-header-cell *matHeaderCellDef trans>Avatar</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\"><img [src]=\"user.avatar\"></mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"email\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Email</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\" data-label=\"Email:\">{{user.email}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"subscribed\" *ngIf=\"settings.get('billing.enable')\">\r\n        <mat-header-cell *matHeaderCellDef trans>Subscribed</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\" data-label=\"Subscribed:\">{{user.subscriptions?.length ? 'Yes' : 'No'}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"roles\">\r\n        <mat-header-cell *matHeaderCellDef trans>Roles</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\" class=\"hidden-on-mobile\">{{makeRolesList(user.roles)}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"permissions\">\r\n        <mat-header-cell *matHeaderCellDef trans>Permissions</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\" class=\"hidden-on-mobile\">{{makePermissionsList(user.permissions)}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"first_name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>First Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\" data-label=\"First Name:\">{{user.first_name || '-'}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"last_name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Last Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\" data-label=\"Last Name:\">{{user.last_name || '-'}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"created_at\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Created At</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\" class=\"hidden-on-mobile\">{{user.created_at | formattedDate}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"edit\">\r\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\">\r\n            <button mat-icon-button (click)=\"showCrupdateUserModal(user)\" *ngIf=\"currentUser.hasPermission('users.update')\" [matTooltip]=\"'Edit user' | trans\">\r\n                <mat-icon svgIcon=\"edit\"></mat-icon>\r\n            </button>\r\n        </mat-cell>\r\n    </ng-container>\r\n</data-table>","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {CrupdateUserModalComponent} from './crupdate-user-modal/crupdate-user-modal.component';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\r\nimport {Paginator} from '@common/shared/paginator.service';\r\nimport {User} from '@common/core/types/models/User';\r\nimport {Users} from '@common/auth/users.service';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\r\nimport {Role} from '@common/core/types/models/Role';\r\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport {Permission} from '@common/core/types/models/permission';\r\nimport {USER_INDEX_FILTERS} from '@common/admin/users/user-index-filters';\r\n\r\n@Component({\r\n    selector: 'user-index',\r\n    templateUrl: './user-index.component.html',\r\n    styleUrls: ['./user-index.component.scss'],\r\n    providers: [Paginator],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserIndexComponent implements OnInit, OnDestroy {\r\n    @ViewChild(MatSort, { static: true }) matSort: MatSort;\r\n    public dataSource: PaginatedDataTableSource<User>;\r\n\r\n    constructor(\r\n        public paginator: Paginator<User>,\r\n        private userService: Users,\r\n        private modal: Modal,\r\n        public currentUser: CurrentUser,\r\n        public settings: Settings,\r\n        private toast: Toast,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.dataSource = new PaginatedDataTableSource<User>({\r\n            uri: 'users',\r\n            dataPaginator: this.paginator,\r\n            matSort: this.matSort,\r\n            filters: USER_INDEX_FILTERS,\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.paginator.destroy();\r\n    }\r\n\r\n    public deleteSelectedUsers() {\r\n        const ids = this.dataSource.selectedRows.selected.map(user => user.id);\r\n        this.userService.delete(ids).subscribe(() => {\r\n            this.dataSource.reset();\r\n            this.toast.open('Deleted selected users');\r\n        }, errResponse => {\r\n            this.toast.open(errResponse.messages.general || HttpErrors.Default);\r\n        });\r\n    }\r\n\r\n    public makeRolesList(roles: Role[]): string {\r\n        return roles.slice(0, 3).map(role => role.name).join(', ');\r\n    }\r\n\r\n    public makePermissionsList(permissions: Permission[]): string {\r\n        return permissions.slice(0, 3).map(p => p.name).join(', ');\r\n    }\r\n\r\n    /**\r\n     * Ask user to confirm deletion of selected tags\r\n     * and delete selected tags if user confirms.\r\n     */\r\n    public maybeDeleteSelectedUsers() {\r\n        this.modal.show(ConfirmModalComponent, {\r\n            title: 'Delete Users',\r\n            body:  'Are you sure you want to delete selected users?',\r\n            ok:    'Delete'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.deleteSelectedUsers();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Show modal for editing user if user is specified\r\n     * or for creating a new user otherwise.\r\n     */\r\n    public showCrupdateUserModal(user?: User) {\r\n        this.modal.open(\r\n            CrupdateUserModalComponent,\r\n            {user},\r\n            'crupdate-user-modal-container'\r\n        ).beforeClosed().subscribe(data => {\r\n            if ( ! data) return;\r\n            this.dataSource.reset();\r\n        });\r\n    }\r\n}\r\n","import { User } from './User';\r\nimport {Permission} from '@common/core/types/models/permission';\r\n\r\nexport class Role {\r\n    id: number;\r\n    name: string;\r\n    permissions?: Permission[];\r\n    default: boolean;\r\n    guests: boolean;\r\n    created_at?: string;\r\n    updated_at?: string;\r\n    users?: User[];\r\n\r\n    constructor(params: Object = {}) {\r\n        for (const name in params) {\r\n            this[name] = params[name];\r\n        }\r\n    }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title mat-dialog-title\" mat-dialog-title *ngIf=\"data.role\" trans>Update Role</h2>\r\n    <h2 class=\"modal-title mat-dialog-title\" mat-dialog-title *ngIf=\"!data.role\" trans>Create a New Role</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\"><mat-icon svgIcon=\"close\"></mat-icon></button>\r\n</div>\r\n\r\n<form autocomplete=\"off\" (submit)=\"confirm()\" *ngIf=\"errors$ | async as errors\" [formGroup]=\"form\" ngNativeValidate>\r\n   <div class=\"many-inputs mat-dialog-content\" mat-dialog-content>\r\n       <div class=\"input-container\">\r\n           <label for=\"name\" trans>Name</label>\r\n           <input type=\"text\" formControlName=\"name\" id=\"name\" required>\r\n           <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\r\n       </div>\r\n\r\n       <permission-manager formControlName=\"permissions\"></permission-manager>\r\n       <div class=\"error\" *ngIf=\"errors?.permissions\">{{errors?.permissions}}</div>\r\n\r\n       <div class=\"setting-container\">\r\n           <mat-slide-toggle formControlName=\"default\" id=\"default\" trans>Default</mat-slide-toggle>\r\n           <p trans>Assign this role to new users automatically.</p>\r\n           <div class=\"error\" *ngIf=\"errors.default\">{{errors.default}}</div>\r\n       </div>\r\n\r\n       <div class=\"setting-container\">\r\n           <mat-slide-toggle id=\"guest\" formControlName=\"guests\" trans>Guests</mat-slide-toggle>\r\n           <p trans>Assign this role to guests (not logged in users).</p>\r\n           <div class=\"error\" *ngIf=\"errors.guests\">{{errors.guests}}</div>\r\n       </div>\r\n   </div>\r\n\r\n    <div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\r\n        <button (click)=\"close()\" type=\"button\" class=\"button cancel\" mat-button trans>Cancel</button>\r\n        <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\r\n            <span *ngIf=\"data.role\" trans>Update</span>\r\n            <span *ngIf=\"!data.role\" trans>Create</span>\r\n        </button>\r\n    </div>\r\n</form>","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Role} from '@common/core/types/models/Role';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {RoleService} from '@common/admin/roles/role.service';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {finalize} from 'rxjs/operators';\r\n\r\nexport interface CrupdateRoleModalData {\r\n    role: Role;\r\n}\r\n\r\n@Component({\r\n    selector: 'crupdate-role-modal',\r\n    templateUrl: './crupdate-role-modal.component.html',\r\n    styleUrls: ['./crupdate-role-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CrupdateRoleModalComponent implements OnInit {\r\n    public form = this.fb.group({\r\n        name: [''],\r\n        default: [false],\r\n        guests: [false],\r\n        permissions: [],\r\n        roles: [],\r\n    });\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public errors$ = new BehaviorSubject<Partial<Role>>({});\r\n\r\n    constructor(\r\n        private toast: Toast,\r\n        private roleService: RoleService,\r\n        private modal: Modal,\r\n        private fb: FormBuilder,\r\n        private dialogRef: MatDialogRef<CrupdateRoleModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateRoleModalData,\r\n    ) {\r\n        this.resetState();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.resetState();\r\n        if (this.data.role) {\r\n           this.form.patchValue(this.data.role);\r\n        }\r\n    }\r\n\r\n    public close(data?: Role) {\r\n        this.resetState();\r\n        this.dialogRef.close(data);\r\n    }\r\n\r\n    public confirm() {\r\n        this.loading$.next(true);\r\n        let request;\r\n        if (this.data.role) {\r\n            request = this.roleService.update(this.data.role.id, this.form.value);\r\n        } else {\r\n            request = this.roleService.createNew(this.form.value);\r\n        }\r\n\r\n        request\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.toast.open('Role ' + (this.data.role ? 'Updated' : 'Created'));\r\n                this.close(response.data);\r\n            }, err => this.errors$.next(err.messages));\r\n    }\r\n\r\n    private resetState() {\r\n        this.form.reset();\r\n        this.errors$.next({});\r\n    }\r\n}\r\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Find User</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"no-style close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<mat-dialog-content>\n    <div class=\"input-container search-input-container\">\n        <input type=\"text\" placeholder=\"Search for user by name or email...\" [formControl]=\"searchFormControl\">\n        <loading-indicator [isVisible]=\"loading$ | async\" class=\"small\"></loading-indicator>\n    </div>\n\n    <div class=\"users\">\n        <div class=\"user\" *ngFor=\"let user of users$ | async\" (click)=\"close(user)\">\n            <img [src]=\"user.avatar\">\n            <div class=\"meta overflow-hidden\">\n                <div class=\"name overflow-hidden\">{{user.display_name}}</div>\n                <div class=\"email overflow-hidden\">{{user.email}}</div>\n            </div>\n        </div>\n    </div>\n</mat-dialog-content>","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {Users} from '../users.service';\nimport {User} from '../../core/types/models/User';\n\n@Component({\n    selector: 'find-user-modal',\n    templateUrl: './find-user-modal.component.html',\n    styleUrls: ['./find-user-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FindUserModalComponent implements OnInit {\n    public searchFormControl = new FormControl();\n    public loading$ = new BehaviorSubject(false);\n    public users$ = new BehaviorSubject<User[]>([]);\n\n    constructor(\n        private dialogRef: MatDialogRef<FindUserModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: FindUserModalComponent,\n        private users: Users,\n    ) {}\n\n    ngOnInit() {\n        this.searchFormControl.valueChanges\n            .pipe(\n                debounceTime(250),\n                distinctUntilChanged(),\n                switchMap(query => this.searchUsers(query)),\n                catchError(() => of([])),\n            ).subscribe(users => {\n                this.users$.next(users);\n                this.loading$.next(false);\n            });\n    }\n\n    private searchUsers(query: string): Observable<User[]> {\n        this.loading$.next(true);\n        if ( ! query) {\n            return of([]);\n        }\n        return this.users.getAll({query});\n    }\n\n    public close(user?: User) {\n        this.dialogRef.close(user);\n    }\n}\n","\r\n<section class=\"admin-pill-nav\">\r\n    <div class=\"new-role\">\r\n        <button mat-flat-button color=\"accent\" class=\"new-role-button\" (click)=\"showCrupdateRoleModal()\" *ngIf=\"currentUser.hasPermission('roles.create')\" trans>New Role</button>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"breakpoints.isMobile$ | async; else desktopNav\">\r\n        <button [matMenuTriggerFor]=\"navMenu\" class=\"no-style admin-pill-nav-mobile-selector\">\r\n            <span class=\"name\" trans>{{(selectedRole$ | async).name}}</span>\r\n            <mat-icon svgIcon=\"keyboard-arrow-down\"></mat-icon>\r\n        </button>\r\n        <mat-menu #navMenu=\"matMenu\" class=\"admin-pill-nav-menu\">\r\n            <button mat-menu-item *ngFor=\"let role of roles$ | async\" (click)=\"selectRole(role)\" [class.selected]=\"(selectedRole$ | async).id === role.id\">{{role.name}}</button>\r\n        </mat-menu>\r\n    </ng-container>\r\n\r\n    <ng-template #desktopNav>\r\n        <aside class=\"admin-pill-nav rounded\">\r\n            <div class=\"nav-item\" *ngFor=\"let role of roles$ | async\" (click)=\"selectRole(role)\" [class.selected]=\"(selectedRole$ | async).id === role.id\">\r\n                <div class=\"name\">{{role.name}}</div>\r\n\r\n                <div class=\"actions\">\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"actionsMenu\" (click)=\"$event.stopPropagation()\">\r\n                        <mat-icon svgIcon=\"settings\"></mat-icon>\r\n                    </button>\r\n                    <mat-menu #actionsMenu>\r\n                        <div mat-menu-item (click)=\"showCrupdateRoleModal(role)\" *ngIf=\"currentUser.hasPermission('roles.update')\" trans>Edit</div>\r\n                        <div mat-menu-item (click)=\"maybeDeleteRole(role)\" *ngIf=\"currentUser.hasPermission('roles.delete')\" trans>Delete</div>\r\n                    </mat-menu>\r\n                </div>\r\n            </div>\r\n        </aside>\r\n    </ng-template>\r\n</section>\r\n\r\n<data-table [dataSource]=\"dataSource\" itemsName=\"users\" class=\"responsive-material-table\" matSort>\r\n    <ng-container headerActions *ngIf=\"currentUser.hasPermission('roles.update')\">\r\n        <button class=\"assign-users-button\" mat-raised-button color=\"accent\" (click)=\"showAssignUsersModal()\" [disabled]=\"!canAssignUsers()\" trans>Assign Users</button>\r\n        <button mat-raised-button color=\"accent\" (click)=\"maybeDetachUsers()\" [disabled]=\"!dataSource.anyRowsSelected()\" trans>Unassign Users</button>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"avatar\">\r\n        <mat-header-cell *matHeaderCellDef trans>Avatar</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\"> <img [src]=\"user.avatar\"> </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"email\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Email</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\" data-label=\"Email:\"> {{user.email}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"first_name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>First Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\" data-label=\"First Name:\"> {{user.first_name ? user.first_name : '-'}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"last_name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Last Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let user\" data-label=\"Last Name:\"> {{user.last_name ? user.last_name : '-'}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <no-results-message *ngIf=\"!(selectedRole$ | async).guests && (dataSource.noResults$ | async)\">\r\n        <span primary-text trans>Nothing To Display.</span>\r\n        <span secondary-text trans>There are no users in this role yet.</span>\r\n    </no-results-message>\r\n\r\n    <no-results-message *ngIf=\"(selectedRole$ | async).guests\">\r\n        <span primary-text trans>Guests Role</span>\r\n        <span secondary-text trans>Users can't be assigned to this role.</span>\r\n    </no-results-message>\r\n\r\n    <no-results-message *ngIf=\"!(selectedRole$ | async)\">\r\n        <span primary-text trans>No role selected</span>\r\n        <span secondary-text trans>Select a role from the left.</span>\r\n    </no-results-message>\r\n</data-table>\r\n","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {User} from '../../core/types/models/User';\r\nimport {Role} from '../../core/types/models/Role';\r\nimport {RoleService} from './role.service';\r\nimport {Toast} from '../../core/ui/toast.service';\r\nimport {Modal} from '../../core/ui/dialogs/modal.service';\r\nimport {ConfirmModalComponent} from '../../core/ui/confirm-modal/confirm-modal.component';\r\nimport {CrupdateRoleModalComponent} from './crupdate-role-modal/crupdate-role-modal.component';\r\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\r\nimport {Paginator} from '@common/shared/paginator.service';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {FindUserModalComponent} from '@common/auth/find-user-modal/find-user-modal.component';\r\nimport {BreakpointsService} from '@common/core/ui/breakpoints.service';\r\n\r\n@Component({\r\n    selector: 'role-index',\r\n    templateUrl: './role-index.component.html',\r\n    styleUrls: ['./role-index.component.scss'],\r\n    providers: [Paginator],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RoleIndexComponent implements OnInit {\r\n    @ViewChild(MatSort, { static: true }) matSort: MatSort;\r\n\r\n    public dataSource: PaginatedDataTableSource<User>;\r\n    public roles$ = new BehaviorSubject<Role[]>([]);\r\n    public selectedRole$ = new BehaviorSubject<Role>(new Role());\r\n\r\n    constructor(\r\n        private roleApi: RoleService,\r\n        private toast: Toast,\r\n        private modal: Modal,\r\n        public paginator: Paginator<User>,\r\n        public currentUser: CurrentUser,\r\n        public breakpoints: BreakpointsService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.dataSource = new PaginatedDataTableSource<User>({\r\n            uri: 'users',\r\n            dataPaginator: this.paginator,\r\n            matSort: this.matSort,\r\n            delayInit: true,\r\n        });\r\n        this.refreshRoles();\r\n    }\r\n\r\n    public selectRole(role: Role) {\r\n        if (this.selectedRole$.value.id !== role.id) {\r\n            this.selectedRole$.next(role);\r\n            this.refreshRoleUsers(role);\r\n            this.dataSource.selectedRows.clear();\r\n        }\r\n    }\r\n\r\n    public refreshRoles() {\r\n        return new Promise(resolve => {\r\n            this.roleApi.getRoles().subscribe(response => {\r\n                this.roles$.next(response.pagination.data);\r\n                if (this.roles$.value.length) {\r\n                    // if no role is currently selected, select first\r\n                    if ( ! this.selectedRole$.value.id) {\r\n                        this.selectRole(this.roles$.value[0]);\r\n\r\n                    // if role is selected, try to re-select it with the one returned from server\r\n                    } else {\r\n                        const role = this.roles$.value.find(r => r.id === this.selectedRole$.value.id);\r\n                        if (role) {\r\n                            this.selectedRole$.next(role);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    public refreshRoleUsers(role: Role) {\r\n        this.dataSource.reload({role_id: role.id});\r\n    }\r\n\r\n    public showAssignUsersModal() {\r\n        this.modal.open(FindUserModalComponent)\r\n            .afterClosed()\r\n            .subscribe((user: User) => {\r\n                if (user) {\r\n                    this.roleApi.addUsers(this.selectedRole$.value.id, [user.email]).subscribe(() => {\r\n                        this.toast.open('User assigned to role');\r\n                        this.refreshRoleUsers(this.selectedRole$.value);\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    public showCrupdateRoleModal(role?: Role) {\r\n        this.modal.show(CrupdateRoleModalComponent, {role}).afterClosed().subscribe(data => {\r\n            if ( ! data) return;\r\n            this.refreshRoles();\r\n        });\r\n    }\r\n\r\n    public maybeDeleteRole(role: Role) {\r\n        this.modal.open(ConfirmModalComponent, {\r\n            title: 'Delete Role',\r\n            body:  'Are you sure you want to delete this role?',\r\n            ok:    'Delete'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.deleteRole(role);\r\n        });\r\n    }\r\n\r\n    public deleteRole(role: Role) {\r\n        this.roleApi.delete(role.id).subscribe(() => {\r\n            this.selectedRole$.next(new Role());\r\n            this.refreshRoles().then(() => {\r\n                this.refreshRoleUsers(this.selectedRole$.value);\r\n            });\r\n        });\r\n    }\r\n\r\n    public maybeDetachUsers() {\r\n        this.modal.show(ConfirmModalComponent, {\r\n            title: 'Remove users from role',\r\n            body:  'Are you sure you want to remove selected users from this role?',\r\n            ok:    'Remove'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.removeUsersFromSelectedRole();\r\n        });\r\n    }\r\n\r\n    public removeUsersFromSelectedRole() {\r\n        const ids = this.dataSource.selectedRows.selected.map(user => user.id);\r\n        this.roleApi.removeUsers(this.selectedRole$.value.id, ids).subscribe(() => {\r\n            this.refreshRoleUsers(this.selectedRole$.value);\r\n            this.dataSource.selectedRows.clear();\r\n            this.toast.open('Users removed from role.');\r\n        });\r\n    }\r\n\r\n    public canAssignUsers() {\r\n        return this.selectedRole$.value.id && !this.dataSource.selectedRows.hasValue() && !this.selectedRole$.value.guests;\r\n    }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h2 mat-dialog-title>\r\n        <span *ngIf=\"data.localization\" trans>Update Localization</span>\r\n        <span *ngIf=\"!data.localization\" trans>Create Localization</span>\r\n    </h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<form class=\"modal-content\" (ngSubmit)=\"confirm()\" [formGroup]=\"form\" *ngIf=\"errors$ | async as errors\" ngNativeValidate>\r\n    <mat-dialog-content class=\"many-inputs\">\r\n        <div class=\"input-container\">\r\n            <label for=\"name\" trans>Name</label>\r\n            <input type=\"text\" formControlName=\"name\" id=\"name\" pattern=\"[A-Za-z0-9_-]+\" required>\r\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n            <label for=\"language\" trans>Language</label>\r\n            <select id=\"language\" formControlName=\"language\">\r\n                <option [value]=\"lang.code\" *ngFor=\"let lang of languages$ | async\" trans>{{lang.name}}</option>\r\n            </select>\r\n        </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions>\r\n        <button (click)=\"close()\" mat-button type=\"button\" trans>Cancel</button>\r\n        <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\" trans>\r\n            <span *ngIf=\"data.localization\" trans>Update</span>\r\n            <span *ngIf=\"!data.localization\" trans>Create</span>\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {Localization} from '@common/core/types/models/Localization';\r\nimport {Localizations} from '@common/core/translations/localizations.service';\r\nimport {LocalizationWithLines} from '@common/core/types/localization-with-lines';\r\nimport {Role} from '@common/core/types/models/Role';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {LanguageListItem, ValueLists} from '@common/core/services/value-lists.service';\r\n\r\nexport interface CrupdateLocalizationModalData {\r\n    localization?: LocalizationWithLines;\r\n}\r\n\r\n@Component({\r\n    selector: 'crupdate-localization-modal',\r\n    templateUrl: './crupdate-localization-modal.component.html',\r\n    styleUrls: ['./crupdate-localization-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CrupdateLocalizationModalComponent implements OnInit {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public errors$ = new BehaviorSubject<Partial<Role>>({});\r\n    public languages$ = new BehaviorSubject<LanguageListItem[]>([]);\r\n    public form = this.fb.group({\r\n        name: [''],\r\n        language: [''],\r\n    });\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private localizations: Localizations,\r\n        private dialogRef: MatDialogRef<CrupdateLocalizationModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateLocalizationModalData,\r\n        private toast: Toast,\r\n        private lists: ValueLists,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.lists.get(['languages']).subscribe(response => {\r\n            this.languages$.next(response.languages);\r\n        });\r\n        if (this.data.localization) {\r\n            this.form.patchValue(this.data.localization.model);\r\n        }\r\n    }\r\n\r\n    public confirm() {\r\n        this.loading$.next(true);\r\n        const request = this.data.localization\r\n            ? this.updateLocalization() :\r\n            this.createNewLocalization();\r\n        request\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.close(response.localization);\r\n                this.toast.open('Localization ' + (this.data.localization ? 'updated' : 'created'));\r\n            }, err => this.errors$.next(err.messages));\r\n    }\r\n\r\n    public close(localization?: LocalizationWithLines) {\r\n        this.dialogRef.close(localization);\r\n    }\r\n\r\n    public createNewLocalization(): Observable<{localization: LocalizationWithLines}> {\r\n        return this.localizations.create(this.form.value);\r\n    }\r\n\r\n    public updateLocalization(): Observable<{localization: LocalizationWithLines}> {\r\n        return this.localizations.update(this.data.localization.model.id, this.form.value);\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'new-line-modal',\r\n    templateUrl: './new-line-modal.component.html',\r\n    styleUrls: ['./new-line-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NewLineModalComponent {\r\n    public form = new FormGroup({\r\n        key: new FormControl(),\r\n        value: new FormControl(),\r\n    });\r\n\r\n    constructor(private dialogRef: MatDialogRef<NewLineModalComponent>) {}\r\n\r\n    public confirm() {\r\n        this.close(this.form.value);\r\n    }\r\n\r\n    public close(line?: {key: string, value: string}) {\r\n        this.dialogRef.close(line);\r\n    }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h2 class=\"mat-dialog-title\" mat-dialog-title trans>Add New Translation Line</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<form class=\"modal-content\" (ngSubmit)=\"confirm()\" [formGroup]=\"form\" ngNativeValidate>\r\n    <mat-dialog-content class=\"many-inputs\">\r\n        <div class=\"input-container\">\r\n            <label for=\"translation-key\" trans>Translation Key</label>\r\n            <input type=\"text\" formControlName=\"key\" name=\"translation-key\" id=\"translation-key\" required>\r\n            <p trans>Word or sentence you want to translate.</p>\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n            <label for=\"translation-value\" trans>Translation Value</label>\r\n            <input type=\"text\" formControlName=\"value\" name=\"translation-value\" id=\"translation-value\" required>\r\n            <p trans>What word or sentence should be translated to.</p>\r\n        </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions>\r\n        <button (click)=\"close()\" mat-button type=\"button\" trans>Cancel</button>\r\n        <button type=\"submit\" mat-raised-button color=\"accent\" trans>Add</button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","<aside class=\"admin-pill-nav\">\r\n    <div class=\"new-localization\">\r\n        <button mat-button (click)=\"showCrupdateLocalizationModal()\" *ngIf=\"currentUser.hasPermission('localizations.create')\">\r\n            <mat-icon svgIcon=\"add\"></mat-icon>\r\n            <span trans>New Localization</span>\r\n        </button>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"breakpoints.isMobile$ | async; else desktopNav\">\r\n        <button [matMenuTriggerFor]=\"navMenu\" class=\"no-style admin-pill-nav-mobile-selector\">\r\n            <span class=\"name\" trans>{{(selectedLocalization).model.name}}</span>\r\n            <mat-icon svgIcon=\"keyboard-arrow-down\"></mat-icon>\r\n        </button>\r\n        <mat-menu #navMenu=\"matMenu\" class=\"admin-pill-nav-menu\">\r\n            <button mat-menu-item *ngFor=\"let localization of localizations$ | async\" (click)=\"setSelectedLocalization(localization)\" [class.selected]=\"selectedLocalization.model.id == localization.model.id\">{{localization.model.name}}</button>\r\n        </mat-menu>\r\n    </ng-container>\r\n\r\n    <ng-template #desktopNav>\r\n        <div class=\"nav-item\" *ngFor=\"let localization of localizations$ | async\" (click)=\"setSelectedLocalization(localization)\" [class.selected]=\"selectedLocalization.model.id == localization.model.id\">\r\n            <div class=\"name\">{{localization.model.name.replace('-', ' ')}}</div>\r\n\r\n            <div class=\"actions\">\r\n                <button mat-icon-button (click)=\"$event.stopPropagation()\" [matMenuTriggerFor]=\"actionsMenu\" ><mat-icon svgIcon=\"settings\" class=\"size-22\"></mat-icon></button>\r\n                <mat-menu #actionsMenu>\r\n                    <div mat-menu-item (click)=\"setDefaultLocalization(localization)\" *ngIf=\"currentUser.hasPermission('settings.update')\" trans>Set as Default</div>\r\n                    <div mat-menu-item (click)=\"showCrupdateLocalizationModal(localization)\" *ngIf=\"localization.name !== 'English' && currentUser.hasPermission('localizations.update')\" trans>Update</div>\r\n                    <div mat-menu-item (click)=\"confirmLocalizationDeletion(localization)\" *ngIf=\"localization.name !== 'English' && currentUser.hasPermission('localizations.delete')\" trans>Delete</div>\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <div class=\"update-translations\">\r\n        <button mat-raised-button color=\"accent\" (click)=\"updateLocalization()\" [disabled]=\"loading$ | async\" *ngIf=\"currentUser.hasPermission('localizations.update')\" trans>Update</button>\r\n    </div>\r\n</aside>\r\n\r\n<section class=\"material-panel\">\r\n    <div class=\"panel-header\">\r\n        <button mat-raised-button class=\"new-translation-button\" color=\"accent\" (click)=\"addLine()\" trans>Add New Translation</button>\r\n        <div class=\"input-container search-input-container\">\r\n            <input type=\"text\" class=\"search\" placeholder=\"Search Translations\" trans-placeholder [formControl]=\"searchQuery\">\r\n            <mat-icon svgIcon=\"search\"></mat-icon>\r\n        </div>\r\n    </div>\r\n    <mat-table [dataSource]=\"tableDataSource\" class=\"responsive-material-table\">\r\n        <ng-container matColumnDef=\"sourceText\">\r\n            <mat-header-cell *matHeaderCellDef trans>Source Text</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let line\" data-label=\"Source:\">{{line.key}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"translation\">\r\n            <mat-header-cell *matHeaderCellDef trans>Translation</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let line\" data-label=\"Translation:\">\r\n                <input type=\"text\" class=\"translation-input\" id=\"{{line.key}}\" [(ngModel)]=\"selectedLocalization.lines[line.key]\">\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"['sourceText', 'translation']\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: ['sourceText', 'translation']\"></mat-row>\r\n    </mat-table>\r\n</section>\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {CrupdateLocalizationModalComponent} from './crupdate-localization-modal/crupdate-localization-modal.component';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {Localization} from '../../core/types/models/Localization';\r\nimport {Modal} from '../../core/ui/dialogs/modal.service';\r\nimport {ConfirmModalComponent} from '../../core/ui/confirm-modal/confirm-modal.component';\r\nimport {Toast} from '../../core/ui/toast.service';\r\nimport {distinctUntilChanged, finalize} from 'rxjs/operators';\r\nimport {Translations} from '../../core/translations/translations.service';\r\nimport {Localizations} from '../../core/translations/localizations.service';\r\nimport {NewLineModalComponent} from './new-line-modal/new-line-modal.component';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {HttpErrors} from '../../core/http/errors/http-errors.enum';\r\nimport {LocalizationWithLines} from '@common/core/types/localization-with-lines';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {BreakpointsService} from '@common/core/ui/breakpoints.service';\r\n\r\n@Component({\r\n    selector: 'localization-index',\r\n    templateUrl: './localization-index.component.html',\r\n    styleUrls: ['./localization-index.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LocalizationIndexComponent implements OnInit {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public tableDataSource: MatTableDataSource<{key: string, translation: string}>;\r\n    public searchQuery = new FormControl();\r\n    public selectedLocalization: LocalizationWithLines = {model: new Localization, name: '', lines: {}};\r\n    public localizations$ = new BehaviorSubject<LocalizationWithLines[]>([]);\r\n\r\n    constructor(\r\n        private toast: Toast,\r\n        private modal: Modal,\r\n        private settings: Settings,\r\n        private i18n: Translations,\r\n        private route: ActivatedRoute,\r\n        public currentUser: CurrentUser,\r\n        private localizationsApi: Localizations,\r\n        public breakpoints: BreakpointsService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.bindSearchQuery();\r\n        this.tableDataSource = new MatTableDataSource();\r\n        this.route.data.subscribe(data => {\r\n            this.setLocalizations(data.localizations);\r\n        });\r\n    }\r\n\r\n    public addLine() {\r\n        this.modal.open(NewLineModalComponent)\r\n            .beforeClosed()\r\n            .subscribe(line => {\r\n                if ( ! line) return;\r\n                this.tableDataSource.data = [{key: line.key, translation: line.value}, ...this.tableDataSource.data];\r\n                this.selectedLocalization.lines[line.key] = line.value;\r\n            });\r\n    }\r\n\r\n    public setDefaultLocalization(localization: LocalizationWithLines) {\r\n        if ( ! this.selectedLocalization.model.id) {\r\n            this.setSelectedLocalization(localization);\r\n        }\r\n        this.localizationsApi.setDefault(localization.model).subscribe(() => {\r\n            this.toast.open('Default Localization Changed');\r\n        }, () => {\r\n            this.toast.open(HttpErrors.Default);\r\n        });\r\n    }\r\n\r\n    public updateLocalization() {\r\n        this.loading$.next(true);\r\n        this.localizationsApi.update(this.selectedLocalization.model.id, this.selectedLocalization)\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(() => {\r\n                this.toast.open('Localizations updated');\r\n                if (this.selectedLocalization.model.id === this.i18n.getActive().model.id) {\r\n                    this.i18n.setLocalization(this.selectedLocalization);\r\n                }\r\n            });\r\n    }\r\n\r\n    public showCrupdateLocalizationModal(localization?: LocalizationWithLines) {\r\n        this.modal.show(CrupdateLocalizationModalComponent, {localization})\r\n            .afterClosed()\r\n            .subscribe((newLocalization: LocalizationWithLines) => {\r\n                if ( ! newLocalization) return;\r\n                let localizations = [...this.localizations$.value];\r\n                if (localization) {\r\n                    localizations = localizations.map(l => {\r\n                        return l.model.id === newLocalization.model.id ? newLocalization : l;\r\n                    });\r\n                } else {\r\n                    localizations.push(newLocalization);\r\n                    this.setSelectedLocalization(newLocalization);\r\n                }\r\n                this.localizations$.next(localizations);\r\n            });\r\n    }\r\n\r\n    public setSelectedLocalization(localization: LocalizationWithLines) {\r\n        if (this.selectedLocalization.model.id === localization.model.id) return;\r\n\r\n        this.selectedLocalization = localization;\r\n        this.tableDataSource.data = this.linesToArray(localization.lines);\r\n        this.searchQuery.setValue(null);\r\n\r\n        // if lang lines are already fetched for this localization, bail\r\n        if (this.tableDataSource.data.length || ! localization.model.name) return;\r\n\r\n        this.localizationsApi.get(this.selectedLocalization.model.name).subscribe(response => {\r\n            this.selectedLocalization = response.localization;\r\n            const localizations = [...this.localizations$.value];\r\n            const i = localizations.findIndex(loc => loc.model.id === localization.model.id);\r\n            localizations[i] = response.localization;\r\n            this.localizations$.next(localizations);\r\n            this.tableDataSource.data = this.linesToArray(response.localization.lines);\r\n        });\r\n    }\r\n\r\n    public confirmLocalizationDeletion(language: LocalizationWithLines) {\r\n        if (this.localizations$.value.length < 2) {\r\n            this.toast.open('There must be at least one localization.');\r\n            return;\r\n        }\r\n\r\n        this.modal.open(ConfirmModalComponent, {\r\n            title: 'Delete Localization',\r\n            body: 'Are you sure you want to delete this localization?',\r\n            ok: 'Delete'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.deleteLocalization(language);\r\n        });\r\n    }\r\n\r\n    private deleteLocalization(language: LocalizationWithLines) {\r\n        this.localizationsApi.delete(language.model.id).subscribe(() => {\r\n            this.toast.open('Localization deleted');\r\n            const localizations = [...this.localizations$.value];\r\n            localizations.splice(localizations.indexOf(language), 1);\r\n            this.localizations$.next(localizations);\r\n\r\n            if (this.selectedLocalization.model.id === language.model.id) {\r\n                this.setSelectedLocalization(localizations[0]);\r\n            }\r\n        });\r\n    }\r\n\r\n    private setLocalizations(localizations: LocalizationWithLines[]) {\r\n        this.localizations$.next(localizations);\r\n        const active = localizations.find(l => l.model.language === this.settings.get('i18n.default_localization')) || localizations[0];\r\n        if (active) {\r\n            this.setSelectedLocalization(active);\r\n        }\r\n    }\r\n\r\n    private bindSearchQuery() {\r\n        this.searchQuery\r\n            .valueChanges\r\n            .pipe(distinctUntilChanged())\r\n            .subscribe(query => {\r\n                this.tableDataSource.filter = (query || '').toLowerCase().trim();\r\n            });\r\n    }\r\n\r\n    private linesToArray(lines: object): {key: string, translation: string}[] {\r\n        const transformed = [];\r\n\r\n        for (const key in lines) {\r\n            transformed.push({key, translation: lines[key]});\r\n        }\r\n\r\n        return transformed;\r\n    }\r\n}\r\n","import {AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, ViewChild} from '@angular/core';\r\nimport {BehaviorSubject, Observable, Subscription} from 'rxjs';\r\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\r\nimport {MailTemplate} from '@common/core/types/models/MailTemplate';\r\nimport {ThemeService} from '@common/core/theme.service';\r\n\r\n@Component({\r\n    selector: 'mail-template-preview',\r\n    templateUrl: './mail-template-preview.component.html',\r\n    styleUrls: ['./mail-template-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MailTemplatePreviewComponent implements AfterViewInit {\r\n    @ViewChild('iframe', { static: true }) private iframe: ElementRef<HTMLIFrameElement>;\r\n\r\n    private doc: Document;\r\n    private renderSub: Subscription;\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    private cache = {};\r\n\r\n    constructor(\r\n        private http: AppHttpClient,\r\n        private theme: ThemeService,\r\n    ) {}\r\n\r\n    ngAfterViewInit() {\r\n        this.initIframe();\r\n    }\r\n\r\n    public update(template: {model: MailTemplate, html: string, plain: string}, type: 'html'|'plain') {\r\n        const contents = template[type];\r\n\r\n        // check cache first\r\n        if (this.cache[contents]) {\r\n            return this.replaceIframeContents(this.cache[contents], type);\r\n        }\r\n\r\n        this.loading$.next(true);\r\n\r\n        this.renderSub = this.renderMailTemplate(template.model.file_name, type, contents).subscribe(response => {\r\n            this.replaceIframeContents(response.contents, type);\r\n            this.cacheRenderedTemplate(contents, response.contents);\r\n        }, () => this.replaceIframeContents(''));\r\n    }\r\n\r\n    private renderMailTemplate(fileName: string, type: string, contents: string): Observable<{contents: string}> {\r\n        // cancel previous render http call, if it's still in progress\r\n        if (this.renderSub) this.renderSub.unsubscribe();\r\n        return this.http.post('mail-templates/render', {contents, type, file_name: fileName});\r\n    }\r\n\r\n    private cacheRenderedTemplate(raw: string, rendered: string) {\r\n        const keys = Object.keys(this.cache);\r\n\r\n        // cache a maximum of 10 rendered templates\r\n        if (keys.length > 10) {\r\n            delete this.cache[keys[0]];\r\n        }\r\n\r\n        this.cache[raw] = rendered;\r\n    }\r\n\r\n    private replaceIframeContents(newContents: string, type: 'html'|'plain' = 'html') {\r\n        this.iframe.nativeElement.style.height = 'auto';\r\n        this.doc.documentElement.innerHTML = newContents.replace(/<!DOCTYPE((.|\\n|\\r)*?)\">/, '').trim();\r\n\r\n        // set iframe height to its contents height\r\n        this.iframe.nativeElement.style.height = this.doc.body.scrollHeight + 'px';\r\n        this.doc.body.style.whiteSpace = type === 'html' ? 'initial' : 'pre';\r\n        this.doc.body.style.color = this.theme.selectedTheme$.value && this.theme.selectedTheme$.value.is_dark ? '#fff' : '#000';\r\n        this.loading$.next(false);\r\n    }\r\n\r\n    private initIframe() {\r\n        this.doc = this.iframe.nativeElement.contentDocument;\r\n        this.doc.body.style.overflow = 'hidden';\r\n    }\r\n}\r\n","<div class=\"email-inbox\">\r\n    <div class=\"header\">\r\n        <div class=\"title\">\r\n            <div class=\"text\" trans>RE: Template Preview In Email Client</div>\r\n        </div>\r\n        <div class=\"actions\">\r\n            <mat-icon svgIcon=\"print\"></mat-icon>\r\n            <mat-icon svgIcon=\"open-in-new\"></mat-icon>\r\n        </div>\r\n    </div>\r\n    <div class=\"toolbar\">\r\n        <div class=\"user\">\r\n            <img src=\"https://www.gravatar.com/avatar/abc?s=65\">\r\n            <div class=\"meta\">\r\n                <div class=\"username\">John Doe</div>\r\n                <div class=\"info\">\r\n                    <span trans>to me</span>\r\n                    <mat-icon svgIcon=\"keyboard-arrow-down\"></mat-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"actions\">\r\n            <div class=\"date\">June 25</div>\r\n            <mat-icon svgIcon=\"star-border\" class=\"star-icon\"></mat-icon>\r\n            <div class=\"buttons\">\r\n                <div class=\"reply\">\r\n                    <mat-icon svgIcon=\"reply\"></mat-icon>\r\n                </div>\r\n                <div class=\"more\">\r\n                    <mat-icon svgIcon=\"keyboard-arrow-down\"></mat-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<iframe src=\"about:blank\" #iframe></iframe>\r\n\r\n<loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>","export class MailTemplate {\r\n\tid: number;\r\n\tfile_name: string;\r\n\tdisplay_name: string;\r\n\tsubject?: string;\r\n\taction?: string;\r\n\tmarkdown: boolean;\r\n\tcreated_at?: string;\r\n\tupdated_at?: string;\r\n\r\n\tconstructor(params: Object = {}) {\r\n        for (let name in params) {\r\n            this[name] = params[name];\r\n        }\r\n    }\r\n}","<ng-container *ngIf=\"errors$ | async as errors\">\r\n    <div class=\"header\">\r\n        <div class=\"title\" trans>{{selectedTemplate.model.display_name}}</div>\r\n        <div class=\"header-actions\">\r\n            <div class=\"header-action change-layout-action\">\r\n                <button class=\"no-style grid-layout-button\" (click)=\"setLayout('row')\" [class.active]=\"(selectedLayout$ | async) === 'row'\"><mat-icon svgIcon=\"view-comfy\"></mat-icon></button>\r\n                <button class=\"no-style list-layout-button\" (click)=\"setLayout('column')\" [class.active]=\"(selectedLayout$ | async) === 'column'\"><mat-icon svgIcon=\"view-list\"></mat-icon></button>\r\n            </div>\r\n        </div>\r\n        <button mat-raised-button color=\"accent\" class=\"button primary\" (click)=\"updateSelectedTemplate()\" *ngIf=\"currentUser.hasPermission('mail_templates.update')\" [disabled]=\"loading$ | async\" trans>Update</button>\r\n    </div>\r\n\r\n    <div class=\"many-inputs\">\r\n        <div class=\"input-container\">\r\n            <label for=\"selected-template\" trans>Selected Template</label>\r\n            <select name=\"selected-template\" id=\"selected-template\" [(ngModel)]=\"selectedTemplate\" (ngModelChange)=\"setEditorValue()\">\r\n                <option [ngValue]=\"template\" *ngFor=\"let template of templates\">{{template.model.display_name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"input-container\">\r\n            <label for=\"subject\" trans>Subject</label>\r\n            <input type=\"text\" name=\"subject\" id=\"subject\" [(ngModel)]=\"selectedTemplate.model.subject\">\r\n            <div class=\"error\" *ngIf=\"errors.subject\">{{errors.subject}}</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"label\">\r\n        <div class=\"types\">\r\n            <button class=\"type no-style\" [class.selected]=\"isTypeActive('html')\" (click)=\"toggleTemplateType()\">HTML</button>\r\n            <button class=\"type no-style\" *ngIf=\"selectedTemplate.plain\" [class.selected]=\"isTypeActive('plain')\" (click)=\"toggleTemplateType()\" trans>Plaintext</button>\r\n        </div>\r\n        <div class=\"actions\">\r\n            <button mat-button color=\"accent\" class=\"button flat\" (click)=\"restoreDefault()\" *ngIf=\"currentUser.hasPermission('mail_templates.update')\" [disabled]=\"loading$ | async\" trans>Restore Default</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"error\" *ngIf=\"errors.contents\" trans>Mail template syntax is not valid.</div>\r\n    <div class=\"template\" [ngClass]=\"selectedLayout$ | async\">\r\n        <div class=\"editor\" #editor></div>\r\n        <mail-template-preview></mail-template-preview>\r\n    </div>\r\n</ng-container>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {BehaviorSubject, Subject} from 'rxjs';\r\nimport {MailTemplatePreviewComponent} from './mail-template-preview/mail-template-preview.component';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {debounceTime, finalize} from 'rxjs/operators';\r\nimport {MailTemplate} from '../../core/types/models/MailTemplate';\r\nimport {Toast} from '../../core/ui/toast.service';\r\nimport {LazyLoaderService} from '../../core/utils/lazy-loader.service';\r\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {BreakpointsService} from '@common/core/ui/breakpoints.service';\r\n\r\ndeclare let ace;\r\n\r\n@Component({\r\n    selector: 'mail-template-index',\r\n    templateUrl: './mail-template-index.component.html',\r\n    styleUrls: ['./mail-template-index.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MailTemplateIndexComponent implements OnInit {\r\n    @ViewChild('editor') editorEl: ElementRef;\r\n    @ViewChild(MailTemplatePreviewComponent) preview: MailTemplatePreviewComponent;\r\n\r\n    private editor: any;\r\n    public templates: {model: MailTemplate, html: string, plain: string}[] = [];\r\n    public selectedTemplate = {model: new MailTemplate, html: '', plain: ''};\r\n    public selectedLayout$ = new BehaviorSubject<'column'|'row'>('row');\r\n    public selectedType: 'html'|'plain' = 'html';\r\n    public errors$ = new BehaviorSubject<{subject?: string, contents?: string}>({});\r\n    private editorChange = new Subject();\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(\r\n        private http: AppHttpClient,\r\n        private toast: Toast,\r\n        private route: ActivatedRoute,\r\n        public currentUser: CurrentUser,\r\n        private lazyLoader: LazyLoaderService,\r\n        private breakpoints: BreakpointsService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.bindToEditorChange();\r\n\r\n        this.breakpoints.isMobile$.subscribe(result => {\r\n            this.setLayout(result ? 'column' : 'row');\r\n        });\r\n\r\n        this.route.data.subscribe(data => {\r\n            if (data.templates.length) {\r\n                this.templates = data.templates;\r\n                this.selectedTemplate = this.templates[0];\r\n            }\r\n\r\n            this.initEditor().then(() => {\r\n                this.setEditorValue();\r\n            });\r\n        });\r\n    }\r\n\r\n    public toggleTemplateType() {\r\n        this.selectedType = this.selectedType === 'html' ? 'plain' : 'html';\r\n        this.setEditorValue();\r\n    }\r\n\r\n    public setLayout(name: 'column'|'row') {\r\n        this.selectedLayout$.next(name);\r\n    }\r\n\r\n    public isTypeActive(name: string) {\r\n        return this.selectedType === name;\r\n    }\r\n\r\n    public restoreDefault() {\r\n        this.loading$.next(true);\r\n        const id = this.selectedTemplate.model.id;\r\n        this.http.post('mail-templates/' + id + '/restore-default')\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe((template: any) => {\r\n                this.selectedTemplate.html = template.html;\r\n                this.selectedTemplate.plain = template.plain;\r\n                this.setEditorValue();\r\n                this.toast.open('Template default content restored');\r\n            });\r\n    }\r\n\r\n    public updateSelectedTemplate() {\r\n        this.loading$.next(true);\r\n        const payload = {\r\n            subject: this.selectedTemplate.model.subject,\r\n            contents: {\r\n                html: this.selectedTemplate.html,\r\n                plain: this.selectedTemplate.plain,\r\n            }\r\n        };\r\n        this.http.put('mail-templates/' + this.selectedTemplate.model.id, payload)\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(() => {\r\n                this.errors$.next({});\r\n                this.toast.open('Mail template updated');\r\n            }, errors => this.errors$.next(errors.messages));\r\n    }\r\n\r\n\r\n    public setEditorValue() {\r\n        const text = this.selectedType === 'html'\r\n            ? this.selectedTemplate.html\r\n            : this.selectedTemplate.plain;\r\n\r\n        if (this.editor) {\r\n            this.editor.setValue(text, -1);\r\n        }\r\n    }\r\n\r\n    private initEditor(language = 'html') {\r\n        return this.lazyLoader.loadAsset('js/ace/ace.js', {type: 'js'}).then(() => {\r\n            this.editor = ace.edit(this.editorEl.nativeElement);\r\n            this.editor.getSession().setMode('ace/mode/' + language);\r\n            this.editor.setTheme('ace/theme/chrome');\r\n            this.editor.$blockScrolling = Infinity;\r\n\r\n            // fire editor change observable, on editor content change\r\n            this.editor.getSession().on('change', () => {\r\n                this.editorChange.next(this.editor.getValue());\r\n            });\r\n        });\r\n    }\r\n\r\n    private bindToEditorChange() {\r\n        this.editorChange\r\n            .pipe(debounceTime(500))\r\n            .subscribe(() => {\r\n                this.selectedTemplate[this.selectedType] = this.editor.getValue();\r\n                this.preview.update(this.selectedTemplate, this.selectedType);\r\n            });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport {MailTemplate} from '../../core/types/models/MailTemplate';\r\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class MailTemplatesResolve implements Resolve<{model: MailTemplate, html: string, plain?: string}> {\r\n    constructor(private http: AppHttpClient, private router: Router) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Promise<{model: MailTemplate, html: string, plain?: string}> {\r\n        return this.http.get('mail-templates').toPromise().then(response => {\r\n            return response;\r\n        }, () => {\r\n            this.router.navigate(['/admin']);\r\n            return false;\r\n        }) as any;\r\n    }\r\n}\r\n","import {DataTableFilter} from '@common/shared/data-table/filter-panel/data-table-filters';\r\nimport { SelectUserInputComponent } from '@common/core/ui/select-user-input/select-user-input/select-user-input.component';\r\n\r\nexport const FILE_ENTRY_INDEX_FILTERS: DataTableFilter[] = [\r\n    {\r\n        name: 'type',\r\n        column: 'type',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'any'},\r\n            {name: 'text', value: 'text'},\r\n            {name: 'audio', value: 'audio'},\r\n            {name: 'video', value: 'video'},\r\n            {name: 'image', value: 'image'},\r\n            {name: 'folder', value: 'folder'},\r\n            {name: 'pdf', value: 'pdf'},\r\n            {name: 'archive', value: 'archive'},\r\n        ]\r\n    },\r\n    {\r\n        name: 'status',\r\n        column: 'public',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'any'},\r\n            {name: 'public', value: true},\r\n            {name: 'private', value: false},\r\n        ]\r\n    },\r\n    {\r\n        name: 'Protection',\r\n        column: 'password',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'any'},\r\n            {name: 'has password', value: true},\r\n            {name: 'does not have password', value: false},\r\n        ]\r\n    },\r\n    {\r\n        name: 'uploaded between',\r\n        column: 'created_at',\r\n        type: 'date',\r\n    },\r\n    {\r\n        name: 'Owner',\r\n        column: 'owner',\r\n        component: SelectUserInputComponent,\r\n        type: 'user-select',\r\n    },\r\n];\r\n","<data-table [dataSource]=\"dataSource\" itemsName=\"files\" class=\"responsive-material-table\" matSort>\r\n    <div class=\"title\" headerActions trans>File Entries</div>\r\n\r\n    <button mat-icon-button [matTooltip]=\"'Delete selected' | trans\" (click)=\"maybeDeleteSelectedEntries()\" headerSelectedActions *ngIf=\"currentUser.hasPermission('files.delete')\">\r\n        <mat-icon svgIcon=\"delete\"></mat-icon>\r\n    </button>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let entry\" data-label=\"Name:\"> {{entry.name}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"file_name\">\r\n        <mat-header-cell *matHeaderCellDef trans>File Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let entry\" class=\"hidden-on-mobile\"> {{entry.file_name}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"type\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Type</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let entry\" data-label=\"Type:\"> {{entry.type}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"public\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Public</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let entry\" data-label=\"Public:\" trans> {{entry.public ? 'Yes' : 'No'}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"file_size\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Size</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let entry\" data-label=\"File Size:\"> {{entry.file_size ? (entry.file_size | formattedFileSize) : '-'}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"owner\">\r\n        <mat-header-cell *matHeaderCellDef trans>Owner</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let entry\">\r\n            <ng-container *ngIf=\"entry?.users[0]; else noUser\">\r\n                <img [src]=\"entry.users[0].avatar\">\r\n                <span>{{entry.users[0].display_name}}</span>\r\n            </ng-container>\r\n            <ng-template #noUser>-</ng-template>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"created_at\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Created At</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let entry\" class=\"hidden-on-mobile\"> {{entry.created_at | formattedDate}} </mat-cell>\r\n    </ng-container>\r\n</data-table>","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {Modal} from '../../core/ui/dialogs/modal.service';\r\nimport {ConfirmModalComponent} from '../../core/ui/confirm-modal/confirm-modal.component';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {FileEntry} from '../../uploads/types/file-entry';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {UploadsApiService} from '../../uploads/uploads-api.service';\r\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\r\nimport {Paginator} from '@common/shared/paginator.service';\r\nimport {FILE_ENTRY_INDEX_FILTERS} from '@common/admin/file-entry-index/file-entry-index-filters';\r\n\r\n@Component({\r\n    selector: 'file-entry-index',\r\n    templateUrl: './file-entry-index.component.html',\r\n    styleUrls: ['./file-entry-index.component.scss'],\r\n    providers: [Paginator],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FileEntryIndexComponent implements OnInit, OnDestroy {\r\n    @ViewChild(MatSort, { static: true }) matSort: MatSort;\r\n\r\n    public dataSource: PaginatedDataTableSource<FileEntry>;\r\n\r\n    constructor(\r\n        public paginator: Paginator<FileEntry>,\r\n        public currentUser: CurrentUser,\r\n        public settings: Settings,\r\n        private uploads: UploadsApiService,\r\n        private modal: Modal,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.dataSource = new PaginatedDataTableSource<FileEntry>({\r\n            uri: 'uploads',\r\n            dataPaginator: this.paginator,\r\n            matSort: this.matSort,\r\n            filters: FILE_ENTRY_INDEX_FILTERS,\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.paginator.destroy();\r\n    }\r\n\r\n    /**\r\n     * Delete currently selected entries.\r\n     */\r\n    public deleteSelectedEntries() {\r\n        const entryIds = this.dataSource.getSelectedItems();\r\n        this.uploads.delete({entryIds, deleteForever: true}).subscribe(() => {\r\n            this.dataSource.reset();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Ask entry to confirm deletion of selected tags\r\n     * and delete selected tags if entry confirms.\r\n     */\r\n    public maybeDeleteSelectedEntries() {\r\n        this.modal.show(ConfirmModalComponent, {\r\n            title: 'Delete Entries',\r\n            body:  'Are you sure you want to delete selected entries?',\r\n            ok:    'Delete'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.deleteSelectedEntries();\r\n        });\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component, Inject, Optional, ViewEncapsulation} from '@angular/core';\nimport {OVERLAY_PANEL_DATA} from '@common/core/ui/overlay-panel/overlay-panel-data';\nimport {OverlayPanelRef} from '@common/core/ui/overlay-panel/overlay-panel-ref';\nimport { matDialogAnimations } from '@angular/material/dialog';\n\n@Component({\n    selector: 'image-zoom-overlay',\n    templateUrl: './image-zoom-overlay.component.html',\n    styleUrls: ['./image-zoom-overlay.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[@dialogContainer]': `'enter'`\n    },\n    animations: [\n        matDialogAnimations.dialogContainer,\n    ]\n})\nexport class ImageZoomOverlayComponent {\n    constructor(\n        @Inject(OVERLAY_PANEL_DATA) @Optional() public data: {src: string, alt?: string},\n        private overlayPanelRef: OverlayPanelRef\n    ) {}\n\n    public close() {\n        this.overlayPanelRef.close();\n    }\n}\n","<img [src]=\"data.src\" [alt]=\"data.alt\">\r\n\r\n<button mat-mini-fab color=\"accent\" class=\"close-button\" (click)=\"close()\">\r\n    <mat-icon svgIcon=\"close\"></mat-icon>\r\n</button>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport {ImageZoomOverlayComponent} from '@common/core/ui/image-zoom/image-zoom-overlay/image-zoom-overlay.component';\n\n@Component({\n    selector: 'image-zoom',\n    templateUrl: './image-zoom.component.html',\n    styleUrls: ['./image-zoom.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageZoomComponent {\n    @Input() src: string;\n    @Input() alt: string;\n\n    constructor(private overlay: OverlayPanel) {}\n\n    public zoomImage() {\n        this.overlay.open(ImageZoomOverlayComponent, {\n            position: 'center',\n            origin: 'global',\n            data: {src: this.src, alt: this.alt},\n            panelClass: 'image-zoom-overlay-container'\n        });\n    }\n}\n","<img [src]=\"src\" [alt]=\"alt\" (click)=\"zoomImage()\">","<form class=\"panel\" (ngSubmit)=\"saveAds()\" [formGroup]=\"form\" ngNativeValidate>\r\n    <div class=\"header\" trans>Predefined AD Slots</div>\r\n\r\n    <div class=\"vert-row\" *ngFor=\"let ad of allAds()\">\r\n        <div class=\"input-container\">\r\n            <label [for]=\"ad.slot\" trans>{{ad.description}}</label>\r\n            <textarea [name]=\"ad.slot\" [id]=\"ad.slot\" [formControlName]=\"ad.slot\"></textarea>\r\n        </div>\r\n        <image-zoom [src]=\"getPreviewUrl(ad)\"></image-zoom>\r\n    </div>\r\n\r\n    <div class=\"setting-toggle-container margin-top margin-bottom\">\r\n        <mat-slide-toggle name=\"ads.disable\" id=\"ads.disable\" formControlName=\"ads.disable\" trans>Disable Ads</mat-slide-toggle>\r\n        <p trans>Disable all ad related functionality.</p>\r\n    </div>\r\n\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" class=\"save-button\" [disabled]=\"loading$ | async\" trans>Save</button>\r\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n</form>","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {AdSlotConfig} from '@common/core/config/app-config';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'ads-page',\r\n    templateUrl: './ads-page.component.html',\r\n    styleUrls: ['./ads-page.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AdsPageComponent implements OnInit {\r\n    public loading$ = new BehaviorSubject(false);\r\n    public form = this.fb.group({\r\n        'ads.disable': [false],\r\n    });\r\n\r\n    constructor(\r\n        public settings: Settings,\r\n        private toast: Toast,\r\n        private fb: FormBuilder,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.hydrate();\r\n    }\r\n\r\n    public saveAds() {\r\n        this.loading$.next(true);\r\n        this.settings.save({client: this.form.value})\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(() => {\r\n                this.toast.open('Ads updated');\r\n            }, () => {\r\n                this.toast.open(HttpErrors.Default);\r\n            });\r\n    }\r\n\r\n    public allAds() {\r\n        return this.settings.get('vebto.admin.ads', []) as AdSlotConfig[];\r\n    }\r\n\r\n    public getPreviewUrl(config: AdSlotConfig): string {\r\n        // ads.splash.top => splash-top\r\n        const name = config.slot.replace(/\\./g, '-').replace('ads-', '');\r\n        return `client/assets/images/verts/${name}.png`;\r\n    }\r\n\r\n    private hydrate() {\r\n        const settings = this.settings.getFlat() || {};\r\n        this.form.patchValue({'ads.disable': settings['ads.disable']});\r\n        this.allAds().forEach(ad => {\r\n            this.form.addControl(ad.slot, this.fb.control(settings[ad.slot]));\r\n        });\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, ContentChildren, ContentChild, Input, forwardRef, Inject, ViewChild, EventEmitter, isDevMode, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, END, HOME, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r242 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r242.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r242.disabled);\n} }\nconst _c4 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c5 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatNavList.prototype._stateChanges;\n}\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatList.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatList.prototype._elementRef;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._isInteractiveList;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._list;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._destroyed;\n    /** @type {?} */\n    MatListItem.prototype._lines;\n    /** @type {?} */\n    MatListItem.prototype._avatar;\n    /** @type {?} */\n    MatListItem.prototype._icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/selection-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the selection list that emitted the event.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.source;\n    /**\n     * Reference to the option that has been changed.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.option;\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n        this._inputsInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSelectionList)))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._hasFocus;\n    /** @type {?} */\n    MatListOption.prototype._avatar;\n    /** @type {?} */\n    MatListOption.prototype._icon;\n    /** @type {?} */\n    MatListOption.prototype._lines;\n    /**\n     * DOM element containing the item's text.\n     * @type {?}\n     */\n    MatListOption.prototype._text;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatListOption.prototype.checkboxPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._color;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._inputsInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._changeDetector;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatListOption.prototype.selectionList;\n}\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     * @param {?} _changeDetector\n     */\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /**\n         * The tabindex of the selection list.\n         */\n        this._tabIndex = -1;\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether selection is limited to one or multiple items (default multiple).\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (isDevMode() && this._contentInitialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateTabIndex();\n        }));\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    this.options.find((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.selected)) ? this.selectAll() : this.deselectAll();\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * When the selection list is focused, we want to move focus to an option within the list. Do this\n     * by setting the appropriate option to be active.\n     * @return {?}\n     */\n    _onFocus() {\n        /** @type {?} */\n        const activeIndex = this._keyManager.activeItemIndex;\n        if (!activeIndex || (activeIndex === -1)) {\n            // If there is no active index, set focus to the first option.\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            // Otherwise, set focus to the active option.\n            this._keyManager.setActiveItem(activeIndex);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     * @private\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        }));\n    }\n    /**\n     * Updates the tabindex based upon if the selection list is empty.\n     * @private\n     * @return {?}\n     */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelectionList_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelectionList_blur_HostBindingHandler() { return ctx._onTouched(); })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._contentInitialized;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._keyManager;\n    /**\n     * The option components contained within this selection-list.\n     * @type {?}\n     */\n    MatSelectionList.prototype.options;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectionChange;\n    /**\n     * Tabindex of the selection list.\n     * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n     * @type {?}\n     */\n    MatSelectionList.prototype.tabIndex;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.color;\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     * @type {?}\n     */\n    MatSelectionList.prototype.compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._disabled;\n    /**\n     * The currently selected options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectedOptions;\n    /**\n     * The tabindex of the selection list.\n     * @type {?}\n     */\n    MatSelectionList.prototype._tabIndex;\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._onChange;\n    /**\n     * Keeps track of the currently-selected value.\n     * @type {?}\n     */\n    MatSelectionList.prototype._value;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._destroyed;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._onTouched;\n    /**\n     * Whether the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._isDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"data.plan\" trans>Update Plan Details</h2>\r\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"!data.plan\" trans>Create a New Plan</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<form autocomplete=\"off\" (ngSubmit)=\"confirm()\" ngNativeValidate *ngIf=\"errors$ | async as errors\" [formGroup]=\"form\">\r\n    <div class=\"many-inputs mat-dialog-content\" mat-dialog-content>\r\n        <div class=\"input-container\">\r\n            <label for=\"name\" trans>Name</label>\r\n            <input type=\"text\" id=\"name\" formControlName=\"name\" required>\r\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n            <label for=\"parent_id\" trans>Parent Plan</label>\r\n            <select id=\"parent_id\" formControlName=\"parent_id\" required>\r\n                <option [ngValue]=\"null\" trans>None</option>\r\n                <option [ngValue]=\"plan.id\" *ngFor=\"let plan of getBasePlans()\">{{plan.name}}</option>\r\n            </select>\r\n            <p trans>Used for creating yearly, weekly etc versions of base plan. Child plans will inherit their parent permissions/features.</p>\r\n            <div class=\"error\" *ngIf=\"errors.parent_id\">{{errors.parent_id}}</div>\r\n        </div>\r\n\r\n       <ng-container *ngIf=\"!formValue().free && !data.plan\">\r\n           <div class=\"input-container\">\r\n               <label for=\"amount\" trans>Amount</label>\r\n               <input type=\"number\" step=\"0.01\" id=\"amount\" formControlName=\"amount\" required [min]=\"getMinAmount()\" [max]=\"getMaxAmount()\">\r\n               <p trans>How much subscribers of this plan should be charged. (Dollars, euros etc.)</p>\r\n               <p trans>For example, Amount=100, Interval=Year and Interval Count=1, will charge user 100 dollars every year.</p>\r\n               <div class=\"error\" *ngIf=\"errors.amount\">{{errors.amount}}</div>\r\n           </div>\r\n\r\n           <div class=\"input-container\" *ngIf=\"!formValue().parent_id\">\r\n               <label for=\"currency\" trans>Currency</label>\r\n               <select id=\"currency\" formControlName=\"currency\" required>\r\n                   <option [ngValue]=\"currency.code\" *ngFor=\"let currency of currencies$ | async\">{{currency.code}} - {{currency.name}}</option>\r\n               </select>\r\n               <div class=\"error\" *ngIf=\"errors.currency\">{{errors.currency}}</div>\r\n           </div>\r\n\r\n           <div class=\"input-container\" *ngIf=\"!formValue().parent_id\">\r\n               <label for=\"interval\" trans>Interval</label>\r\n               <select id=\"interval\" class=\"interval-select\" formControlName=\"interval\" required>\r\n                   <option [ngValue]=\"interval\" *ngFor=\"let interval of intervals\">{{interval}}</option>\r\n               </select>\r\n               <p trans>The frequency with which a subscription should be billed.</p>\r\n               <div class=\"error\" *ngIf=\"errors.interval\">{{errors.interval}}</div>\r\n           </div>\r\n\r\n           <div class=\"input-container\">\r\n               <label for=\"interval_count\" trans>Interval Count</label>\r\n               <input type=\"number\" id=\"interval_count\" formControlName=\"interval_count\" required min=\"1\" max=\"12\">\r\n               <p trans>The number of intervals (specified in the interval property above) between each subscription billing. For example, Interval=Month and Interval Count=3 bills every 3 months.</p>\r\n               <div class=\"error\" *ngIf=\"errors.interval_count\">{{errors.interval_count}}</div>\r\n           </div>\r\n       </ng-container>\r\n\r\n        <ng-container *ngIf=\"!formValue().parent_id\">\r\n            <div class=\"input-container\">\r\n                <label for=\"position\" trans>Position</label>\r\n                <select type=\"text\" id=\"position\" formControlName=\"position\" required>\r\n                    <option [ngValue]=\"1\">1</option>\r\n                    <option [ngValue]=\"2\">2</option>\r\n                    <option [ngValue]=\"3\">3</option>\r\n                    <option [ngValue]=\"4\">4</option>\r\n                    <option [ngValue]=\"5\">5</option>\r\n                    <option [ngValue]=\"6\">6</option>\r\n                    <option [ngValue]=\"7\">7</option>\r\n                    <option [ngValue]=\"8\">8</option>\r\n                </select>\r\n                <p trans>Order of plans. Lower position will appear first.</p>\r\n                <div class=\"error\" *ngIf=\"errors.position\">{{errors.position}}</div>\r\n            </div>\r\n\r\n            <div class=\"setting-toggle-container\">\r\n                <mat-slide-toggle id=\"recommended\" formControlName=\"recommended\" trans>Recommended</mat-slide-toggle>\r\n                <p trans>Plan will be marked as \"Most Popular\" and emphasized to users.</p>\r\n            </div>\r\n\r\n            <div class=\"setting-toggle-container\">\r\n                <mat-slide-toggle id=\"free\" formControlName=\"free\" trans>Free</mat-slide-toggle>\r\n                <p trans>Basic free plan that will be assigned to new users that have not upgraded to other plans.</p>\r\n            </div>\r\n\r\n            <div class=\"setting-toggle-container\">\r\n                <mat-slide-toggle id=\"show_permissions\" formControlName=\"show_permissions\" trans>Show Permissions</mat-slide-toggle>\r\n                <p trans>Whether plan permissions should be displayed as features to users.</p>\r\n            </div>\r\n\r\n            <permission-manager formControlName=\"permissions\"></permission-manager>\r\n            <div class=\"error\" *ngIf=\"errors?.permissions\">{{errors?.permissions}}</div>\r\n\r\n            <div class=\"plan-features\">\r\n                <div class=\"section-title\" trans>Custom Features</div>\r\n\r\n                <ul class=\"feature-list\" cdkDropList (cdkDropListDropped)=\"reorderPlanFeatures($event)\">\r\n                    <li class=\"feature-list-item\" *ngFor=\"let feature of features$ | async\" [attr.data-id]=\"feature.id\" cdkDrag>\r\n                        <button cdkDragHandle mat-icon-button class=\"drag-handle\"><mat-icon svgIcon=\"drag-handle\" matListIcon></mat-icon></button>\r\n                        <div class=\"text\">{{feature.content}}</div>\r\n                        <button class=\"delete-button\" mat-icon-button (click)=\"removeFeature(feature)\"><mat-icon svgIcon=\"delete\" matListIcon></mat-icon></button>\r\n                    </li>\r\n                </ul>\r\n\r\n                <p *ngIf=\"!(features$ | async).length\" trans>No custom features yet.</p>\r\n\r\n                <form (ngSubmit)=\"addFeature()\" ngNativeValidate>\r\n                    <div class=\"input-container\">\r\n                        <div class=\"input-with-action\">\r\n                            <input type=\"text\" name=\"new-feature\" placeholder=\"+New Feature\" trans-placeholder [(ngModel)]=\"newFeature\" autocomplete=\"false\" required>\r\n                            <button type=\"submit\" mat-flat-button color=\"accent\" trans>Add</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div class=\"available-space\">\r\n                <div class=\"section-title\" trans>Available Space</div>\r\n\r\n                <space-input formControlName=\"available_space\">\r\n                    <p class=\"description\" trans>Hard drive space available to users subscribed to this plan.</p>\r\n                    <div class=\"error\" *ngIf=\"errors.available_space\">{{errors.available_space}}</div>\r\n                </space-input>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <div class=\"no-input-error\" *ngIf=\"errors.general\">{{errors.general}}</div>\r\n    </div>\r\n\r\n    <div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\r\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel\" trans>Cancel</button>\r\n        <button type=\"submit\" class=\"button primary\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\r\n            <span *ngIf=\"data.plan\" trans>Update Plan</span>\r\n            <span *ngIf=\"!data.plan\" trans>Create Plan</span>\r\n        </button>\r\n    </div>\r\n</form>\r\n\r\n<loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\r\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {Plans} from '@common/shared/billing/plans.service';\r\nimport {Currency, ValueLists} from '@common/core/services/value-lists.service';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {randomString} from '@common/core/utils/random-string';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {FormBuilder} from '@angular/forms';\r\n\r\nexport interface CrupdatePlanModalData {\r\n    plan?: Plan;\r\n    plans: Plan[];\r\n}\r\n\r\ninterface Errors extends Partial<Plan> {\r\n    general?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'crupdate-plan-modal',\r\n    templateUrl: './crupdate-plan-modal.component.html',\r\n    styleUrls: ['./crupdate-plan-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CrupdatePlanModalComponent implements OnInit {\r\n    public loading$ = new BehaviorSubject(false);\r\n    public newFeature: string;\r\n    public features$ = new BehaviorSubject<{content: string, id: string}[]>([]);\r\n    public errors$ = new BehaviorSubject<Errors>({});\r\n    public currencies$ = new BehaviorSubject<Currency[]>([]);\r\n    public intervals = ['day', 'week', 'month', 'year'];\r\n    private allPlans$ = new BehaviorSubject<Plan[]>([]);\r\n    public form = this.fb.group({\r\n        name: [''],\r\n        parent_id: [],\r\n        free: [false],\r\n        recommended: [false],\r\n        show_permissions: [false],\r\n        amount: [],\r\n        currency: [],\r\n        interval: [],\r\n        interval_count: [],\r\n        position: [],\r\n        available_space: [],\r\n        permissions: [[]],\r\n    });\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<CrupdatePlanModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: CrupdatePlanModalData,\r\n        public plans: Plans,\r\n        private toast: Toast,\r\n        private valueLists: ValueLists,\r\n        private fb: FormBuilder,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.resetState();\r\n        this.allPlans$.next(this.data.plans || []);\r\n\r\n        this.valueLists.get(['currencies']).subscribe(response => {\r\n            this.currencies$.next(Object.values(response.currencies));\r\n        });\r\n\r\n        if (this.data.plan) {\r\n            this.hydrateModel(this.data.plan);\r\n        }\r\n    }\r\n\r\n    public confirm() {\r\n        this.loading$.next(true);\r\n        let request;\r\n\r\n        if (this.data.plan) {\r\n            request = this.plans.update(this.data.plan.id, this.getPayload());\r\n        } else {\r\n            request = this.plans.create(this.getPayload());\r\n        }\r\n\r\n        request\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.close(response.plan);\r\n                const action = this.data.plan ? 'updated' : 'created';\r\n                this.toast.open('Plan has been ' + action);\r\n            }, err => {\r\n                this.errors$.next(err.messages);\r\n            });\r\n    }\r\n\r\n    public getPayload() {\r\n        const payload = {...this.form.value};\r\n        payload.features = this.features$.value.map(feature => feature.content);\r\n\r\n        const currency = this.currencies$.value.find(curr => curr.code === payload.currency);\r\n        payload.currency_symbol = currency.symbol;\r\n\r\n        return payload;\r\n    }\r\n\r\n    public close(data?: Plan) {\r\n        this.resetState();\r\n        this.dialogRef.close(data);\r\n    }\r\n\r\n    public addFeature() {\r\n        const exists = this.features$.value.findIndex(curr => curr.content === this.newFeature) > -1;\r\n        if (exists || ! this.newFeature) return;\r\n        this.features$.next([...this.features$.value, {content: this.newFeature, id: randomString(5)}]);\r\n        this.newFeature = null;\r\n    }\r\n\r\n    public removeFeature(feature: {content: string, id: string}) {\r\n        const newFeatures = this.features$.value.filter(f => f.id !== feature.id);\r\n        this.features$.next(newFeatures);\r\n    }\r\n\r\n    public getBasePlans(): Plan[] {\r\n        return this.allPlans$.value.filter(plan => !plan.parent_id && !plan.free);\r\n    }\r\n\r\n    private hydrateModel(plan: Plan) {\r\n        this.form.patchValue(plan);\r\n        const newFeatures = plan.features.map(feature => {\r\n            return {content: feature, id: randomString(5)};\r\n        });\r\n        this.features$.next(newFeatures);\r\n    }\r\n\r\n    private resetState() {\r\n        this.form.reset({\r\n            currency: 'USD',\r\n            interval: 'month',\r\n            interval_count: 1,\r\n            position: 1,\r\n            permissions: [],\r\n            free: false,\r\n            recommended: false,\r\n            show_permissions: false,\r\n        });\r\n        this.features$.next([]);\r\n        this.errors$.next({});\r\n    }\r\n\r\n    public reorderPlanFeatures(e: CdkDragDrop<void>) {\r\n        const newFeatures = [...this.features$.value];\r\n        moveItemInArray(newFeatures, e.previousIndex, e.currentIndex);\r\n        this.features$.next(newFeatures);\r\n    }\r\n\r\n    public formValue() {\r\n        return this.form.value as Partial<Plan>;\r\n    }\r\n\r\n    public getMinAmount(): number {\r\n        // child plans can't be set as free,\r\n        // so should have amount more then 0\r\n        return this.form.get('parent_id').value ? 1 : 0;\r\n    }\r\n\r\n    public getMaxAmount(): number {\r\n        if (this.form.get('parent_id').value) {\r\n            // child plan amount per interval should be cheaper then parent\r\n            const parent = this.allPlans$.value.find(p => p.id === this.form.get('parent_id').value);\r\n            return ((parent.amount / parent.interval_count) * this.form.get('interval_count').value) - 0.01;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import {DataTableFilter} from '@common/shared/data-table/filter-panel/data-table-filters';\r\n\r\nexport const PLAN_INDEX_FILTERS: DataTableFilter[] = [\r\n    {\r\n        name: 'currency',\r\n        column: 'currency',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'any'},\r\n            {name: 'USD', value: 'USD'},\r\n            {name: 'EUR', value: 'EUR'},\r\n            {name: 'Pound Sterling', value: 'GBP'},\r\n            {name: 'Canadian Dollar', value: 'CAD'},\r\n        ]\r\n    },\r\n    {\r\n        name: 'interval',\r\n        column: 'interval',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'any'},\r\n            {name: 'day', value: 'day'},\r\n            {name: 'week', value: 'week'},\r\n            {name: 'month', value: 'month'},\r\n            {name: 'year', value: 'year'},\r\n        ]\r\n    },\r\n    {\r\n        name: 'type',\r\n        column: 'parent_id',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'any'},\r\n            {name: 'parent', value: false},\r\n            {name: 'child', value: true}\r\n        ]\r\n    },\r\n    {\r\n        name: 'recommended',\r\n        column: 'recommended',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'any'},\r\n            {name: 'yes', value: true},\r\n            {name: 'no', value: false}\r\n        ]\r\n    },\r\n];\r\n","<data-table [dataSource]=\"dataSource\" itemsName=\"plans\" matSort class=\"responsive-material-table\">\r\n    <div headerActions>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\" (click)=\"showCrupdatePlanModal()\" *ngIf=\"currentUser.hasPermission('plans.create')\" trans>Add</button>\r\n        <button mat-button [disabled]=\"loading$ | async\" (click)=\"syncPlans()\" *ngIf=\"currentUser.hasPermission('plans.create')\" [matTooltip]=\"'Sync if one of payment gateways was enabled after plan has already been created'\" trans>Sync</button>\r\n    </div>\r\n\r\n    <button mat-icon-button [matTooltip]=\"'Delete selected' | trans\" (click)=\"maybeDeleteSelectedPlans()\" *ngIf=\"currentUser.hasPermission('plans.delete')\" headerSelectedActions>\r\n        <mat-icon svgIcon=\"delete\"></mat-icon>\r\n    </button>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let plan\" data-label=\"Name: \"> {{plan.name}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"parent\">\r\n        <mat-header-cell *matHeaderCellDef trans>Parent Plan</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let plan\" data-label=\"Parent: \"> {{plan.parent ? plan.parent.name : '-'}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amount\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Amount</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let plan\" data-label=\"Amount: \"> {{plan.free ? 'Free' : (plan.amount | currency:plan.currency)}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"currency\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Currency</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let plan\" data-label=\"Currency: \"> {{plan.free ? 'Free' : plan.currency}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"interval\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Interval</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let plan\" data-label=\"Interval: \" trans> {{plan.free ? 'Free' : plan.interval}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"recommended\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Recommended</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let plan\" data-label=\"Recommended: \" trans> {{plan.parent_id ? '-' : (plan.recommended ? 'Yes' : 'No') }} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"position\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Position</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let plan\" data-label=\"Position: \"> {{plan.parent_id ? '-' : plan.position}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"created_at\">\r\n        <mat-header-cell *matHeaderCellDef trans>Created At</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let plan\" data-label=\"Created: \"> {{plan.created_at | formattedDate}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"edit\">\r\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let plan\">\r\n            <button mat-icon-button (click)=\"showCrupdatePlanModal(plan)\" *ngIf=\"currentUser.hasPermission('plans.update')\" [matTooltip]=\"'Edit plan' | trans\">\r\n                <mat-icon svgIcon=\"edit\"></mat-icon>\r\n            </button>\r\n        </mat-cell>\r\n    </ng-container>\r\n</data-table>","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {CrupdatePlanModalComponent} from '../crupdate-plan-modal/crupdate-plan-modal.component';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {Plans, PLANS_BASE_URI} from '@common/shared/billing/plans.service';\r\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport {Paginator} from '@common/shared/paginator.service';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {PLAN_INDEX_FILTERS} from '@common/admin/billing/plans/plan-index/plan-index-filters';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'plan-index',\r\n    templateUrl: './plan-index.component.html',\r\n    styleUrls: ['./plan-index.component.scss'],\r\n    providers: [Paginator, Plans],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PlanIndexComponent implements OnInit {\r\n    @ViewChild(MatPaginator, { static: true }) matPaginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) matSort: MatSort;\r\n    public dataSource: PaginatedDataTableSource<Plan>;\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(\r\n        public paginator: Paginator<Plan>,\r\n        private plans: Plans,\r\n        private modal: Modal,\r\n        public currentUser: CurrentUser,\r\n        private toast: Toast,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.dataSource = new PaginatedDataTableSource<Plan>({\r\n            uri: PLANS_BASE_URI,\r\n            dataPaginator: this.paginator,\r\n            matPaginator: this.matPaginator,\r\n            matSort: this.matSort,\r\n            filters: PLAN_INDEX_FILTERS,\r\n        });\r\n    }\r\n\r\n    public maybeDeleteSelectedPlans() {\r\n        this.modal.show(ConfirmModalComponent, {\r\n            title: 'Delete Plans',\r\n            body:  'Are you sure you want to delete selected plans?',\r\n            ok:    'Delete'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.deleteSelectedPlans();\r\n        });\r\n    }\r\n\r\n    public deleteSelectedPlans() {\r\n        this.loading$.next(true);\r\n        const ids = this.dataSource.selectedRows.selected.map(plan => plan.id);\r\n        this.plans.delete({ids})\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(() => {\r\n                this.dataSource.reset();\r\n            });\r\n    }\r\n\r\n    public showCrupdatePlanModal(plan?: Plan) {\r\n        this.modal.open(\r\n            CrupdatePlanModalComponent,\r\n            {plan, plans: this.dataSource.getData()},\r\n            'crupdate-plan-modal-container',\r\n        )\r\n        .afterClosed()\r\n        .subscribe(data => {\r\n            if ( ! data) return;\r\n            this.dataSource.reset();\r\n        });\r\n    }\r\n\r\n    public syncPlans() {\r\n        this.loading$.next(true);\r\n        this.plans.sync()\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(() => {\r\n                this.toast.open('Synced plans across all enabled payment gateways');\r\n            });\r\n    }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"data.subscription\" trans>Update Subscription Details</h2>\r\n    <h2 class=\"modal-title\" mat-dialog-title *ngIf=\"!data.subscription\" trans>Create a New Subscription</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<form autocomplete=\"off\" (ngSubmit)=\"confirm()\" *ngIf=\"errors$ | async as errors\" ngNativeValidate>\r\n    <div class=\"many-inputs mat-dialog-content\" mat-dialog-content>\r\n\r\n        <div class=\"input-container\">\r\n            <label for=\"user\" trans>User</label>\r\n            <input type=\"text\" id=\"user\" placeholder=\"Search for user...\" [formControl]=\"userAutocomplete\" [matAutocomplete]=\"auto\" required>\r\n            <div class=\"error\" *ngIf=\"errors.user_id\">{{errors.user_id}}</div>\r\n            <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n                <mat-option *ngFor=\"let user of filteredUsers | async\" [value]=\"user\">{{ user.email }}</mat-option>\r\n            </mat-autocomplete>\r\n        </div>\r\n\r\n        <ng-container [formGroup]=\"form\">\r\n            <div class=\"input-container\">\r\n                <label for=\"plan\" trans>Plan</label>\r\n                <select id=\"plan\" formControlName=\"plan_id\" required>\r\n                    <option [ngValue]=\"plan.id\" *ngFor=\"let plan of plans\">\r\n                        <full-plan-name [plan]=\"plan\"></full-plan-name>\r\n                        ({{plan.amount | currency:plan.currency}})\r\n                    </option>\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"description\" trans>Description</label>\r\n                <textarea id=\"description\" formControlName=\"description\"></textarea>\r\n                <div class=\"error\" *ngIf=\"errors.description\">{{errors.description}}</div>\r\n            </div>\r\n\r\n            <div class=\"input-container date-picker-input-container\">\r\n                <label for=\"renews_at\" trans>Renews At</label>\r\n                <input id=\"renews_at\" formControlName=\"renews_at\" [matDatepicker]=\"renewsAtDatePicker\" (click)=\"toggleDatePicker(renewsAtDatePicker)\">\r\n                <mat-datepicker-toggle [for]=\"renewsAtDatePicker\"></mat-datepicker-toggle>\r\n                <p trans>This will only change local records. User will continue to be billed on their original cycle on the payment gateway.</p>\r\n                <div class=\"error\" *ngIf=\"errors.renews_at\">{{errors.renews_at}}</div>\r\n                <mat-datepicker #renewsAtDatePicker></mat-datepicker>\r\n            </div>\r\n\r\n            <div class=\"input-container date-picker-input-container\">\r\n                <label for=\"ends_at\" trans>Ends At</label>\r\n                <input id=\"ends_at\" formControlName=\"ends_at\" [matDatepicker]=\"endsAtDatePicker\" (click)=\"toggleDatePicker(endsAtDatePicker)\">\r\n                <p trans>This will only change local records. User will continue to be billed on their original cycle on the payment gateway.</p>\r\n                <div class=\"error\" *ngIf=\"errors.ends_at\">{{errors.ends_at}}</div>\r\n                <mat-datepicker-toggle [for]=\"endsAtDatePicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #endsAtDatePicker></mat-datepicker>\r\n            </div>\r\n\r\n            <div class=\"no-input-error\" *ngIf=\"errors.general\">{{errors.general}}</div>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\r\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel\" trans>Cancel</button>\r\n        <button type=\"submit\" class=\"button primary\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\r\n            <span *ngIf=\"data.subscription\" trans>Update</span>\r\n            <span *ngIf=\"!data.subscription\" trans>Create</span>\r\n        </button>\r\n    </div>\r\n</form>\r\n\r\n<loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MatDatepicker} from '@angular/material/datepicker';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {FormBuilder, FormControl} from '@angular/forms';\r\nimport {debounceTime, distinctUntilChanged, finalize, switchMap} from 'rxjs/operators';\r\nimport {BehaviorSubject, Observable, of as observableOf, Subject} from 'rxjs';\r\nimport {User} from '@common/core/types/models/User';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {Users} from '@common/auth/users.service';\r\nimport {Subscription} from '@common/shared/billing/models/subscription';\r\nimport {Plans} from '@common/shared/billing/plans.service';\r\nimport {Subscriptions} from '@common/shared/billing/subscriptions.service';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\n\r\nexport interface CrupdateSubscriptionModalData {\r\n    subscription?: Subscription;\r\n}\r\n\r\ninterface Errors extends Partial<Subscription> {\r\n    general?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'crupdate-subscription-modal',\r\n    templateUrl: './crupdate-subscription-modal.component.html',\r\n    styleUrls: ['./crupdate-subscription-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CrupdateSubscriptionModalComponent implements OnInit {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    public form = this.fb.group({\r\n        plan_id: [''],\r\n        description: [''],\r\n        renews_at: [''],\r\n        ends_at: [''],\r\n    });\r\n    \r\n    public errors$ = new BehaviorSubject<Errors>({});\r\n\r\n    public userAutocomplete: FormControl = new FormControl(null);\r\n    public filteredUsers: Observable<User[]> = new Subject();\r\n    public plans: Plan[] = [];\r\n    \r\n    constructor(\r\n        private dialogRef: MatDialogRef<CrupdateSubscriptionModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateSubscriptionModalData,\r\n        public subscriptions: Subscriptions,\r\n        private toast: Toast,\r\n        private users: Users,\r\n        private plansApi: Plans,\r\n        private fb: FormBuilder,\r\n    ) {\r\n        this.resetState();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.resetState();\r\n        this.bindToUserAutocomplete();\r\n        this.fetchPlans();\r\n\r\n        // toggle renews_at/ends_at enabled/disabled state\r\n        this.form.get('ends_at').valueChanges.pipe(distinctUntilChanged()).subscribe(value => {\r\n            value ? this.form.get('renews_at').disable() : this.form.get('renews_at').enable();\r\n        });\r\n        this.form.get('renews_at').valueChanges.pipe(distinctUntilChanged()).subscribe(value => {\r\n            value ? this.form.get('ends_at').disable() : this.form.get('ends_at').enable();\r\n        });\r\n\r\n        if (this.data.subscription) {\r\n            this.hydrateModel(this.data.subscription);\r\n        }\r\n    }\r\n    \r\n    public confirm() {\r\n        this.loading$.next(true);\r\n        let request;\r\n\r\n        if (this.data.subscription) {\r\n            request = this.subscriptions.update(this.data.subscription.id, this.getPayload());\r\n        } else {\r\n            request = this.subscriptions.create(this.getPayload());\r\n        }\r\n\r\n        request\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.close(response.subscription);\r\n                const action = this.data.subscription ? 'updated' : 'created';\r\n                this.toast.open('Subscription ' + action);\r\n            }, err => this.errors$.next(err.messages));\r\n    }\r\n    \r\n    public close(data?: any) {\r\n        this.resetState();\r\n        this.dialogRef.close(data);\r\n    }\r\n\r\n    public displayFn(user?: User): string {\r\n        return user ? user.email : null;\r\n    }\r\n    \r\n    private hydrateModel(subscription: Subscription) {\r\n        const data = {...subscription};\r\n\r\n        if (data.renews_at) {\r\n            data.renews_at = this.mysqlToDate(data.renews_at);\r\n        }\r\n\r\n        if (data.ends_at) {\r\n            data.ends_at = this.mysqlToDate(data.ends_at);\r\n        }\r\n\r\n        if (subscription.user_id) {\r\n            this.userAutocomplete.setValue(subscription.user);\r\n        }\r\n        \r\n        this.form.patchValue(data);\r\n    }\r\n    \r\n    private getPayload() {\r\n        // const payload = {\r\n        //     plan_id: this.model.plan_id,\r\n        //     description: this.model.description,\r\n        // } as Partial<Subscription>;\r\n        //\r\n        // const renewsAt = this.dateToMysql(this.model.renews_at as any),\r\n        //     endsAt = this.dateToMysql(this.model.ends_at as any);\r\n        //\r\n        // if (renewsAt) payload.renews_at = renewsAt as any;\r\n        // if (endsAt) payload.ends_at = endsAt as any;\r\n        //\r\n        // // if we are creating a new subscription, start user ID to payload\r\n        // if (!this.updating && this.userAutocomplete.value) {\r\n        //     payload['user_id'] = this.userAutocomplete.value.id;\r\n        // }\r\n        //\r\n        // return payload;\r\n\r\n        const payload = this.form.value as Partial<Subscription>;\r\n\r\n        const renewsAt = this.dateToMysql(payload.renews_at),\r\n            endsAt = this.dateToMysql(payload.ends_at);\r\n\r\n        if (renewsAt) payload.renews_at = renewsAt as string;\r\n        if (endsAt) payload.ends_at = endsAt as string;\r\n\r\n        // if we are creating a new subscription, add user ID to payload\r\n        if (!this.data.subscription && this.userAutocomplete.value) {\r\n            payload.user_id = this.userAutocomplete.value.id;\r\n        }\r\n        \r\n        return payload;\r\n    }\r\n\r\n    /**\r\n     * Format js date instance into mysql timestamp format.\r\n     */\r\n    private dateToMysql(date: string | Date) {\r\n        if (!date || typeof date === 'string') return date;\r\n        return date.toJSON().split('.')[0].replace('T', ' ');\r\n    }\r\n\r\n    private mysqlToDate(date: string): any {\r\n        const t = date.split(/[- :]/) as any[];\r\n        return new Date(Date.UTC(t[0], t[1] - 1, t[2], t[3], t[4], t[5]));\r\n    }\r\n    \r\n    private resetState() {\r\n        this.form.reset();\r\n        this.errors$.next({});\r\n    }\r\n\r\n    public toggleDatePicker(datePicker: MatDatepicker<Date>) {\r\n        if (datePicker.opened) {\r\n            datePicker.close();\r\n        } else {\r\n            datePicker.open();\r\n        }\r\n    }\r\n    \r\n    private bindToUserAutocomplete() {\r\n        this.filteredUsers = this.userAutocomplete.valueChanges.pipe(\r\n            debounceTime(400),\r\n            switchMap(query => {\r\n                if (!query) return observableOf([]);\r\n                return this.users.getAll({query});\r\n            })\r\n        );\r\n    }\r\n    \r\n    private fetchPlans() {\r\n        this.plansApi.all().subscribe(response => {\r\n            this.plans = response.pagination.data;\r\n\r\n            // select first plan, if none is selected yet\r\n            if (!this.form.value.plan_id && this.plans.length) {\r\n                this.form.patchValue({plan_id: this.plans[0].id});\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {DataTableFilter} from '@common/shared/data-table/filter-panel/data-table-filters';\r\n\r\nexport const SUBSCRIPTION_INDEX_FILTERS: DataTableFilter[] = [\r\n    {\r\n        name: 'status',\r\n        column: 'cancelled',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'any'},\r\n            {name: 'active', value: false},\r\n            {name: 'cancelled', value: true},\r\n        ]\r\n    },\r\n    {\r\n        name: 'gateway',\r\n        column: 'gateway',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'any'},\r\n            {name: 'paypal', value: 'paypal'},\r\n            {name: 'stripe', value: 'stripe'},\r\n        ]\r\n    },\r\n    {\r\n        name: 'subscribed between',\r\n        column: 'created_at',\r\n        type: 'date',\r\n    },\r\n];\r\n","<data-table [dataSource]=\"dataSource\" itemsName=\"subscriptions\" matSort class=\"responsive-material-table\">\r\n    <button mat-raised-button color=\"accent\" headerActions [disabled]=\"loading$ | async\" (click)=\"openCrupdateSubscriptionModal()\" *ngIf=\"currentUser.hasPermission('subscriptions.create')\" trans>Add</button>\r\n\r\n    <ng-container matColumnDef=\"avatar\">\r\n        <mat-header-cell *matHeaderCellDef trans>Avatar</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let subscription\"> <img *ngIf=\"subscription.user\" [src]=\"subscription.user.avatar\"> </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"user\">\r\n        <mat-header-cell *matHeaderCellDef trans>User</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let subscription\" data-label=\"User: \"> {{subscription?.user?.email}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"gateway\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Gateway</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let subscription\" data-label=\"Gateway: \"> {{subscription.gateway}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"cancelled\">\r\n        <mat-header-cell *matHeaderCellDef trans>Cancelled</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let subscription\" data-label=\"Cancelled: \"> {{subscription.cancelled ? 'Yes' : 'No' }} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"on_grace_period\">\r\n        <mat-header-cell *matHeaderCellDef trans>On Grace Period</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let subscription\" class=\"hidden-on-mobile\"> {{subscription.on_grace_period ? 'Yes' : 'No' }} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"renews_at\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Renews At</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let subscription\" data-label=\"Renews: \"> {{subscription.renews_at ? (subscription.renews_at | formattedDate) : '-'}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"ends_at\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Ends At</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let subscription\" data-label=\"Ends: \"> {{subscription.ends_at ? (subscription.ends_at | formattedDate) : '-'}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"created_at\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Subscribed At</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let subscription\" data-label=\"Created: \"> {{subscription.created_at | formattedDate}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"edit\">\r\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let subscription\">\r\n            <ng-container *ngIf=\"currentUser.hasPermission('subscriptions.delete')\">\r\n                <button mat-icon-button (click)=\"openCrupdateSubscriptionModal(subscription)\" [matTooltip]=\"'Edit' | trans\"><mat-icon svgIcon=\"edit\"></mat-icon></button>\r\n                <button mat-icon-button (click)=\"maybeCancelSubscription(subscription)\" [disabled]=\"subscription.cancelled\" [matTooltip]=\"'Cancel/Suspend' | trans\"><mat-icon svgIcon=\"pause\"></mat-icon></button>\r\n                <button mat-icon-button (click)=\"maybeDeleteSubscription(subscription)\" [matTooltip]=\"'Delete' | trans\"><mat-icon svgIcon=\"delete\"></mat-icon></button>\r\n            </ng-container>\r\n        </mat-cell>\r\n    </ng-container>\r\n</data-table>","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {CrupdateSubscriptionModalComponent} from '../crupdate-subscription-modal/crupdate-subscription-modal.component';\r\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\r\nimport {Subscription} from '@common/shared/billing/models/subscription';\r\nimport {Subscriptions} from '@common/shared/billing/subscriptions.service';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport {Paginator} from '@common/shared/paginator.service';\r\nimport {SUBSCRIPTION_INDEX_FILTERS} from '@common/admin/billing/subscriptions/subscription-index/subscription-index-filters';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'subscription-index',\r\n    templateUrl: './subscription-index.component.html',\r\n    styleUrls: ['./subscription-index.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SubscriptionIndexComponent implements OnInit {\r\n    @ViewChild(MatPaginator, { static: true }) matPaginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) matSort: MatSort;\r\n    public dataSource: PaginatedDataTableSource<Subscription>;\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(\r\n        public paginator: Paginator<Subscription>,\r\n        private subscriptions: Subscriptions,\r\n        private modal: Modal,\r\n        public currentUser: CurrentUser,\r\n        private toast: Toast,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.dataSource = new PaginatedDataTableSource<Subscription>({\r\n            uri: 'billing/subscriptions',\r\n            dataPaginator: this.paginator,\r\n            matPaginator: this.matPaginator,\r\n            matSort: this.matSort,\r\n            filters: SUBSCRIPTION_INDEX_FILTERS,\r\n        });\r\n    }\r\n\r\n    public maybeCancelSubscription(subscription: Subscription) {\r\n        this.modal.open(ConfirmModalComponent, {\r\n            title: 'Cancel Subscription',\r\n            body: 'Are you sure you want to cancel this subscription?',\r\n            bodyBold: 'This will cancel or suspend subscription based on its gateway and put user on grace period until their next scheduled renewal date and allow them to renew the subscription.',\r\n            ok: 'Cancel',\r\n            cancel: 'Go Back'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.cancelOrDeleteSubscription(subscription, {delete: false});\r\n        });\r\n    }\r\n\r\n    public maybeDeleteSubscription(subscription: Subscription) {\r\n        this.modal.open(ConfirmModalComponent, {\r\n            title: 'Delete Subscription',\r\n            body: 'Are you sure you want to delete this subscription?',\r\n            bodyBold: 'This will permanently delete user subscription and immediately cancel it on billing gateway.',\r\n            ok: 'Delete',\r\n            cancel: 'Go Back'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.cancelOrDeleteSubscription(subscription, {delete: true});\r\n        });\r\n    }\r\n\r\n    private cancelOrDeleteSubscription(subscription: Subscription, params: {delete?: boolean} = {}) {\r\n        this.loading$.next(true);\r\n\r\n        this.subscriptions.cancel(subscription.id, {delete: params.delete})\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(() => {\r\n                this.dataSource.reset();\r\n                this.toast.open('Subscription cancelled.');\r\n            });\r\n    }\r\n\r\n    public openCrupdateSubscriptionModal(subscription?: Subscription) {\r\n        this.modal.open(CrupdateSubscriptionModalComponent, {subscription})\r\n            .afterClosed()\r\n            .subscribe(newSubscription => {\r\n                if ( ! newSubscription) return;\r\n                this.dataSource.reset();\r\n            });\r\n    }\r\n}\r\n","<div class=\"header\">\n    <div class=\"title\" trans>GDPR</div>\n    <div class=\"subtitle\" trans>Configure settings related to EU General Data Protection Regulation.</div>\n</div>\n\n<form class=\"body many-inputs\" (ngSubmit)=\"saveSettings()\" ngNativeValidate>\n    <div class=\"setting-toggle-container\">\n        <mat-slide-toggle name=\"cookie_notice.enable\" id=\"cookie_notice.enable\" [(ngModel)]=\"state.client['cookie_notice.enable']\" trans>Enable Cookie Notice</mat-slide-toggle>\n        <p trans>Whether cookie notice should be shown automatically to users from EU until it is accepted.</p>\n    </div>\n\n    <div class=\"error-group many-inputs\" *ngIf=\"state.client['cookie_notice.enable']\">\n        <div class=\"input-container\" *ngIf=\"customPages$ | async as customPages\">\n            <label for=\"cookie_notice.learn_more\">Learn More Link</label>\n            <select id=\"cookie_notice.learn_more\" name=\"cookie_notice.learn_more\" [(ngModel)]=\"state.client['cookie_notice.learn_more']\">\n                <option [ngValue]=\"undefined\" trans>None (Hide learn more link)</option>\n                <option *ngFor=\"let item of customPages.items\" [value]=\"item.action\">{{item.label}}</option>\n            </select>\n        </div>\n\n        <div class=\"input-container\">\n            <div class=\"input-container\">\n                <label for=\"cookie-notice-position\" trans>Cookie Notice Position</label>\n                <select id=\"cookie-notice-position\" name=\"cookie-notice-position\" [(ngModel)]=\"state.client['cookie_notice.position']\">\n                    <option value=\"top\" trans>Top</option>\n                    <option value=\"bottom\" trans>Bottom</option>\n                </select>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"error-group no-border-top no-bottom-border policies-group\">\n        <h2>\n            <span>Registration Page Policies</span>\n            <button type=\"button\" mat-icon-button color=\"accent\" class=\"add-policy-button\" (click)=\"addRegisterPolicy()\">\n                <mat-icon svgIcon=\"add\"></mat-icon>\n            </button>\n        </h2>\n        <p trans>Here you can create policies that will be shown on registration page and user will be required to accept them by toggling a checkbox.</p>\n        <ul>\n            <li *ngFor=\"let policy of registerPolicies.controls; index as i\" [formGroup]=\"policy\" class=\"many-inputs policy-list-item\">\n                <div class=\"input-container\">\n                    <label for=\"policy-name-{{i}}\" class=\"policy-name-label\">\n                        <span trans>Name</span>\n                        <button mat-icon-button color=\"warn\" [disableRipple]=\"true\" (click)=\"removeRegisterPolicy(i)\">\n                            <mat-icon svgIcon=\"remove\"></mat-icon>\n                        </button>\n                    </label>\n                    <input type=\"text\" id=\"policy-name-{{i}}\" formControlName=\"label\" required>\n                </div>\n                <div class=\"input-container\">\n                    <label for=\"policy-action-{{i}}\" trans>Link</label>\n                    <div class=\"inline-inputs\">\n                        <select class=\"policy-type-select\" id=\"policy-type-{{i}}\" formControlName=\"type\" (change)=\"onPolicyTypeChange(policy)\">\n                            <option value=\"page\" trans>Page</option>\n                            <option value=\"link\" trans>Link</option>\n                        </select>\n                        <input type=\"url\" class=\"policy-action-input\" id=\"policy-action-{{i}}\" *ngIf=\"policy.value.type === 'link'\" formControlName=\"action\" placeholder=\"Optional...\" trans-placeholder>\n                        <select id=\"policy-action-{{i}}\" class=\"policy-action-input\" formControlName=\"action\" *ngIf=\"policy.value.type === 'page'\">\n                            <option *ngFor=\"let item of (customPages$ | async).items\" [value]=\"item.action\">{{item.label}}</option>\n                        </select>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n\n    <button mat-raised-button color=\"accent\" class=\"button primary update-button\" type=\"submit\" [disabled]=\"loading$ | async\" trans>Update</button>\n    <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\n</form>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {SettingsPanelComponent} from '@common/admin/settings/settings-panel.component';\nimport {BehaviorSubject} from 'rxjs';\nimport {MenuItemCategory} from '@common/admin/appearance/panels/menus-appearance-panel/menus/item-categories/menu-item-category';\nimport {AbstractControl, FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {MenuItem} from '@common/core/ui/custom-menu/menu-item';\n\n@Component({\n    selector: 'gdpr-settings',\n    templateUrl: './gdpr-settings.component.html',\n    styleUrls: ['./gdpr-settings.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'settings-panel'},\n})\nexport class GdprSettingsComponent extends SettingsPanelComponent implements OnInit {\n    public customPages$ = new BehaviorSubject<MenuItemCategory>({name: '', items: []});\n    public registerPolicies = new FormArray([]);\n\n    ngOnInit() {\n        this.valueLists.get(['menuItemCategories']).subscribe(response => {\n            this.customPages$.next(response.menuItemCategories.find(c => c.name === 'Custom Pages'));\n        });\n\n        this.settings.getJson('register_policies', []).forEach(policy => {\n            this.addRegisterPolicy(policy);\n        });\n    }\n\n    public saveSettings() {\n        const settings = this.state.getModified();\n        settings.client.register_policies = JSON.stringify(this.registerPolicies.value);\n        super.saveSettings(settings);\n    }\n\n    public addRegisterPolicy(policy: Partial<MenuItem> = {}) {\n        this.registerPolicies.push(new FormGroup({\n            label: new FormControl(policy.label || ''),\n            action: new FormControl(policy.action || this.getFirstCustomPageAction()),\n            type: new FormControl(policy.type || 'page'),\n        }));\n    }\n\n    public removeRegisterPolicy(i: number) {\n        this.registerPolicies.removeAt(i);\n    }\n\n    public onPolicyTypeChange(control: AbstractControl) {\n        control.get('action').reset();\n        if (control.get('type').value === 'page') {\n            control.get('action').setValue(this.getFirstCustomPageAction());\n        }\n    }\n\n    private getFirstCustomPageAction(): string {\n        return this.customPages$.value.items[0] && this.customPages$.value.items[0].action;\n    }\n}\n","import {RouterModule, Routes} from '@angular/router';\r\nimport {AdminComponent} from '@common/admin/admin.component';\r\nimport {AuthGuard} from '@common/guards/auth-guard.service';\r\nimport {CheckPermissionsGuard} from '@common/guards/check-permissions-guard.service';\r\nimport {SettingsComponent} from '@common/admin/settings/settings.component';\r\nimport {SettingsResolve} from '@common/admin/settings/settings-resolve.service';\r\nimport {NgModule} from '@angular/core';\r\nimport {APP_ADMIN_ROUTES, APP_SETTING_ROUTES} from '../../app/admin/app-admin-routes';\r\nimport {GeneralSettingsComponent} from '@common/admin/settings/general/general-settings.component';\r\nimport {AuthenticationSettingsComponent} from '@common/admin/settings/authentication/authentication-settings.component';\r\nimport {CacheSettingsComponent} from '@common/admin/settings/cache/cache-settings.component';\r\nimport {AnalyticsSettingsComponent} from '@common/admin/settings/analytics/analytics-settings.component';\r\nimport {LocalizationSettingsComponent} from '@common/admin/settings/localization/localization-settings.component';\r\nimport {LocalizationsResolve} from '@common/admin/localizations/localizations-resolve.service';\r\nimport {MailSettingsComponent} from '@common/admin/settings/mail/mail-settings.component';\r\nimport {LoggingSettingsComponent} from '@common/admin/settings/logging/logging-settings.component';\r\nimport {QueueSettingsComponent} from '@common/admin/settings/queue/queue-settings.component';\r\nimport {BillingSettingsComponent} from '@common/admin/settings/billing/billing-settings.component';\r\nimport {UploadingSettingsComponent} from '@common/admin/settings/uploading/uploading-settings.component';\r\nimport {RecaptchaSettingsComponent} from '@common/admin/settings/recaptcha/recaptcha-settings.component';\r\nimport {UserIndexComponent} from '@common/admin/users/user-index.component';\r\nimport {RoleIndexComponent} from '@common/admin/roles/role-index.component';\r\nimport {LocalizationIndexComponent} from '@common/admin/localizations/localization-index.component';\r\nimport {MailTemplateIndexComponent} from '@common/admin/mail-templates/mail-template-index.component';\r\nimport {MailTemplatesResolve} from '@common/admin/mail-templates/mail-templates-resolve.service';\r\nimport {FileEntryIndexComponent} from '@common/admin/file-entry-index/file-entry-index.component';\r\nimport {AdsPageComponent} from '@common/admin/ads-page/ads-page.component';\r\nimport {customPagesManagerRoutes} from '@common/core/pages/manager/custom-pages-manager-routing.module';\r\nimport {PlanIndexComponent} from '@common/admin/billing/plans/plan-index/plan-index.component';\r\nimport {BillingEnabledGuard} from '@common/shared/billing/guards/billing-enabled-guard.service';\r\nimport {SubscriptionIndexComponent} from '@common/admin/billing/subscriptions/subscription-index/subscription-index.component';\r\nimport {GdprSettingsComponent} from '@common/admin/settings/gdpr-settings/gdpr-settings.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AdminComponent,\r\n        canActivate: [AuthGuard, CheckPermissionsGuard],\r\n        canActivateChild: [AuthGuard, CheckPermissionsGuard],\r\n        data: {permissions: ['admin.access']},\r\n        children: [\r\n            // ANALYTICS\r\n            {\r\n                path: '',\r\n                redirectTo: 'analytics',\r\n                pathMatch: 'full',\r\n            },\r\n            {\r\n                path: 'analytics',\r\n                loadChildren: () => import('app/admin/analytics/analytics.module').then(m => m.AnalyticsModule),\r\n                canActivate: [AuthGuard],\r\n                canActivateChild: [AuthGuard],\r\n                data: {permissions: ['reports.view']}\r\n            },\r\n\r\n            // BASE ADMIN ROUTES\r\n            {\r\n                path: 'users',\r\n                component: UserIndexComponent,\r\n                data: {permissions: ['users.view']}\r\n            },\r\n            {\r\n                path: 'roles',\r\n                component: RoleIndexComponent,\r\n                data: {permissions: ['roles.view']}\r\n            },\r\n            {\r\n                path: 'translations',\r\n                component: LocalizationIndexComponent,\r\n                resolve: {localizations: LocalizationsResolve},\r\n                data: {permissions: ['localizations.view']}\r\n            },\r\n            {\r\n                path: 'mail-templates',\r\n                component: MailTemplateIndexComponent,\r\n                resolve: {templates: MailTemplatesResolve},\r\n                data: {permissions: ['mail_templates.view']}\r\n            },\r\n            {\r\n                path: 'files',\r\n                component: FileEntryIndexComponent,\r\n                data: {permissions: ['files.view']}\r\n            },\r\n            {\r\n                path: 'ads',\r\n                component: AdsPageComponent,\r\n                data: {permissions: ['ads.update']}\r\n            },\r\n\r\n            // CUSTOM PAGES\r\n            ...customPagesManagerRoutes,\r\n\r\n            // BILLING\r\n            {\r\n                path: 'plans',\r\n                component: PlanIndexComponent,\r\n                canActivate: [BillingEnabledGuard],\r\n                data: {permissions: ['plans.view']}\r\n            },\r\n\r\n            {\r\n                path: 'subscriptions',\r\n                component: SubscriptionIndexComponent,\r\n                canActivate: [BillingEnabledGuard],\r\n                data: {permissions: ['subscriptions.view']}\r\n            },\r\n\r\n            // BASE ADMIN ROUTES SPECIFIC TO APP\r\n            ...APP_ADMIN_ROUTES,\r\n\r\n            // SETTINGS\r\n            {\r\n                path: 'settings',\r\n                component: SettingsComponent,\r\n                resolve: {settings: SettingsResolve},\r\n                data: {permissions: ['settings.view']},\r\n                children: [\r\n                    // TODO: implement guard for unsaved changes after this is fixed:\r\n                    // TODO: https://github.com/angular/angular/issues/11836\r\n                    {path: '', redirectTo: 'general', pathMatch: 'full'},\r\n                    {path: 'general', component: GeneralSettingsComponent, pathMatch: 'full'},\r\n                    {path: 'authentication', component: AuthenticationSettingsComponent},\r\n                    {path: 'cache', component: CacheSettingsComponent},\r\n                    {path: 'analytics', component: AnalyticsSettingsComponent},\r\n                    {path: 'localization', component: LocalizationSettingsComponent},\r\n                    {path: 'mail', component: MailSettingsComponent},\r\n                    {path: 'logging', component: LoggingSettingsComponent},\r\n                    {path: 'queue', component: QueueSettingsComponent},\r\n                    {path: 'billing', component: BillingSettingsComponent},\r\n                    {path: 'uploading', component: UploadingSettingsComponent},\r\n                    {path: 'recaptcha', component: RecaptchaSettingsComponent},\r\n                    {path: 'gdpr', component: GdprSettingsComponent},\r\n\r\n                    // SETTING ROUTES SPECIFIC TO APP\r\n                    ...APP_SETTING_ROUTES,\r\n                ],\r\n            },\r\n\r\n        ]\r\n    },\r\n\r\n    // APPEARANCE\r\n    {\r\n        path: 'appearance',\r\n        loadChildren: () => import('app/admin/appearance/app-appearance.module').then(m => m.AppAppearanceModule),\r\n        canActivate: [AuthGuard],\r\n        canActivateChild: [AuthGuard],\r\n        data: {permissions: ['appearance.update']}\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class BaseAdminRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FindUserModalComponent} from './find-user-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    declarations: [\n        FindUserModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TranslationsModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatIconModule,\n        MatDialogModule,\n    ],\n    entryComponents: [\n        FindUserModalComponent,\n    ]\n})\nexport class FindUserModalModule {\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {UploadButtonDirective} from './directives/upload-button.directive';\r\nimport {UploadDropzoneDirective} from './directives/upload-dropzone.directive';\r\nimport {UploadProgressBarComponent} from './upload-progress-bar/upload-progress-bar.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatProgressBarModule,\r\n        MatIconModule,\r\n    ],\r\n    declarations: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n    exports: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n})\r\nexport class UploadsModule {\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {UploadImageControlComponent} from './upload-image-control.component';\nimport {UploadsModule} from '@common/uploads/uploads.module';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport {ImageOrIconModule} from '@common/core/ui/image-or-icon/image-or-icon.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\n\n@NgModule({\n    declarations: [UploadImageControlComponent],\n    imports: [\n        CommonModule,\n        UploadsModule,\n        ImageOrIconModule,\n        TranslationsModule,\n\n        // material\n        MatProgressBarModule,\n        MatIconModule,\n        MatButtonModule,\n    ],\n    exports: [\n      UploadImageControlComponent,\n    ]\n})\nexport class UploadImageControlModule {\n}\n","import {NgModule} from '@angular/core';\r\nimport {CrupdateRoleModalComponent} from './roles/crupdate-role-modal/crupdate-role-modal.component';\r\nimport {UserIndexComponent} from './users/user-index.component';\r\nimport {AdminComponent} from './admin.component';\r\nimport {CrupdateUserModalComponent} from './users/crupdate-user-modal/crupdate-user-modal.component';\r\nimport {RoleIndexComponent} from './roles/role-index.component';\r\nimport {MailTemplateIndexComponent} from './mail-templates/mail-template-index.component';\r\nimport {MailTemplatePreviewComponent} from './mail-templates/mail-template-preview/mail-template-preview.component';\r\nimport {SelectRolesModalComponent} from './users/select-roles-modal/select-roles-modal.component';\r\nimport {AdsPageComponent} from './ads-page/ads-page.component';\r\nimport {SettingsModule} from './settings/settings.module';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {TextEditorModule} from '../text-editor/text-editor.module';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatNativeDateModule, MatPseudoCheckboxModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {SelectPermissionsModalComponent} from './permissions/select-permissions-modal/select-permissions-modal.component';\r\nimport {PermissionManagerComponent} from './permissions/permission-manager/permission-manager.component';\r\nimport {CrupdatePlanModalComponent} from './billing/plans/crupdate-plan-modal/crupdate-plan-modal.component';\r\nimport {CrupdateSubscriptionModalComponent} from './billing/subscriptions/crupdate-subscription-modal/crupdate-subscription-modal.component';\r\nimport {SubscriptionIndexComponent} from './billing/subscriptions/subscription-index/subscription-index.component';\r\nimport {PlanIndexComponent} from './billing/plans/plan-index/plan-index.component';\r\nimport {SpaceInputModule} from '../core/ui/space-input/space-input.module';\r\nimport {COMMON_ADMIN_CONFIG} from './common-admin-config';\r\nimport {Settings} from '../core/config/settings.service';\r\nimport {FullPlanNameModule} from '../shared/billing/full-plan-name/full-plan-name.module';\r\nimport {FileEntryIndexComponent} from './file-entry-index/file-entry-index.component';\r\nimport {DataTableModule} from '@common/shared/data-table/data-table.module';\r\nimport {CustomPagesManagerModule} from '@common/core/pages/manager/custom-pages-manager.module';\r\nimport {ImageZoomModule} from '@common/core/ui/image-zoom/image-zoom.module';\r\nimport {RoleManagerComponent} from '@common/admin/users/role-manager/role-manager.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {LocalizationIndexComponent} from '@common/admin/localizations/localization-index.component';\r\nimport {NewLineModalComponent} from '@common/admin/localizations/new-line-modal/new-line-modal.component';\r\nimport {CrupdateLocalizationModalComponent} from '@common/admin/localizations/crupdate-localization-modal/crupdate-localization-modal.component';\r\nimport {BaseAdminRoutingModule} from '@common/admin/base-admin-routing.module';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {FindUserModalModule} from '@common/auth/find-user-modal/find-user-modal.module';\r\nimport {MaterialNavbarModule} from '@common/core/ui/material-navbar/material-navbar.module';\r\nimport {CustomMenuModule} from '@common/core/ui/custom-menu/custom-menu.module';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\r\nimport {NoResultsMessageModule} from '@common/core/ui/no-results-message/no-results-message.module';\r\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\r\nimport {UploadImageControlModule} from '@common/shared/form-controls/upload-image-control/upload-image-control.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TextEditorModule,\r\n        SettingsModule,\r\n        MaterialNavbarModule,\r\n        CustomMenuModule,\r\n        FullPlanNameModule,\r\n        SpaceInputModule,\r\n        DataTableModule,\r\n        FormatPipesModule,\r\n        TranslationsModule,\r\n        NoResultsMessageModule,\r\n        LoadingIndicatorModule,\r\n        UploadImageControlModule,\r\n\r\n        // need to use multi here as config might get overwritten\r\n        // if page manager module is imported into admin twice\r\n        CustomPagesManagerModule.forRoot({\r\n            resourceName: 'pages',\r\n            type: null,\r\n            showSlug: true,\r\n        }),\r\n        BaseAdminRoutingModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatMenuModule,\r\n        MatSlideToggleModule,\r\n        MatChipsModule,\r\n        MatAutocompleteModule,\r\n        MatSidenavModule,\r\n        DragDropModule,\r\n        MatProgressBarModule,\r\n\r\n        // for plan modal only\r\n        MatListModule,\r\n\r\n        // for permission/role modal only\r\n        MatExpansionModule,\r\n        MatPseudoCheckboxModule,\r\n\r\n        // for subscription modal and list only\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n\r\n        // for ads page only\r\n        ImageZoomModule,\r\n        MatRippleModule,\r\n\r\n        // for role index component\r\n        FindUserModalModule,\r\n    ],\r\n    declarations: [\r\n        AdminComponent,\r\n        RoleIndexComponent,\r\n        CrupdateRoleModalComponent,\r\n        RoleManagerComponent,\r\n        UserIndexComponent,\r\n        CrupdateUserModalComponent,\r\n        LocalizationIndexComponent,\r\n        CrupdateLocalizationModalComponent,\r\n        NewLineModalComponent,\r\n        MailTemplateIndexComponent,\r\n        MailTemplatePreviewComponent,\r\n        SelectRolesModalComponent,\r\n        SelectPermissionsModalComponent,\r\n        PermissionManagerComponent,\r\n        AdsPageComponent,\r\n        FileEntryIndexComponent,\r\n\r\n        // billing\r\n        PlanIndexComponent,\r\n        SubscriptionIndexComponent,\r\n        CrupdatePlanModalComponent,\r\n        CrupdateSubscriptionModalComponent,\r\n    ],\r\n    exports: [\r\n        RouterModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TextEditorModule,\r\n        SettingsModule,\r\n        PermissionManagerComponent,\r\n        SelectPermissionsModalComponent,\r\n        DataTableModule,\r\n        TranslationsModule,\r\n        FormatPipesModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSnackBarModule,\r\n        MatCheckboxModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatMenuModule,\r\n        MatSlideToggleModule,\r\n        MatChipsModule,\r\n    ],\r\n})\r\nexport class BaseAdminModule {\r\n    constructor(private settings: Settings) {\r\n        this.settings.merge({vebto: COMMON_ADMIN_CONFIG});\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {ConfirmModalComponent} from './confirm-modal.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n    ],\r\n    declarations: [\r\n        ConfirmModalComponent\r\n    ],\r\n    exports: [\r\n        ConfirmModalComponent,\r\n        MatIconModule,\r\n    ],\r\n})\r\nexport class ConfirmModalModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {BaseAdminModule} from '@common/admin/base-admin.module';\r\nimport {ChipInputModule} from '@common/core/ui/chip-input/chip-input.module';\r\nimport {LinkSettingsComponent} from './settings/link-settings/link-settings.component';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {ConfirmModalModule} from '@common/core/ui/confirm-modal/confirm-modal.module';\r\nimport {RECAPTCHA_ACTIONS} from '@common/admin/settings/recaptcha/recaptcha-actions.token';\r\nimport {DashboardModule} from '../dashboard/dashboard.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        BaseAdminModule,\r\n        ConfirmModalModule,\r\n        DashboardModule,\r\n\r\n        ChipInputModule,\r\n        MatProgressBarModule,\r\n        MatTabsModule,\r\n    ],\r\n    declarations: [\r\n        LinkSettingsComponent\r\n    ],\r\n    providers: [\r\n        {provide: RECAPTCHA_ACTIONS, multi: true, useValue: [\r\n            {name: 'Link Creation', key: 'recaptcha.enable_for_link_creation', description: 'Enable recaptcha integration when creating links from homepage or user dashboard.'}\r\n        ]}\r\n    ]\r\n})\r\nexport class AppAdminModule {\r\n}\r\n","import * as Chartist from 'chartist';\r\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\r\nimport {IChartistLineChart, ILineChartOptions} from 'chartist';\r\nimport {BaseChart, LineChartConfig} from '@common/shared/charts/base-chart';\r\n\r\nexport class ChartistLine extends BaseChart<LineChartConfig> {\r\n    protected lineConfig: ILineChartOptions = {\r\n        showArea: true,\r\n        lineSmooth: true,\r\n        low: 0,\r\n        fullWidth: true,\r\n        chartPadding: {\r\n            left: 15,\r\n            right: 30,\r\n        },\r\n        axisY: {\r\n            // 0,454 => 0,4 when displaying chart with no data\r\n            labelInterpolationFnc: (val) => Math.floor(val)\r\n        },\r\n        plugins: [\r\n            ChartistTooltip(),\r\n        ]\r\n    };\r\n\r\n    protected chart: IChartistLineChart;\r\n\r\n    protected generate() {\r\n        const lineConfig = {\r\n            ...this.lineConfig,\r\n            high: this.getHigh(),\r\n            ...(this.config.options || {})\r\n        };\r\n        this.chart = new Chartist.Line(\r\n            this.config.selector,\r\n            this.transformChartData(),\r\n            lineConfig,\r\n        );\r\n\r\n        this.chart.on('draw', data =>  {\r\n            if (data.type === 'line' || data.type === 'area') {\r\n                data.element.animate({\r\n                    d: {\r\n                        begin: data.index,\r\n                        dur: 250,\r\n                        from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\r\n                        to: data.path.clone().stringify(),\r\n                        easing: Chartist.Svg.Easing.easeOutQuint\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    protected transformChartData() {\r\n        return {\r\n            labels: this.config.labels,\r\n            series: this.config.data.map(d => this.generateDataWithTooltip(d || [])),\r\n        };\r\n    }\r\n\r\n    protected getHigh() {\r\n        // if chart data is empty, show 0-100 in Y axis\r\n        return this.getMaxValue() ? undefined : 100;\r\n    }\r\n\r\n    public destroy() {\r\n        if (this.chart) {\r\n            this.chart.off('draw');\r\n            this.chart.detach();\r\n        }\r\n    }\r\n}\r\n","import * as Chartist from 'chartist';\r\nimport {IChartistPieChart, IPieChartOptions} from 'chartist';\r\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\r\nimport {BaseChart, PieChartConfig} from '@common/shared/charts/base-chart';\r\n\r\nexport class ChartistPie extends BaseChart<PieChartConfig> {\r\n    protected pieConfig: IPieChartOptions = {\r\n        showLabel: false,\r\n        chartPadding: 0,\r\n        plugins: [\r\n            ChartistTooltip(),\r\n        ]\r\n    };\r\n\r\n    protected chart: IChartistPieChart;\r\n\r\n    protected generate() {\r\n        const options =  {\r\n            ...this.pieConfig,\r\n            ...this.config.options || {},\r\n        };\r\n        this.chart = new Chartist.Pie(\r\n            this.config.selector,\r\n            this.transformChartData(),\r\n            options,\r\n        );\r\n        this.animate();\r\n    }\r\n\r\n    protected transformChartData() {\r\n        return {\r\n            labels: this.config.labels,\r\n            series: this.generateDataWithTooltip(this.config.data),\r\n        };\r\n    }\r\n\r\n    public destroy() {\r\n        if (this.chart) {\r\n            this.chart.off('draw');\r\n            this.chart.detach();\r\n        }\r\n    }\r\n\r\n    protected animate() {\r\n        this.chart.on('draw', data => {\r\n            if (data.type === 'slice') {\r\n                const pathLength = data.element._node.getTotalLength();\r\n                data.element.attr({\r\n                    'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'\r\n                });\r\n                const animationDefinition = {\r\n                    'stroke-dashoffset': {\r\n                        id: 'anim' + data.index,\r\n                        dur: 300 * data.value / data.totalDataSum,\r\n                        from: -pathLength + 'px',\r\n                        to: '0px',\r\n                        fill: 'freeze'\r\n                    }\r\n                };\r\n                if (data.index !== 0) {\r\n                    animationDefinition['stroke-dashoffset']['begin'] = 'anim' + (data.index - 1) + '.end';\r\n                }\r\n                data.element.attr({\r\n                    'stroke-dashoffset': -pathLength + 'px'\r\n                });\r\n                data.element.animate(animationDefinition, false);\r\n                if (data.endAngle === 360) {\r\n                    let index = data.index;\r\n                    let dur = 1000 * data.value / data.totalDataSum / 2;\r\n                    let from = 0;\r\n                    let to = -pathLength / 3;\r\n                    for (let i = 0; i < 4; i++) {\r\n                        data.element.animate({\r\n                            'stroke-dashoffset': {\r\n                                id: 'anim' + (index + 1),\r\n                                dur: dur,\r\n                                from: from + 'px',\r\n                                to: to + 'px',\r\n                                fill: 'freeze',\r\n                                begin: 'anim' + index + '.end'\r\n                            }\r\n                        }, false);\r\n                        index++;\r\n                        dur /= 1.75;\r\n                        const t = from;\r\n                        from = to;\r\n                        to = t / 2.5;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import * as Chartist from 'chartist';\r\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\r\nimport {IBarChartOptions, IChartistBarChart} from 'chartist';\r\nimport {BarChartConfig, BaseChart} from '@common/shared/charts/base-chart';\r\n\r\nexport class ChartistBar extends BaseChart<BarChartConfig> {\r\n    protected barConfig: IBarChartOptions = {\r\n        chartPadding: {\r\n            left: 15,\r\n            right: 30,\r\n        },\r\n        plugins: [\r\n            ChartistTooltip(),\r\n        ]\r\n    };\r\n\r\n    protected chart: IChartistBarChart;\r\n\r\n    protected generate() {\r\n        const barConfig: IBarChartOptions = {\r\n            ...this.barConfig,\r\n            ...(this.config.options || {}),\r\n            high: this.getHigh(),\r\n        };\r\n        this.chart = new Chartist.Bar(\r\n            this.config.selector,\r\n            this.transformChartData(),\r\n            barConfig,\r\n        );\r\n        this.chart.on('draw', function(data) {\r\n            if (data.type === 'bar') {\r\n                data.element.animate({\r\n                    y2: {\r\n                        dur: '0.2s',\r\n                        from: data.y1,\r\n                        to: data.y2\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    protected transformChartData() {\r\n        return {\r\n            labels: this.config.labels,\r\n            series: this.config.data.map(d => this.generateDataWithTooltip(d || [])),\r\n        };\r\n    }\r\n\r\n    protected getHigh() {\r\n        // if chart data is empty, show 0-100 in Y axis\r\n        return this.getMaxValue() ? undefined : 100;\r\n    }\r\n\r\n    public destroy() {\r\n        if (this.chart) {\r\n            this.chart.off('draw');\r\n            this.chart.detach();\r\n        }\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport {BarChartConfig, BaseChart, ChartType, LineChartConfig, PieChartConfig} from '@common/shared/charts/base-chart';\r\nimport {ChartistLine} from '@common/shared/charts/chartist/chartist-line';\r\nimport {ChartistPie} from '@common/shared/charts/chartist/chartist-pie';\r\nimport {ChartistBar} from '@common/shared/charts/chartist/chartist-bar';\r\n\r\ntype ChartConfig = BarChartConfig|LineChartConfig|PieChartConfig;\r\n\r\n@Component({\r\n    selector: 'chart',\r\n    templateUrl: './chart.component.html',\r\n    styleUrls: ['./chart.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {'class': 'chart'},\r\n})\r\nexport class ChartComponent implements OnInit, OnChanges, OnDestroy {\r\n    @ViewChild('headerWrapper', {static: true}) headerWrapper: ElementRef<HTMLElement>;\r\n    @ViewChild('legendWrapper', {static: true}) legendWrapper: ElementRef<HTMLElement>;\r\n    @ViewChild('chartPlaceholder', { static: true }) chartPlaceholder: ElementRef<HTMLElement>;\r\n\r\n    @Input() chartConfig: ChartConfig;\r\n    @Input() height: number;\r\n    public chart: BaseChart<ChartConfig>;\r\n\r\n    constructor(protected el: ElementRef<HTMLElement>) {}\r\n\r\n    ngOnInit() {\r\n        this.calcAndSetChartHeight();\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if ( ! this.chartConfig) return;\r\n        if (this.chartConfig.type === ChartType.LINE) {\r\n            this.chart = new ChartistLine(this.transformConfig() as LineChartConfig);\r\n        } else if (this.chartConfig.type === ChartType.BAR) {\r\n            this.chart = new ChartistBar(this.transformConfig() as BarChartConfig);\r\n        } else {\r\n            this.chart = new ChartistPie(this.transformConfig() as PieChartConfig);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if ( ! this.chart) return;\r\n        this.chart.destroy();\r\n    }\r\n\r\n    private transformConfig(): ChartConfig {\r\n        return {\r\n            ...this.chartConfig,\r\n            selector: this.chartPlaceholder.nativeElement\r\n        };\r\n    }\r\n\r\n    private calcAndSetChartHeight() {\r\n        let innerHeight = this.height;\r\n        const headerMargin = 15;\r\n        if (this.headerWrapper.nativeElement.children.length) {\r\n            innerHeight -= 66; // header height\r\n        }\r\n        if ((this.chartConfig && this.chartConfig.legend) || this.legendWrapper.nativeElement.children.length) {\r\n            innerHeight -= 40; // legend height\r\n        }\r\n        this.el.nativeElement.style.height = this.height + 'px';\r\n        this.chartPlaceholder.nativeElement.style.height = (innerHeight - headerMargin) + 'px';\r\n    }\r\n}\r\n","<div class=\"header-wrapper\" #headerWrapper>\r\n    <ng-content select=\".chart-header\"></ng-content>\r\n</div>\r\n\r\n<div #chartPlaceholder class=\"ct-chart ct-perfect-fourth {{chartConfig?.type}}-chart chart-body\">\r\n    <div *ngIf=\"chart && chart.isEmpty()\" class=\"empty-msg\">\r\n        <mat-icon svgIcon=\"warning\"></mat-icon>\r\n        <span trans>No data available for this time period.</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"legend-wrapper\" #legendWrapper>\r\n    <ng-content select=\".chart-legend\"></ng-content>\r\n    <div class=\"chart-legend\" *ngIf=\"chartConfig?.legend\">\r\n        <div class=\"legend-item\" *ngFor=\"let item of chartConfig.labels\">{{item}}</div>\r\n    </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, Optional, SkipSelf, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, Input, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r95 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r95);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r95, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r97 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r97); const ctx_r96 = ɵngcc0.ɵɵnextContext(2); return ctx_r96._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r92 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r92.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r92.pageSize)(\"disabled\", ctx_r92.disabled)(\"aria-label\", ctx_r92._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r92._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r93 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r93.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r89 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r89._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r89._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r89._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r99 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r99); const ctx_r98 = ɵngcc0.ɵɵnextContext(); return ctx_r98.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r90 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r90._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r90._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r90._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r90._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r101 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r101); const ctx_r100 = ɵngcc0.ɵɵnextContext(); return ctx_r100.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r91 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r91._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r91._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r91._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r91._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        });\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\n/** @nocollapse */ MatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.changes;\n    /**\n     * A label for the page size selector.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.itemsPerPageLabel;\n    /**\n     * A label for the button that increments the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.nextPageLabel;\n    /**\n     * A label for the button that decrements the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.previousPageLabel;\n    /**\n     * A label for the button that moves to the first page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.firstPageLabel;\n    /**\n     * A label for the button that moves to the last page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.lastPageLabel;\n    /**\n     * A label for the range of items within the current page and the length of the whole list.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.getRangeLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\nif (false) {\n    /**\n     * The current page index.\n     * @type {?}\n     */\n    PageEvent.prototype.pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * \\@breaking-change 8.0.0 To be made into a required property.\n     * @type {?}\n     */\n    PageEvent.prototype.previousPageIndex;\n    /**\n     * The current page size\n     * @type {?}\n     */\n    PageEvent.prototype.pageSize;\n    /**\n     * The current total number of items being paged\n     * @type {?}\n     */\n    PageEvent.prototype.length;\n}\n/**\n * Object that can be used to configure the default options for the paginator module.\n * @record\n */\nfunction MatPaginatorDefaultOptions() { }\nif (false) {\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSize;\n    /**\n     * The set of provided page size options to display to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSizeOptions;\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.hidePageSize;\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.showFirstLastButtons;\n}\n/**\n * Injection token that can be used to provide the default options for the paginator module.\n * @type {?}\n */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nclass MatPaginatorBase {\n}\n/** @type {?} */\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaults\n     */\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /**\n     * The zero-based page index of the displayed list of items. Defaulted to 0.\n     * @return {?}\n     */\n    get pageIndex() { return this._pageIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The length of the total number of items that are being paginated. Defaulted to 0.\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @return {?}\n     */\n    get pageSize() { return this._pageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * The set of provided page size options to display to the user.\n     * @return {?}\n     */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => coerceNumberProperty(p)));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @return {?}\n     */\n    get hidePageSize() { return this._hidePageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @return {?}\n     */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        const startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageIndex;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_length;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_hidePageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_showFirstLastButtons;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._intlChanges;\n    /**\n     * Theme color to be used for the underlying form controls.\n     * @type {?}\n     */\n    MatPaginator.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._length;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSizeOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._hidePageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._showFirstLastButtons;\n    /**\n     * Event emitted when the paginator changes the page size or page index.\n     * @type {?}\n     */\n    MatPaginator.prototype.page;\n    /**\n     * Displayed set of page size options. Will be sorted and include current page size.\n     * @type {?}\n     */\n    MatPaginator.prototype._displayedPageSizeOptions;\n    /** @type {?} */\n    MatPaginator.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n\n//# sourceMappingURL=paginator.js.map","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {catchError, debounceTime, distinctUntilChanged, finalize, switchMap} from 'rxjs/operators';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {User} from '@common/core/types/models/User';\nimport {Users} from '@common/auth/users.service';\n\n@Component({\n    selector: 'select-user-input',\n    templateUrl: './select-user-input.component.html',\n    styleUrls: ['./select-user-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: SelectUserInputComponent,\n        multi: true,\n    }]\n})\nexport class SelectUserInputComponent implements ControlValueAccessor, OnInit {\n    @ViewChild('searchInput', {static: true}) searchInput: ElementRef<HTMLInputElement>;\n    public searchFormControl = new FormControl();\n    public loading$ = new BehaviorSubject(false);\n    public users$ = new BehaviorSubject<User[]>([]);\n    public selectedUser$ = new BehaviorSubject<User>(null);\n    private propagateChange: Function;\n    public searchedOnce = false;\n\n    constructor(private users: Users) {}\n\n    ngOnInit() {\n        this.bindToSearchControl();\n    }\n\n    public writeValue(value: User) {\n        if (typeof value === 'object') {\n            this.selectedUser$.next(value);\n        }\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    private bindToSearchControl() {\n        this.searchFormControl.valueChanges.pipe(\n            debounceTime(150),\n            distinctUntilChanged(),\n            switchMap(query => this.searchUsers(query)),\n            catchError(() => of([])),\n        ).subscribe(users => {\n            this.searchedOnce = true;\n            this.users$.next(users);\n        });\n    }\n\n    private searchUsers(query: string): Observable<User[]> {\n        this.loading$.next(true);\n        return this.users.getAll({query, per_page: 7})\n            .pipe(finalize(() =>  this.loading$.next(false)));\n    }\n\n    public onMenuOpened() {\n        if (!this.searchedOnce) {\n            this.clearSearchInput();\n        }\n        setTimeout(() => {\n            this.searchInput.nativeElement.focus();\n        });\n    }\n\n    public selectUser(user: User) {\n        this.selectedUser$.next(user);\n        this.propagateChange(user);\n    }\n\n    public clearSearchInput() {\n        this.searchFormControl.setValue('');\n    }\n\n    public onMenuClosed() {\n        this.loading$.next(false);\n        this.clearSearchInput();\n    }\n}\n","<div class=\"input-container\">\r\n    <div class=\"fake-label\" trans>User</div>\r\n    <div class=\"fake-input\" tabindex=\"0\" [matMenuTriggerFor]=\"menu\" (menuOpened)=\"onMenuOpened()\" (menuClosed)=\"onMenuClosed()\">\r\n        <span *ngIf=\"selectedUser$ | async as selectedUser; else anyUser\">\r\n            <img [src]=\"selectedUser.avatar\">{{selectedUser.display_name}}\r\n        </span>\r\n        <ng-template #anyUser>\r\n            <span trans>Any</span>\r\n        </ng-template>\r\n        <div class=\"arrow-container\">\r\n            <div class=\"arrow\"></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\">\r\n    <div class=\"input-container search-input-container\" (click)=\"$event.stopPropagation()\">\r\n        <div class=\"search-input-wrapper\">\r\n            <input type=\"text\" [formControl]=\"searchFormControl\" placeholder=\"Search...\" (blur)=\"searchInput.focus()\" #searchInput trans-placeholder>\r\n            <button class=\"clear-search-input-button\" mat-icon-button (click)=\"clearSearchInput()\" *ngIf=\"searchFormControl.value\">\r\n                <mat-icon svgIcon=\"close\"></mat-icon>\r\n            </button>\r\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"small\"></loading-indicator>\r\n        </div>\r\n    </div>\r\n    <button mat-menu-item (click)=\"selectUser(null)\">\r\n        <img src=\"assets/images/anonymous-user.png\">\r\n        <div class=\"info any-user-info\">\r\n            <div class=\"name\" trans>Any User</div>\r\n        </div>\r\n    </button>\r\n    <button mat-menu-item *ngFor=\"let user of users$ | async\" (click)=\"selectUser(user)\">\r\n        <img [src]=\"user.avatar\">\r\n        <div class=\"user-info\">\r\n            <div class=\"name\">{{user.display_name}}</div>\r\n            <div class=\"email\">{{user.email}}</div>\r\n        </div>\r\n    </button>\r\n    <button mat-menu-item disabled *ngIf=\"searchedOnce && !(users$ | async).length\" trans>No users found.</button>\r\n</mat-menu>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {ControlValueAccessor, FormBuilder, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {filter} from 'rxjs/operators';\n\n@Component({\n    selector: 'between-input',\n    templateUrl: './between-input.component.html',\n    styleUrls: ['./between-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: BetweenInputComponent,\n        multi: true,\n    }]\n})\nexport class BetweenInputComponent implements ControlValueAccessor {\n    @Input() setDefaultDate = false;\n    @Input() showLabels = false;\n    public datePattern = '([12]\\\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01]))';\n    private initiated = false;\n    public defaultFrom: string;\n    public defaultTo: string;\n    private propagateChange: Function;\n    public form = this.fb.group({\n        from: [''],\n        to: [''],\n    });\n\n    constructor(public fb: FormBuilder) {\n        this.defaultFrom = this.getDefaultDate(7);\n        this.defaultTo = this.getDefaultDate();\n    }\n\n    public writeValue(value: string) {\n        let [from, to] = (value || '').split(':');\n\n        if ( ! this.initiated && this.setDefaultDate) {\n            from = from || this.defaultFrom;\n            to = to || this.defaultTo;\n        }\n\n        this.initiated = true;\n        this.form.patchValue({from, to});\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n        this.form.valueChanges\n            // only emit if user has set values to both to and from inputs\n            .pipe(filter(value => value.from && value.to))\n            .subscribe(value => {\n                const between = `${value.from}:${value.to}`;\n                this.propagateChange(between);\n            });\n    }\n\n    public registerOnTouched() {}\n\n    private getDefaultDate(minusDays: number = 0) {\n        const d = new Date();\n        d.setDate(d.getDate() - minusDays);\n        const month = this.addZero(d.getMonth()),\n            day = this.addZero(d.getDate());\n        return `${d.getFullYear()}-${month}-${day}`;\n    }\n\n    private addZero(number: number): string {\n        return number < 10 ? '0' + number : '' + number;\n    }\n}\n","<fieldset [formGroup]=\"form\">\n    <legend trans>\n        <ng-content></ng-content>\n    </legend>\n   <div class=\"inline-inputs-container\">\n       <div class=\"input-container\">\n           <label for=\"from\" [class.hidden]=\"!showLabels\" trans>From</label>\n           <input type=\"date\" id=\"from\" formControlName=\"from\" [placeholder]=\"defaultFrom\" [pattern]=\"datePattern\" required>\n       </div>\n       <div class=\"input-container\">\n           <label for=\"to\" [class.hidden]=\"!showLabels\" trans>To</label>\n           <input type=\"date\" id=\"to\" formControlName=\"to\" [placeholder]=\"defaultTo\" [pattern]=\"datePattern\" required>\n       </div>\n   </div>\n</fieldset>","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {DataTableFilter} from '@common/shared/data-table/filter-panel/data-table-filters';\n\n@Component({\n    selector: 'app-data-table-inputs',\n    templateUrl: './app-data-table-inputs.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n// There's no way to bind dynamically loaded custom form control\n// to form in angular so we need to create a wrapper component\nexport class AppDataTableInputsComponent {\n    @Input() formGroup: FormGroup;\n    @Input() filter: DataTableFilter;\n}\n","<header>\n    <mat-icon svgIcon=\"filter-list\"></mat-icon>\n    <span trans>Filters</span>\n</header>\n\n<form [formGroup]=\"data.source.filterForm\" class=\"many-inputs\">\n    <ng-container *ngFor=\"let filter of data.source.config.filters\">\n        <div class=\"input-container\" *ngIf=\"conditionPasses(filter.condition)\">\n            <div [ngSwitch]=\"filter.type\">\n                <ng-container *ngSwitchCase=\"'date'\">\n                    <between-input [formControlName]=\"filter.column\" [setDefaultDate]=\"false\" [showLabels]=\"false\">{{filter.name}}</between-input>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'custom'\">\n                    <select-user-input *ngIf=\"filter.name === 'user'\" [formControlName]=\"filter.column\"></select-user-input>\n                    <app-data-table-inputs *ngIf=\"filter.name !== 'user'\" [formGroup]=\"data.source.filterForm\" [filter]=\"filter\"></app-data-table-inputs>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'user-select'\">\n                    <select-user-input [formControlName]=\"filter.column\"></select-user-input>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'select'\">\n                    <label [for]=\"filter.name\" trans>{{viewName(filter.name)}}</label>\n                    <select [id]=\"filter.name\" [formControlName]=\"filter.column\">\n                        <option [ngValue]=\"getValue(option)\" *ngFor=\"let option of filter.options\" trans>{{optionName(option)}}</option>\n                    </select>\n                </ng-container>\n            </div>\n        </div>\n    </ng-container>\n</form>\n\n<footer>\n    <button (click)=\"close()\" type=\"button\" mat-button color=\"accent\" trans>Close</button>\n</footer>\n","import {ChangeDetectionStrategy, Component, Inject, OnDestroy, OnInit, Optional} from '@angular/core';\nimport {OVERLAY_PANEL_DATA} from '@common/core/ui/overlay-panel/overlay-panel-data';\nimport {OverlayPanelRef} from '@common/core/ui/overlay-panel/overlay-panel-ref';\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\nimport {\n    DataTableFilterCondition,\n    DataTableFilterOption\n} from '@common/shared/data-table/filter-panel/data-table-filters';\nimport {matDialogAnimations} from '@angular/material/dialog';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Subscription} from 'rxjs';\nimport {ComponentPortal} from '@angular/cdk/portal';\n\n@Component({\n    selector: 'filter-panel',\n    templateUrl: './filter-panel.component.html',\n    styleUrls: ['./filter-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[@dialogContainer]': `'enter'`\n    },\n    animations: [\n        matDialogAnimations.dialogContainer,\n    ]\n})\nexport class FilterPanelComponent implements OnInit, OnDestroy {\n    public portals: {[key: string]: ComponentPortal<any>} = {};\n    private subscription: Subscription;\n    constructor(\n        @Inject(OVERLAY_PANEL_DATA) @Optional() public data: {source: PaginatedDataTableSource<any>},\n        private overlayPanelRef: OverlayPanelRef,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.subscription = this.data.source.filterForm.valueChanges\n            .subscribe(() => this.close());\n\n        console.log(this.data.source.config.filters);\n        this.data.source.config.filters.forEach(filter => {\n            if (filter.component) {\n                this.portals[filter.name] = new ComponentPortal(filter.component);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription && this.subscription.unsubscribe();\n    }\n\n    public viewName(name: string): string {\n        return name.replace(/_/g, ' ');\n    }\n\n    public optionName(option: DataTableFilterOption): string {\n        return option.displayName || this.viewName(option.name);\n    }\n\n    public close() {\n        this.overlayPanelRef.close();\n    }\n\n    public getValue(option: DataTableFilterOption) {\n        // if no value is provided, use name as value instead\n        let value = option.value === undefined ? option.name : option.value;\n        // should disable filter completely if value is \"all\"\n        if (value === 'all' || value === 'any') value = null;\n        return value;\n    }\n\n    public conditionPasses(condition: DataTableFilterCondition): boolean {\n        if ( ! condition) {\n            return true;\n        }\n        if (typeof condition === 'function') {\n            return condition(this.data.source);\n        } else {\n            return this.settings.get(condition);\n        }\n    }\n}\n","import { ConnectedPosition } from '@angular/cdk/overlay';\r\n\r\nexport const LEFT_POSITION: ConnectedPosition[] = [\r\n    {originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: 5},\r\n    {originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 5},\r\n];\r\n","import {\r\n    AfterContentInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ContentChild,\r\n    ContentChildren,\r\n    ElementRef,\r\n    Input,\r\n    OnInit,\r\n    QueryList,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatColumnDef, MatRowDef, MatTable} from '@angular/material/table';\r\nimport {PaginatedDataTableSource} from './data/paginated-data-table-source';\r\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport {FilterPanelComponent} from '@common/shared/data-table/filter-panel/filter-panel.component';\r\nimport {OverlayPanelRef} from '@common/core/ui/overlay-panel/overlay-panel-ref';\r\nimport {LEFT_POSITION} from '@common/core/ui/overlay-panel/positions/left-position';\r\n\r\n@Component({\r\n    selector: 'data-table',\r\n    templateUrl: './data-table.component.html',\r\n    styleUrls: ['./data-table.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n\r\n    // can't add encapsulation as won't be able\r\n    // to style common table columns otherwise\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DataTableComponent<T> implements OnInit, AfterContentInit {\r\n    @ViewChild(MatTable, {static: true}) table: MatTable<T>;\r\n    @ContentChildren(MatColumnDef) columnDefs: QueryList<MatColumnDef>;\r\n    @ViewChild(MatPaginator, {static: true}) matPaginator: MatPaginator;\r\n    @ViewChild('filterButton', { read: ElementRef }) filterButton: ElementRef<HTMLButtonElement>;\r\n    @ContentChild(MatRowDef) rowDef: MatRowDef<T>;\r\n\r\n    @Input() dataSource: PaginatedDataTableSource<T>;\r\n    @Input() itemsName: string;\r\n    @Input() showCheckbox = true;\r\n    @Input() hideHeader = false;\r\n\r\n    public columns: string[] = ['select'];\r\n    public filterPanelRef: OverlayPanelRef;\r\n\r\n    constructor(private overlayPanel: OverlayPanel) {}\r\n\r\n    ngOnInit() {\r\n        this.dataSource.config.matPaginator = this.matPaginator;\r\n        if (this.dataSource.config.matSort) {\r\n            this.dataSource.config.matSort.start = 'desc';\r\n        }\r\n        if ( ! this.dataSource.config.delayInit) {\r\n            this.dataSource.init();\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        // row def specified by parent component, *matRowDef from\r\n        // data-table component will not be available here yet\r\n        // specified rowDef should use \"when\" predicate to avoid errors.\r\n        if (this.rowDef) {\r\n            this.table.addRowDef(this.rowDef);\r\n        }\r\n        // Register default column defs to the table\r\n        this.columnDefs.forEach(columnDef => {\r\n            this.columns.push(columnDef.name);\r\n            this.table.addColumnDef(columnDef);\r\n        });\r\n    }\r\n\r\n    public openFiltersPanel() {\r\n        if (this.filterPanelRef) {\r\n            this.filterPanelRef.close();\r\n        } else {\r\n            const position = LEFT_POSITION.slice();\r\n            position[0].offsetY = 40;\r\n            position[1].offsetY = 40;\r\n            this.filterPanelRef = this.overlayPanel.open(FilterPanelComponent, {\r\n                origin: this.filterButton,\r\n                position: position,\r\n                mobilePosition: 'center',\r\n                data: {source: this.dataSource}\r\n            });\r\n            this.filterPanelRef.afterClosed().subscribe(() => {\r\n                this.filterPanelRef = null;\r\n            });\r\n        }\r\n    }\r\n}\r\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"dataSource.loading$ | async\"></mat-progress-bar>\r\n<div class=\"data-table-panel\">\r\n    <div class=\"data-table-header\" *ngIf=\"!hideHeader\">\r\n        <div class=\"header-inner default\" [class.hidden]=\"dataSource.anyRowsSelected() && selectedActions.children.length\">\r\n            <div class=\"left\"><ng-content select=\"[headerActions]\"></ng-content></div>\r\n\r\n            <div class=\"right\">\r\n                <ng-container *ngIf=\"dataSource.config.filters?.length\">\r\n                    <mat-chip-list aria-label=\"Active Filters\" class=\"filter-chip-list\">\r\n                        <mat-chip *ngFor=\"let filter of dataSource.activeFilters$ | async\" [removable]=\"true\" [selectable]=\"false\" (removed)=\"dataSource.removeFilter(filter.column)\">\r\n                            {{filter.name}}\r\n                            <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\r\n                        </mat-chip>\r\n                    </mat-chip-list>\r\n                    <button (click)=\"openFiltersPanel()\" class=\"filter-button\" [class.active]=\"filterPanelRef\" #filterButton mat-icon-button>\r\n                        <mat-icon svgIcon=\"filter-list\"></mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n                <ng-content select=\"[headerFilters]\"></ng-content>\r\n                <div class=\"input-container\">\r\n                    <input type=\"text\" class=\"search-input\" placeholder=\"Search {{ itemsName }}\" trans-placeholder [formControl]=\"dataSource.searchControl\">\r\n                    <mat-icon svgIcon=\"search\"></mat-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"header-inner selected\" [class.hidden]=\"!dataSource.anyRowsSelected() || !selectedActions.children.length\">\r\n            <div class=\"left\">{{dataSource.selectedRows.selected.length}} <span class=\"text\" trans>{{itemsName}} Selected</span></div>\r\n            <div class=\"right\" #selectedActions><ng-content select=\"[headerSelectedActions]\"></ng-content></div>\r\n        </div>\r\n\r\n        <ng-content select=\"[headerContent]\"></ng-content>\r\n    </div>\r\n\r\n    <mat-table [dataSource]=\"dataSource\" [class.empty]=\"dataSource.noResults$ | async\" matSort>\r\n        <ng-container matColumnDef=\"select\">\r\n            <mat-header-cell *matHeaderCellDef>\r\n                <mat-checkbox (change)=\"$event ? dataSource.toggleAllRows() : null\"\r\n                              [checked]=\"dataSource.allRowsSelected()\"\r\n                              [indeterminate]=\"dataSource.anyRowsSelected() && ! dataSource.allRowsSelected()\">\r\n                </mat-checkbox>\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let row\">\r\n                <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                              (change)=\"$event ? dataSource.selectedRows.toggle(row) : null\"\r\n                              [checked]=\"dataSource.selectedRows.isSelected(row)\">\r\n                </mat-checkbox>\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-content></ng-content>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"columns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let myRowData; columns: columns\"></mat-row>\r\n    </mat-table>\r\n\r\n    <ng-container *ngIf=\"dataSource.noResults$ | async\">\r\n        <div class=\"no-results-message-container\" #noResults><ng-content select=\"no-results-message\"></ng-content></div>\r\n        <no-results-message *ngIf=\"!noResults.children.length\">\r\n            <span primary-text trans>Nothing To Display.</span>\r\n            <span secondary-text trans>Seems like no {{itemsName}} have been created yet.</span>\r\n        </no-results-message>\r\n    </ng-container>\r\n\r\n    <mat-paginator [class.hidden]=\"!dataSource.config.dataPaginator\" [pageSize]=\"15\" [pageSizeOptions]=\"[10, 15, 20, 50, 100]\"></mat-paginator>\r\n</div>\r\n","import {SelectOptionLists} from '@common/core/services/value-lists.service';\r\nimport {LinkOverlay} from '../link-overlay/link-overlay';\r\n\r\nexport const LINK_PAGE_TYPE = 'link_page';\r\n\r\nexport interface LinkOptionsList extends SelectOptionLists {\r\n    overlays?: LinkOverlay[];\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ColorPickerInputComponent} from '@common/core/ui/color-picker/color-picker-input/color-picker-input.component';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatIconModule} from '@angular/material/icon';\n\n\n@NgModule({\n    declarations: [\n        ColorPickerInputComponent,\n    ],\n    imports: [\n        CommonModule,\n        TranslationsModule,\n        MatIconModule,\n    ],\n    exports: [\n        ColorPickerInputComponent,\n    ]\n})\nexport class ColorPickerInputModule {\n}\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class BillingEnabledGuard implements CanActivate, CanActivateChild {\r\n    constructor(private settings: Settings, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if (this.settings.get('billing.integrated') && this.settings.get('billing.enable')) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/']);\r\n        return false;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {PaginatedBackendResponse} from '@common/core/types/pagination/paginated-backend-response';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {CustomDomain} from './custom-domain';\nimport {PaginationParams} from '@common/core/types/pagination/pagination-params';\n\nconst BASE_URI = 'custom-domain';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CustomDomainService {\n    constructor(private http: AppHttpClient) {\n    }\n\n    public index(params: (PaginationParams & {userId?: number}) = {}): PaginatedBackendResponse<CustomDomain> {\n        return this.http.get(`${BASE_URI}`, params);\n    }\n\n    public create(params: {host: string}): BackendResponse<{ domain: CustomDomain }> {\n        return this.http.post(BASE_URI, params);\n    }\n\n    public update(id: number, params: {host?: string, resource_type?: string, resource_id?: number}): BackendResponse<{ domain: CustomDomain }> {\n        return this.http.put(`${BASE_URI}/${id}`, params);\n    }\n\n    public delete(ids: number[]): BackendResponse<void> {\n        return this.http.delete(`${BASE_URI}/${ids}`);\n    }\n\n    public validate(host: string): BackendResponse<{result: 'connected'|null}> {\n        return this.http.post(`${BASE_URI}/validate/2BrM45vvfS/api`, {host});\n    }\n\n    public authorizeCrupdate(params: {host: string, domainId?: number}): BackendResponse<{serverIp: string}> {\n        return this.http.post(`${BASE_URI}/authorize/store`, params);\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Connect Domain</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form (ngSubmit)=\"nextStep()\" ngNativeValidate [formGroup]=\"form\" *ngIf=\"errors$ | async as errors\">\n    <ng-container *ngIf=\"currentStep$ | async as currentStep\">\n        <mat-dialog-content>\n            <div class=\"host-step\" *ngIf=\"currentStep === Steps.Host\">\n                <div class=\"input-container\">\n                    <label for=\"host\" trans>Host</label>\n                    <input type=\"text\" id=\"host\" formControlName=\"host\" class=\"host-input\" placeholder=\"https://example.com\" maxlength=\"100\" required>\n                    <p trans>Enter the exact domain name you want your {{ data.resourceName || 'links' }} to be accessible with. It can be a subdomain (example.yourdomain.com) or root domain (yourdomain.com).</p>\n                    <div class=\"error\" *ngIf=\"errors.host\">{{errors.host}}</div>\n                </div>\n\n                <div class=\"setting-toggle-container global-toggle\" *ngIf=\"insideAdmin()\">\n                    <mat-slide-toggle id=\"global\" formControlName=\"global\" trans>Global</mat-slide-toggle>\n                    <p trans>Whether all users should be able to select this domain.</p>\n                </div>\n            </div>\n\n            <div class=\"info-step\" *ngIf=\"currentStep === Steps.Info\">\n                <ng-container *ngIf=\"isSubdomain()\">\n                    <p trans>Add this CNAME record to your domain by visiting your DNS provider or registrar.</p>\n                    <div class=\"message-widget\">\n                        <div class=\"message\"><strong>CNAME</strong>  {{ baseUrl() }}</div>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf=\"!isSubdomain()\">\n                    <p trans>Add this A record to your domain by visiting your DNS provider or registrar.</p>\n                    <div class=\"message-widget\">\n                        <div class=\"message\"><strong>A</strong>  {{ serverIp }}</div>\n                    </div>\n                </ng-container>\n            </div>\n\n            <div class=\"validate-step\" *ngIf=\"currentStep === Steps.Validate\">\n                <div class=\"message-widget\" *ngIf=\"loading$ | async; else notLoading\">\n                    <loading-indicator class=\"small icon\" [isVisible]=\"true\"></loading-indicator>\n                    <div class=\"message\" trans>Checking DNS configuration...</div>\n                </div>\n                <ng-template #notLoading>\n                    <div class=\"message-widget warning-color\">\n                        <mat-icon svgIcon=\"warning\" class=\"icon\"></mat-icon>\n                        <div class=\"message\" trans>The domain is missing {{ isSubdomain() ? 'CNAME' : 'A'}} record pointing to {{baseUrl()}} or the changes haven't propagated yet.</div>\n                    </div>\n                    <p>{{ 'You can wait and try again later or' | trans }} <button class=\"no-style refresh-btn\" type=\"button\" [disabled]=\"loading$ | async\" (click)=\"validateCname()\" trans>refresh</button></p>\n                </ng-template>\n            </div>\n\n            <div class=\"finalize-step\" *ngIf=\"currentStep === Steps.Finalize\">\n                <div class=\"message-widget\">\n                    <loading-indicator class=\"small icon\" [isVisible]=\"true\"></loading-indicator>\n                    <div class=\"message\" trans>Connecting domain...</div>\n                </div>\n                <p trans>Don't close this window until domain is connected.</p>\n            </div>\n        </mat-dialog-content>\n\n        <mat-dialog-actions>\n            <button (click)=\"close()\" type=\"button\" class=\"cancel-button\" mat-button trans>Cancel</button>\n            <div class=\"submit-btns\">\n                <button mat-button color=\"accent\" class=\"step-btn\" type=\"button\" (click)=\"previousStep()\" *ngIf=\"currentStep > 1\" trans>\n                    <mat-icon svgIcon=\"keyboard-arrow-left\" class=\"step-icon\"></mat-icon>\n                    Previous\n                </button>\n                <button type=\"submit\" mat-raised-button class=\"step-btn\" color=\"accent\" [disabled]=\"(loading$ | async) || (disabled$ | async)\" trans>\n                    Next <mat-icon svgIcon=\"keyboard-arrow-right\" class=\"step-icon\"></mat-icon>\n                </button>\n            </div>\n        </mat-dialog-actions>\n    </ng-container>\n</form>\n","import {ChangeDetectionStrategy, Component, Inject} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {CustomDomainService} from '../custom-domain.service';\nimport {CustomDomain} from '../custom-domain';\nimport {finalize} from 'rxjs/operators';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Router} from '@angular/router';\n\ninterface CrupdateCustomDomainModalData {\n    domain: CustomDomain;\n    resourceName: string;\n}\n\nenum Steps {\n    Host = 1,\n    Info = 2,\n    Validate = 3,\n    Finalize = 4\n}\n\n@Component({\n    selector: 'crupdate-custom-domain-modal',\n    templateUrl: './crupdate-custom-domain-modal.component.html',\n    styleUrls: ['./crupdate-custom-domain-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateCustomDomainModalComponent {\n    public Steps = Steps;\n    public serverIp: string;\n    public currentStep$ = new BehaviorSubject<number>(1);\n    public loading$ = new BehaviorSubject(false);\n    public disabled$ = new BehaviorSubject(false);\n    public updating$ = new BehaviorSubject(false);\n    public errors$ = new BehaviorSubject<{host?: string}>({});\n    public form = new FormGroup({\n        host: new FormControl(),\n        global: new FormControl(false),\n    });\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateCustomDomainModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateCustomDomainModalData,\n        private customDomains: CustomDomainService,\n        private toast: Toast,\n        private settings: Settings,\n        private router: Router,\n    ) {\n        this.updating$.next(!!data.domain);\n        if (data.domain) {\n            this.form.patchValue(data.domain);\n        }\n    }\n\n    private connectDomain() {\n        this.loading$.next(true);\n        const request = this.updating$.value ?\n            this.customDomains.update(this.data.domain.id, this.form.value) :\n            this.customDomains.create(this.form.value);\n\n        request.pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.toast.open('Domain connected');\n                this.close(response.domain);\n            }, err => this.errors$.next(err.messages));\n    }\n\n    public validateCname() {\n        this.disabled$.next(true);\n        this.loading$.next(true);\n        this.customDomains.validate(this.form.value.host)\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                if (response && response.result === 'connected') {\n                   this.nextStep();\n                }\n            });\n    }\n\n    private authorizeCrupdate() {\n        this.loading$.next(true);\n        const payload = {...this.form.value};\n        if (this.data.domain) {\n            payload.domainId = this.data.domain.id;\n        }\n        this.customDomains.authorizeCrupdate(payload)\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.serverIp = response.serverIp;\n                this.nextStep(true);\n            }, r => this.errors$.next(r.messages));\n    }\n\n    public close(domain?: CustomDomain) {\n        this.dialogRef.close(domain);\n    }\n\n    public previousStep() {\n        if (this.currentStep$.value > Steps.Host) {\n            this.currentStep$.next(this.currentStep$.value - 1);\n        }\n    }\n\n    public nextStep(skipAuthorize = false) {\n        // run authorization before asking user to change their DNS\n        // in case they don't have permissions to create new domains\n        if (this.currentStep$.value === Steps.Host && !skipAuthorize) {\n            return this.authorizeCrupdate();\n        }\n\n        this.currentStep$.next(this.currentStep$.value + 1);\n        if (this.currentStep$.value === Steps.Validate) {\n            // host did not change, no need to re-validate\n            if (this.data.domain && this.form.value.host === this.data.domain.host) {\n                this.connectDomain();\n            } else {\n                this.validateCname();\n            }\n        } else if (this.currentStep$.value === Steps.Finalize) {\n            this.connectDomain();\n        } else {\n            //\n        }\n    }\n\n    public baseUrl(): string {\n        return this.settings.getBaseUrl().replace(/\\/$/, '');\n    }\n\n    public isSubdomain() {\n        return (this.form.controls.host.value.match(/\\./g) || []).length > 1;\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.indexOf('admin') > -1;\n    }\n}\n","<data-table [dataSource]=\"dataSource\" itemsName=\"domains\" matSort class=\"responsive-material-table\">\n    <ng-container headerActions>\n        <button mat-raised-button color=\"accent\" (click)=\"showCrupdateCustomDomainModal()\" trans>Add</button>\n    </ng-container>\n\n    <ng-container headerSelectedActions>\n        <button mat-icon-button [matTooltip]=\"'Delete selected' | trans\" (click)=\"maybeDeleteSelectedDomains()\">\n            <mat-icon svgIcon=\"delete\"></mat-icon>\n        </button>\n    </ng-container>\n\n    <no-results-message>\n        <div primary-text trans>No Custom Domains</div>\n        <div secondary-text trans>You have not set up any custom domains. You can set up multiple ones, such as https://yourdomain.com.</div>\n    </no-results-message>\n\n    <ng-container matColumnDef=\"host\">\n        <mat-header-cell *matHeaderCellDef trans>Host</mat-header-cell>\n        <mat-cell *matCellDef=\"let domain\">\n            <img class=\"favicon-img\" [src]=\"favicon(domain.host)\" alt=\"Domain favicon\">\n            <span>{{domain.host}}</span>\n        </mat-cell>\n    </ng-container>\n\n    <ng-container *ngIf=\"insideAdmin()\">\n        <ng-container matColumnDef=\"user\" >\n            <mat-header-cell *matHeaderCellDef mat-sort-header=\"user_id\" trans>User</mat-header-cell>\n            <mat-cell *matCellDef=\"let domain\" data-label=\"User: \">\n                <ng-container *ngIf=\"domain.user\">\n                    <img [src]=\"domain.user.avatar\">\n                    <span>{{domain.user.display_name}}</span>\n                </ng-container>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"global\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header=\"global\" trans>Global</mat-header-cell>\n            <mat-cell *matCellDef=\"let domain\" data-label=\"Global: \" trans>{{domain.global ? 'Yes' : 'No'}}</mat-cell>\n        </ng-container>\n    </ng-container>\n\n    <ng-container matColumnDef=\"updated_at\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Last Updated</mat-header-cell>\n        <mat-cell *matCellDef=\"let domain\" class=\"hidden-on-mobile\">{{domain.updated_at | formattedDate}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let domain\">\n            <button mat-icon-button (click)=\"showCrupdateCustomDomainModal(domain)\" [matTooltip]=\"'Edit domain' | trans\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n        </mat-cell>\n    </ng-container>\n</data-table>\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Paginator} from '@common/shared/paginator.service';\nimport { MatSort } from '@angular/material/sort';\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {getFaviconFromUrl} from '@common/core/utils/get-favicon-from-url';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\nimport {CustomDomain} from '../custom-domain';\nimport {CrupdateCustomDomainModalComponent} from '../crupdate-custom-domain-modal/crupdate-custom-domain-modal.component';\nimport {CustomDomainService} from '../custom-domain.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'custom-domain-index',\n    templateUrl: './custom-domain-index.component.html',\n    styleUrls: ['./custom-domain-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [Paginator],\n})\nexport class CustomDomainIndexComponent implements OnInit, OnDestroy {\n    @ViewChild(MatSort, { static: true }) matSort: MatSort;\n    public dataSource: PaginatedDataTableSource<CustomDomain>;\n\n    constructor(\n        public paginator: Paginator<CustomDomain>,\n        private domains: CustomDomainService,\n        private modal: Modal,\n        public currentUser: CurrentUser,\n        public settings: Settings,\n        private toast: Toast,\n        private router: Router,\n    ) {}\n\n    ngOnInit() {\n        // filter link overlays by current user ID if we are not in admin\n        const staticParams = !this.insideAdmin() ?\n            {userId: this.currentUser.get('id')} :\n            {};\n        this.dataSource = new PaginatedDataTableSource<CustomDomain>({\n            uri: 'custom-domain',\n            dataPaginator: this.paginator,\n            matSort: this.matSort,\n            staticParams,\n        });\n    }\n\n    ngOnDestroy() {\n        this.paginator.destroy();\n    }\n\n    public maybeDeleteSelectedDomains() {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Delete Domains',\n            body:  'Are you sure you want to delete selected domains?',\n            ok:    'Delete'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.deleteSelectedDomains();\n        });\n    }\n\n    public deleteSelectedDomains() {\n        const ids = this.dataSource.selectedRows.selected.map(d => d.id);\n        this.domains.delete(ids).subscribe(() => {\n            this.dataSource.reset();\n            this.toast.open('Custom domains deleted');\n        }, err => {\n            this.toast.open(err.messages.general || HttpErrors.Default);\n        });\n    }\n\n    public showCrupdateCustomDomainModal(domain?: CustomDomain) {\n        this.modal.open(\n            CrupdateCustomDomainModalComponent,\n            {domain},\n            'crupdate-custom-domain-modal-container'\n        ).beforeClosed().subscribe(data => {\n            if ( ! data) return;\n            this.dataSource.reset();\n        });\n    }\n\n    public favicon(url: string) {\n        return getFaviconFromUrl('https://' + url);\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.indexOf('admin') > -1;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SlugControlComponent} from './slug-control.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\n\n\n@NgModule({\n    declarations: [SlugControlComponent],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        TranslationsModule,\n        MatIconModule,\n    ],\n    exports: [\n        SlugControlComponent,\n    ]\n})\nexport class SlugControlModule {\n}\n","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, ContentChildren, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, ElementRef, Inject, ViewChild, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatRadioDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatRadioDefaultOptions.prototype.color;\n}\n/** @type {?} */\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @return {?}\n */\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatRadioGroup)),\n    multi: true\n};\n/**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nclass MatRadioChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * The MatRadioButton that emits the change event.\n     * @type {?}\n     */\n    MatRadioChange.prototype.source;\n    /**\n     * The value of the MatRadioButton.\n     * @type {?}\n     */\n    MatRadioChange.prototype.value;\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup {\n    /**\n     * @param {?} _changeDetector\n     */\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /**\n         * Selected value for the radio group.\n         */\n        this._value = null;\n        /**\n         * The HTML name attribute applied to radio buttons in this group.\n         */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /**\n         * The currently selected radio button. Should match value.\n         */\n        this._selected = null;\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         */\n        this._labelPosition = 'after';\n        /**\n         * Whether the radio group is disabled.\n         */\n        this._disabled = false;\n        /**\n         * Whether the radio group is required.\n         */\n        this._required = false;\n        /**\n         * The method to be called in order to update ngModel\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * \\@docs-private\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * Name of the radio button group. All radio buttons inside this group will use this name.\n     * @return {?}\n     */\n    get name() { return this._name; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /**\n     * Whether the radio group is disabled\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Whether the radio group is required\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @private\n     * @return {?}\n     */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        /** @type {?} */\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            }));\n        }\n    }\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange((/** @type {?} */ (this._selected)), this._value));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => radio._markForCheck()));\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return new (t || MatRadioGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" }, exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR])] });\n/** @nocollapse */\nMatRadioGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nMatRadioGroup.propDecorators = {\n    change: [{ type: Output }],\n    _radios: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatRadioButton)), { descendants: true },] }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatRadioButton)), { descendants: true }]\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_required;\n    /**\n     * Selected value for the radio group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._value;\n    /**\n     * The HTML name attribute applied to radio buttons in this group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._name;\n    /**\n     * The currently selected radio button. Should match value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._selected;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._isInitialized;\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._labelPosition;\n    /**\n     * Whether the radio group is disabled.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._disabled;\n    /**\n     * Whether the radio group is required.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._required;\n    /**\n     * The method to be called in order to update ngModel\n     * @type {?}\n     */\n    MatRadioGroup.prototype._controlValueAccessorChangeFn;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * \\@docs-private\n     * @type {?}\n     */\n    MatRadioGroup.prototype.onTouched;\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    MatRadioGroup.prototype.change;\n    /**\n     * Child radio buttons.\n     * @type {?}\n     */\n    MatRadioGroup.prototype._radios;\n    /**\n     * Theme color for all of the radio buttons in the group.\n     * @type {?}\n     */\n    MatRadioGroup.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._changeDetector;\n}\n// Boilerplate for applying mixins to MatRadioButton.\n/**\n * \\@docs-private\n */\nclass MatRadioButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatRadioButtonBase.prototype.disabled;\n    /** @type {?} */\n    MatRadioButtonBase.prototype._elementRef;\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\n/** @type {?} */\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonMixinBase {\n    /**\n     * @param {?} radioGroup\n     * @param {?} elementRef\n     * @param {?} _changeDetector\n     * @param {?} _focusMonitor\n     * @param {?} _radioDispatcher\n     * @param {?=} _animationMode\n     * @param {?=} _providerOverride\n     */\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /**\n         * The unique ID for the radio button.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /**\n         * Whether this radio is checked.\n         */\n        this._checked = false;\n        /**\n         * Value assigned to this radio.\n         */\n        this._value = null;\n        /**\n         * Unregister function for _radioDispatcher\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} name\n             * @return {?}\n             */\n            (id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            }));\n    }\n    /**\n     * Whether this radio button is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * The value of this radio button.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /**\n     * Whether the label should appear after or before the radio button. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /**\n     * Whether the radio button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /**\n     * Whether the radio button is required.\n     * @return {?}\n     */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /**\n     * Theme color of the radio button.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * ID of the native input element inside `<mat-radio-button>`\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Focuses the radio button.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /**\n     * Dispatch change event with current value.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        /** @type {?} */\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /**\n     * Sets the disabled state and marks for check if a change occurred.\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MatRadioGroup, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8)); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], viewQuery: function MatRadioButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r244 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r244)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n];\nMatRadioButton.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_required;\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._uniqueId;\n    /**\n     * The unique ID for the radio button.\n     * @type {?}\n     */\n    MatRadioButton.prototype.id;\n    /**\n     * Analog to HTML 'name' attribute used to group radios for unique selection.\n     * @type {?}\n     */\n    MatRadioButton.prototype.name;\n    /**\n     * Used to set the 'aria-label' attribute on the underlying input element.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaLabel;\n    /**\n     * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaLabelledby;\n    /**\n     * The 'aria-describedby' attribute is read after the element's label and field type.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaDescribedby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._labelPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._color;\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    MatRadioButton.prototype.change;\n    /**\n     * The parent radio group. May or may not be present.\n     * @type {?}\n     */\n    MatRadioButton.prototype.radioGroup;\n    /**\n     * Whether this radio is checked.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._checked;\n    /**\n     * Whether this radio is disabled.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._disabled;\n    /**\n     * Whether this radio is required.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._required;\n    /**\n     * Value assigned to this radio.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._value;\n    /**\n     * Unregister function for _radioDispatcher\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._removeUniqueSelectionListener;\n    /**\n     * The native `<input type=radio>` element\n     * @type {?}\n     */\n    MatRadioButton.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatRadioButton.prototype._changeDetector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._radioDispatcher;\n    /** @type {?} */\n    MatRadioButton.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._providerOverride;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup,\n        MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup,\n        MatRadioButton,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule };\n\n//# sourceMappingURL=radio.js.map","import {Component, ChangeDetectionStrategy, Inject, OnInit} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {Messages} from '../../../messages.enum';\nimport {LinkGroup} from '../../../shared/link/link-group';\nimport {LinkGroupService} from '../../../shared/link/link-group.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {distinctUntilChanged, filter, finalize} from 'rxjs/operators';\nimport {bindSlugTo} from '@common/shared/form-controls/slug-control/bind-slug-to';\nimport {slugifyString} from '@common/core/utils/slugify-string';\n\ninterface CrupdateLinkGroupModalData {\n    group: LinkGroup;\n}\n\n@Component({\n    selector: 'crupdate-link-group-modal',\n    templateUrl: './crupdate-link-group-modal.component.html',\n    styleUrls: ['./crupdate-link-group-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateLinkGroupModalComponent implements OnInit {\n    public loading$ = new BehaviorSubject(false);\n    public updating$ = new BehaviorSubject(false);\n    public errors$ = new BehaviorSubject<{name?: string}>({});\n    public form = new FormGroup({\n        name: new FormControl(),\n        public: new FormControl(false),\n        description: new FormControl(''),\n        slug: new FormControl(''),\n    });\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateLinkGroupModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateLinkGroupModalData,\n        private linkGroup: LinkGroupService,\n        private toast: Toast,\n    ) {\n        this.updating$.next(!!data.group);\n        if (data.group) {\n            this.form.patchValue(data.group);\n        }\n    }\n\n    ngOnInit() {\n        bindSlugTo(this.form.get('name'));\n    }\n\n    public confirm() {\n        this.loading$.next(true);\n\n        const request = this.updating$.value ?\n            this.linkGroup.update(this.data.group.id, this.form.value) :\n            this.linkGroup.create(this.form.value);\n\n        request.pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.toast.open(this.updating$.value ? Messages.LINK_GROUP_UPDATE_SUCCESS : Messages.LINK_GROUP_CREATE_SUCCESS);\n                this.close(response.group);\n            }, err => this.errors$.next(err.messages));\n    }\n\n    public close(group?: LinkGroup) {\n        this.dialogRef.close(group);\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title>\n        <span trans *ngIf=\"!data.group\">Create Link Group</span>\n        <span trans *ngIf=\"data.group\">Update Link Group</span>\n    </h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form (ngSubmit)=\"confirm()\" ngNativeValidate [formGroup]=\"form\" *ngIf=\"errors$ | async as errors\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container name-container\">\n            <label for=\"link-group-name\" trans>Name</label>\n            <input type=\"text\" id=\"link-group-name\" formControlName=\"name\" required minlength=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n\n        <div class=\"input-container\">\n            <slug-control formControlName=\"slug\" prefix=\"link-groups\"></slug-control>\n        </div>\n\n        <div class=\"input-container\">\n            <label for=\"link-group-description\" trans>Description</label>\n            <textarea id=\"link-group-description\" formControlName=\"description\"></textarea>\n        </div>\n\n        <div class=\"setting-toggle-container\">\n            <mat-slide-toggle formControlName=\"public\" id=\"link-group-public\" trans>Public</mat-slide-toggle>\n            <p trans>Whether this link group can be viewed by other users via url above.</p>\n        </div>\n\n\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\" trans>\n            <span *ngIf=\"updating$ | async; else creating\">Update</span>\n            <ng-template #creating>\n                <span>Create</span>\n            </ng-template>\n        </button>\n    </mat-dialog-actions>\n</form>\n\n\n","import {FormArray, FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Injectable} from '@angular/core';\r\nimport {Link} from './link';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {CrupdateLinkPayload} from './link.service';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {unsupported} from '@angular/compiler/src/render3/view/util';\r\n\r\ninterface LinkErrors extends Partial<Link> {\r\n    multiple_urls?: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LinkForm {\r\n    public group: FormGroup;\r\n    public errors$ = new BehaviorSubject<LinkErrors>({});\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private settings: Settings,\r\n    ) {\r\n        this.build();\r\n    }\r\n\r\n    public addRule(type: 'geo'|'device', value = '') {\r\n        const arr = type === 'geo' ? this.geoRules() : this.deviceRules();\r\n        arr.push(this.newRuleGroup(type, value));\r\n    }\r\n\r\n    public removeRule(type: 'geo'|'device', index: number) {\r\n        const arr = type === 'geo' ? this.geoRules() : this.deviceRules();\r\n        arr.removeAt(index);\r\n    }\r\n\r\n    public geoRules() {\r\n        return this.group.controls.geo_rules as FormArray;\r\n    }\r\n\r\n    public deviceRules() {\r\n        return this.group.controls.device_rules as FormArray;\r\n    }\r\n\r\n    public value(): CrupdateLinkPayload {\r\n        const payload = {...this.group.value};\r\n\r\n        // merge device / country rules and remove empty rules\r\n        payload.rules = payload.geo_rules\r\n            .concat(payload.device_rules)\r\n            .filter(rule => rule.key && rule.value);\r\n\r\n        // delete geo and device rule fields\r\n        delete payload.geo_rules; delete payload.device_rules;\r\n\r\n        // split link type into type and type id values\r\n        if (payload.type.indexOf(':') > -1) {\r\n            payload.type_id = parseInt(payload.type.split(':')[1]);\r\n            payload.type = payload.type.split(':')[0];\r\n        }\r\n\r\n        if (payload.multiple_urls) {\r\n            payload.multiple_urls = payload.multiple_urls.split(/\\n/g);\r\n            // send only single url or multiple urls\r\n            delete payload.long_url;\r\n            delete payload.alias;\r\n        } else {\r\n            // make sure validation is not triggered with empty string\r\n            delete payload.multiple_urls;\r\n        }\r\n\r\n        // don't unset password if user did not make any changes to it\r\n        if ( ! this.group.get('password').dirty) {\r\n            delete payload.password;\r\n        }\r\n\r\n        return payload;\r\n    }\r\n\r\n    private build() {\r\n        const defaultType = this.settings.get('links.default_type', 'direct');\r\n        this.group = this.fb.group({\r\n            type: [defaultType],\r\n            title: [''],\r\n            long_url: [''],\r\n            multiple_urls: [''],\r\n            domain_id: [null],\r\n            hash: [''],\r\n            alias: [''],\r\n            password: [''],\r\n            disabled: [false],\r\n            expires_at: [''],\r\n            description: [''],\r\n            tags: [[]],\r\n            pixels: [[]],\r\n            geo_rules: this.fb.array([\r\n               this.newRuleGroup('geo')\r\n            ]),\r\n            device_rules: this.fb.array([\r\n                this.newRuleGroup('device')\r\n            ])\r\n        });\r\n\r\n        this.group.get('multiple_urls').valueChanges.subscribe(value => {\r\n            if (value) {\r\n                this.group.get('alias').disable();\r\n            } else {\r\n                this.group.get('alias').enable();\r\n            }\r\n        });\r\n    }\r\n\r\n    private newRuleGroup(type: 'geo'|'device', value = '') {\r\n        const defaultKey = type === 'geo' ? 'us' : 'phone';\r\n        return this.fb.group({key: [defaultKey], value: [value], type: [type]});\r\n    }\r\n\r\n    public patchValue(link?: Link) {\r\n        if (link) {\r\n            const value = {...link} as {[key: string]: any};\r\n            // type=overlay, type_id=1 => type=overlay:1\r\n            if (value.type_id) {\r\n                value.type = `${link.type}:${link.type_id}`;\r\n            }\r\n            value.geo_rules = link.rules.filter(r => r.type === 'geo');\r\n            value.device_rules = link.rules.filter(r => r.type === 'device');\r\n            value.tags = value.tags.map(t => t.name);\r\n            value.pixels = value.pixels.map(p => p.id);\r\n\r\n            // show an indication to user that password exists\r\n            // event though we can't hydrate actual password\r\n            if (link.has_password) {\r\n                value.password = '******';\r\n            }\r\n\r\n            this.group.patchValue(value);\r\n\r\n            if (value.geo_rules.length) {\r\n                this.geoRules().clear();\r\n                value.geo_rules.forEach(rule => {\r\n                    this.addRule('geo', rule.value);\r\n                });\r\n            }\r\n\r\n            if (value.device_rules.length) {\r\n                this.deviceRules().clear();\r\n                value.device_rules.forEach(rule => {\r\n                    this.addRule('device', rule.value);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    public setErrors(messages?: LinkErrors) {\r\n        this.errors$.next(messages || {});\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {ControlValueAccessor, FormBuilder, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Component({\n    selector: 'datetime-input',\n    templateUrl: './datetime-input.component.html',\n    styleUrls: ['./datetime-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: DatetimeInputComponent,\n        multi: true,\n    }]\n})\nexport class DatetimeInputComponent implements ControlValueAccessor {\n    @Input() id: string;\n    @Input() currentDateAsDefault = false;\n\n    public currentDate: string;\n    public currentTime: string;\n    private initiated = false;\n\n    private propagateChange: Function;\n    public form = this.fb.group({\n        date: [''],\n        time: [''],\n    });\n\n    constructor(private fb: FormBuilder) {\n        this.setCurrentDatetime();\n    }\n\n    public writeValue(value: string) {\n        let [date, time] = (value || '').split(' ');\n\n        if ( ! this.initiated && this.currentDateAsDefault) {\n            date = date || this.currentDate;\n            time = time || this.currentTime;\n        }\n\n        this.initiated = true;\n        this.form.patchValue({date, time});\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n        this.form.valueChanges.subscribe(value => {\n            if ( ! value.time) {\n                value.time = '00:00';\n            }\n            let datetime = `${value.date} ${value.time}`;\n            // add seconds, if don't already exist\n            if (datetime.split(':').length === 2) {\n               datetime += ':00';\n            }\n            this.propagateChange(datetime);\n        });\n    }\n\n    public registerOnTouched() {}\n\n    private setCurrentDatetime() {\n        const [date, time] = (new Date).toISOString().replace('Z', '').split('T');\n        const [hours, minutes] = time.split(':');\n        this.currentDate = date;\n        this.currentTime = `${hours}:${minutes}`;\n    }\n}\n","<fieldset [formGroup]=\"form\">\n    <legend><ng-content></ng-content></legend>\n    <div class=\"inline-inputs-container\">\n        <div class=\"input-container\">\n            <label [for]=\"id + '-date'\" class=\"hidden\" trans>Date</label>\n            <input type=\"date\" [id]=\"id + '-date'\" class=\"date-input\" formControlName=\"date\" [placeholder]=\"currentDate\">\n        </div>\n        <div class=\"input-container\">\n            <label [for]=\"id + '-time'\" class=\"hidden trans\">Time</label>\n            <input type=\"time\" [id]=\"id + '-time'\" class=\"time-input\" formControlName=\"time\" [placeholder]=\"currentTime\">\n        </div>\n    </div>\n</fieldset>","<ng-container [formGroup]=\"linkForm.group\" *ngIf=\"linkForm.errors$ | async as errors\">\r\n    <div class=\"group first-group\">\r\n        <div class=\"inline-inputs-container\">\r\n            <div class=\"input-container\">\r\n                <label for=\"link-dialog-alias\" trans>Custom Link ID</label>\r\n                <input type=\"text\" id=\"link-dialog-alias\" formControlName=\"alias\" [minlength]=\"aliasMin\" [maxlength]=\"aliasMax\" pattern=\"[A-Za-z0-9_-]+\">\r\n                <p class=\"error\" *ngIf=\"errors.alias\">{{errors.alias}}</p>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <datetime-input id=\"link_dialog_expires_at\" formControlName=\"expires_at\" trans>Expiration Date</datetime-input>\r\n                <p class=\"error\" *ngIf=\"errors.expires_at\">{{errors.expires_at}}</p>\r\n            </div>\r\n        </div>\r\n\r\n       <div class=\"inline-inputs-container\">\r\n           <div class=\"input-container\">\r\n               <label for=\"link_dialog_disabled\" trans>Disabled</label>\r\n               <select id=\"link_dialog_disabled\" formControlName=\"disabled\">\r\n                   <option [ngValue]=\"true\" trans>Yes</option>\r\n                   <option [ngValue]=\"false\" trans>No</option>\r\n               </select>\r\n           </div>\r\n           <div class=\"input-container\">\r\n               <label for=\"link-dialog-password\" trans>Password</label>\r\n               <input type=\"password\" id=\"link-dialog-password\" formControlName=\"password\">\r\n               <p class=\"error\" *ngIf=\"errors.password\">{{errors.password}}</p>\r\n           </div>\r\n       </div>\r\n    </div>\r\n\r\n    <div class=\"group\" *ngIf=\"linkOptions?.domains?.length && this.settings.get('custom_domains.allow_select')\">\r\n        <header>\r\n            <div class=\"header-text\">\r\n                <h3 trans>Domain</h3>\r\n                <p trans>Select on which domain should this short link be accessible.</p>\r\n            </div>\r\n        </header>\r\n        <div class=\"input-container\">\r\n            <label for=\"link_dialog_domain_id\" class=\"hidden\" trans>Domain</label>\r\n            <select id=\"link_dialog_domain_id\" formControlName=\"domain_id\">\r\n                <option [ngValue]=\"null\" trans>All my domains (including default)</option>\r\n                <ng-container *ngIf=\"defaultHost$ | async as defaultHost\">\r\n                    <option [ngValue]=\"0\">{{defaultHost}}</option>\r\n                    <ng-container *ngFor=\"let domain of linkOptions.domains\">\r\n                        <option [ngValue]=\"domain.id\" *ngIf=\"defaultHost !== domain.host\">{{domain.host}}</option>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </select>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"group many-inputs\">\r\n        <header>\r\n            <div class=\"header-text\">\r\n                <h3 trans>Tags and Description</h3>\r\n                <p trans>Add tags and description to easily find your links.</p>\r\n            </div>\r\n        </header>\r\n        <div class=\"input-container\">\r\n            <label for=\"link_dialog_title\" trans>Title</label>\r\n            <input type=\"text\" id=\"link_dialog_title\" formControlName=\"title\" maxlength=\"140\">\r\n            <p class=\"error\" *ngIf=\"errors.title\">{{errors.title}}</p>\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n            <label for=\"link_dialog_tags\" trans>Tags</label>\r\n            <chip-input id=\"link_dialog_tags\" formControlName=\"tags\" placeholder=\"+New tag\" trans-placeholder></chip-input>\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n            <label for=\"link_dialog_description\" trans>Description</label>\r\n            <textarea id=\"link_dialog_description\" formControlName=\"description\" maxlength=\"240\"></textarea>\r\n            <p class=\"error\" *ngIf=\"errors.description\">{{errors.description}}</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"group\" *ngIf=\"linkOptions?.pixels?.length && this.settings.get('links.pixels')\">\r\n        <header>\r\n            <div class=\"header-text\">\r\n                <h3 trans>Tracking Pixel</h3>\r\n                <p trans>Select tracking pixels that should be used for this link.</p>\r\n            </div>\r\n        </header>\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Tracking Pixels</mat-label>\r\n            <mat-select formControlName=\"pixels\" multiple>\r\n                <mat-option *ngFor=\"let pixel of linkOptions.pixels\" [value]=\"pixel.id\">{{capitalize(pixel.name)}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"group\" *ngIf=\"linkOptions && settings.get('links.geo_targeting')\">\r\n        <header>\r\n            <div class=\"header-text\">\r\n                <h3 trans>Location Targeting</h3>\r\n                <p trans>Redirect users to different urls based on their location.</p>\r\n            </div>\r\n            <button mat-icon-button color=\"accent\" type=\"button\" (click)=\"linkForm.addRule('geo')\">\r\n                <mat-icon svgIcon=\"add\"></mat-icon>\r\n            </button>\r\n        </header>\r\n        <ul>\r\n            <li class=\"inline-inputs-container rule-inline-inputs\" *ngFor=\"let group of linkForm.geoRules().controls; let i = index;\">\r\n                <div class=\"input-container country-input-container\" [formGroup]=\"group\">\r\n                    <label [for]=\"'link_dialog_country-' + i\" trans>Country</label>\r\n                    <select [id]=\"'link_dialog_country-' + i\" formControlName=\"key\">\r\n                        <option [value]=\"country.code\" *ngFor=\"let country of linkOptions.countries\">{{country.name}}</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"input-container\" [formGroup]=\"group\">\r\n                    <label [for]=\"'link_dialog_geo_url-' + i\" trans>Url</label>\r\n                    <input type=\"url\" [id]=\"'link_dialog_geo_url-' + i\" formControlName=\"value\">\r\n                </div>\r\n\r\n                <button mat-icon-button color=\"warn\" type=\"button\" class=\"remove-rule-btn\" (click)=\"linkForm.removeRule('geo', i)\">\r\n                    <mat-icon svgIcon=\"close\"></mat-icon>\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"group\" *ngIf=\"settings.get('links.device_targeting')\">\r\n        <header>\r\n            <div class=\"header-text\">\r\n                <h3 trans>Device Targeting</h3>\r\n                <p trans>Redirect users to different urls based on their device.</p>\r\n            </div>\r\n            <button mat-icon-button color=\"accent\" type=\"button\" (click)=\"linkForm.addRule('device')\">\r\n                <mat-icon svgIcon=\"add\"></mat-icon>\r\n            </button>\r\n        </header>\r\n        <ul>\r\n            <li class=\"inline-inputs-container rule-inline-inputs\" *ngFor=\"let group of linkForm.deviceRules().controls; let i = index;\">\r\n                <div class=\"input-container device-input-container\" [formGroup]=\"group\">\r\n                    <label [for]=\"'link_dialog_device-' + i\" trans>Device</label>\r\n                    <select [id]=\"'link_dialog_device-' + i\" formControlName=\"key\">\r\n                        <option value=\"desktop\" trans>Desktop</option>\r\n                        <option value=\"tablet\" trans>Tablet</option>\r\n                        <option value=\"phone\" trans>Phone</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"input-container\" [formGroup]=\"group\">\r\n                    <label [for]=\"'link_dialog_device_url-' + i\" trans>Url</label>\r\n                    <input type=\"url\" [id]=\"'link_dialog_device_url-' + i\" formControlName=\"value\">\r\n                </div>\r\n\r\n                <button mat-icon-button type=\"button\" color=\"warn\" class=\"remove-rule-btn\" (click)=\"linkForm.removeRule('device', i)\">\r\n                    <mat-icon svgIcon=\"close\"></mat-icon>\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</ng-container>\r\n","import {ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {LinkForm} from '../../../shared/link/link.form';\nimport {SelectOptionLists} from '@common/core/services/value-lists.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {ucFirst} from '@common/core/utils/uc-first';\nimport {BehaviorSubject} from 'rxjs';\nimport {TrackingPixel} from '../../pixels/tracking-pixel';\n\n@Component({\n    selector: 'link-options-form',\n    templateUrl: './link-options-form.component.html',\n    styleUrls: ['./link-options-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkOptionsFormComponent implements OnChanges {\n    @Input() linkOptions: SelectOptionLists & {pixels: TrackingPixel[]};\n    public defaultHost$ = new BehaviorSubject<string>(null);\n\n    public aliasMin: number;\n    public aliasMax: number;\n\n    constructor(\n        public linkForm: LinkForm,\n        public settings: Settings,\n    ) {\n        this.aliasMin = this.settings.get('links.alias_min');\n        this.aliasMax = this.settings.get('links.alias_max');\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.linkOptions.currentValue) {\n            const defaultHost = this.settings.get('custom_domains.default_host');\n            if (defaultHost) {\n                this.defaultHost$.next(this.linkOptions.domains.find(d => d.host === defaultHost).host);\n            } else {\n                const baseUrl = this.settings.getBaseUrl()\n                    .replace(/\\/$/, '')\n                    .replace(/(^\\w+:|^)\\/\\//, '');\n                this.defaultHost$.next(baseUrl);\n            }\n        }\n    }\n\n    public capitalize(string: string): string {\n        return ucFirst(string);\n    }\n}\n","<mat-menu #rootMenu>\n    <div mat-menu-item class=\"multiline-mat-menu-item\" (click)=\"selectValue('direct')\" [class.active]=\"value === 'direct'\">\n        <div class=\"title\" trans>Direct</div>\n        <div class=\"description\" trans>Redirect user to url instantly.</div>\n    </div>\n    <div mat-menu-item class=\"multiline-mat-menu-item\" (click)=\"selectValue('frame')\" [class.active]=\"value === 'frame'\">\n        <div class=\"title\" trans>Frame</div>\n        <div class=\"description\" trans>Show url inside iframe with BeLink navigation bar.</div>\n    </div>\n    <div mat-menu-item class=\"multiline-mat-menu-item\" (click)=\"selectValue('splash')\" [class.active]=\"value === 'splash'\">\n        <div class=\"title\" trans>Splash</div>\n        <div class=\"description\" trans>Show splash page with optional ads and redirect user to url after a delay.</div>\n    </div>\n    <div mat-menu-item class=\"multiline-mat-menu-item\" [matMenuTriggerFor]=\"customPagesMenu\" [class.hidden]=\"!linkOptions?.pages.length\" [class.active]=\"value.includes('page')\">\n        <div class=\"title\" trans>Custom Page</div>\n        <div class=\"description\" trans>Show specified custom page and redirect user to link after a delay.</div>\n    </div>\n    <div mat-menu-item class=\"multiline-mat-menu-item\" [matMenuTriggerFor]=\"overlayMenu\" [class.hidden]=\"!linkOptions?.overlays.length\" [class.active]=\"value.includes('overlay')\">\n        <div class=\"title\" trans>Overlay</div>\n        <div class=\"description\" trans>Redirect user instantly and show specified overlay over the link.</div>\n    </div>\n</mat-menu>\n\n<mat-menu #customPagesMenu>\n    <button mat-menu-item *ngFor=\"let page of linkOptions?.pages\" (click)=\"selectValue('page:' + page.id)\" [class.active]=\"value === 'page:' + page.id\">{{page.title}}</button>\n</mat-menu>\n\n<mat-menu #overlayMenu>\n    <button mat-menu-item *ngFor=\"let overlay of linkOptions?.overlays\"  (click)=\"selectValue('overlay:' + overlay.id)\" [class.active]=\"value === 'overlay:' + overlay.id\">{{overlay.name}}</button>\n</mat-menu>","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewChild} from '@angular/core';\nimport { MatMenu } from '@angular/material/menu';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {LinkType} from '../../../shared/link/link';\nimport {LinkOptionsList} from '../types';\n\n@Component({\n    selector: 'link-type-menu',\n    templateUrl: './link-type-menu.component.html',\n    styleUrls: ['./link-type-menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: LinkTypeMenuComponent,\n        multi: true,\n    }]\n})\nexport class LinkTypeMenuComponent implements ControlValueAccessor {\n    @ViewChild('rootMenu', {static: true}) matMenu: MatMenu;\n    @Input() linkOptions: LinkOptionsList;\n    public value: string;\n    private propagateChange: Function;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    public writeValue(value: string) {\n        this.value = value;\n        this.cd.detectChanges();\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    public selectValue(value: LinkType|string) {\n        this.value = value;\n        this.propagateChange(value);\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title>\n        <span *ngIf=\"updating$ | async; else creating\" trans>Update Link</span>\n        <ng-template #creating><span trans>Creating Link</span></ng-template>\n    </h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form (ngSubmit)=\"confirm()\" ngNativeValidate>\n    <mat-dialog-content>\n        <ng-container *ngIf=\"linkForm.errors$ | async as errors\" [formGroup]=\"linkForm.group\">\n            <div *ngIf=\"multiple$ | async; else single\" class=\"input-container\">\n                <label for=\"link-dialog-multiple-urls\" trans>Multiple URLs (one per line)</label>\n                <textarea name=\"link-dialog-multiple-urls\" id=\"link-dialog-multiple-urls\" rows=\"10\" formControlName=\"multiple_urls\"></textarea>\n                <div class=\"error\" *ngIf=\"errors.multiple_urls\">{{errors.multiple_urls}}</div>\n            </div>\n            <ng-template #single>\n                <div class=\"input-container link-input-container\">\n                    <label for=\"link-dialog-long-url\" class=\"hidden\" trans>Paste long url</label>\n                    <div class=\"input-with-action\">\n                        <input type=\"text\" id=\"link-dialog-long-url\" formControlName=\"long_url\" placeholder=\"Enter long url...\" trans-placeholder minlength=\"3\" maxlength=\"250\" required>\n                        <ng-container *ngIf=\"settings.get('links.enable_type')\">\n                            <button mat-flat-button class=\"type-button\" color=\"gray\" type=\"button\" [matMenuTriggerFor]=\"linkTypeMenu.matMenu\">\n                                <span trans>{{typeViewName()}}</span>\n                                <mat-icon svgIcon=\"arrow-drop-down\"></mat-icon>\n                            </button>\n                            <link-type-menu [linkOptions]=\"linkOptions$ | async\" #linkTypeMenu formControlName=\"type\"></link-type-menu>\n                        </ng-container>\n                    </div>\n                    <div class=\"error\" *ngIf=\"errors.long_url\">{{errors.long_url}}</div>\n                </div>\n            </ng-template>\n            <div class=\"actions\">\n                <button type=\"button\" class=\"advanced-options-btn\" mat-button (click)=\"toggleOptions()\">\n                    <mat-icon svgIcon=\"settings\"></mat-icon>\n                    <span trans>Advanced Options</span>\n                </button>\n            </div>\n\n            <link-options-form [@bodyExpansion]=\"optionsVisible$ | async\" [linkOptions]=\"linkOptions$ | async\"></link-options-form>\n        </ng-container>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <mat-slide-toggle class=\"multiple-toggle\" *ngIf=\"!data.link\" (change)=\"toggleMultiple($event)\" [checked]=\"false\" trans>Multiple</mat-slide-toggle>\n\n        <button (click)=\"close()\" type=\"button\" mat-button trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\" trans>Confirm</button>\n    </mat-dialog-actions>\n</form>\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {BehaviorSubject, ReplaySubject} from 'rxjs';\nimport {Link} from '../../../shared/link/link';\nimport {LinkForm} from '../../../shared/link/link.form';\nimport {LinkService} from '../../../shared/link/link.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {Messages} from '../../../messages.enum';\nimport {LinkGroup} from '../../../shared/link/link-group';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {ValueLists} from '@common/core/services/value-lists.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {LINK_PAGE_TYPE, LinkOptionsList} from '../types';\nimport {Settings} from '@common/core/config/settings.service';\nimport {finalize} from 'rxjs/operators';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport * as urlRegex from 'url-regex';\nimport {Translations} from '@common/core/translations/translations.service';\nimport {RecaptchaService} from '@common/core/services/recaptcha.service';\n\ninterface CrupdateLinkModalData {\n    link: Link;\n    group?: LinkGroup;\n}\n\n@Component({\n    selector: 'crupdate-link-modal',\n    templateUrl: './crupdate-link-modal.component.html',\n    styleUrls: ['./crupdate-link-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('bodyExpansion', [\n            state('false', style({height: '0px', visibility: 'hidden'})),\n            state('true', style({height: '*', visibility: 'visible'})),\n            transition('true <=> false',\n                animate('225ms cubic-bezier(0.4,0.0,0.2,1)')),\n        ])\n    ],\n    providers: [LinkForm],\n})\nexport class CrupdateLinkModalComponent implements OnInit {\n    public loading$ = new BehaviorSubject(false);\n    public updating$ = new BehaviorSubject(false);\n    public optionsVisible$ = new BehaviorSubject(false);\n    public linkOptions$ = new BehaviorSubject<LinkOptionsList>(null);\n    public multiple$ = new ReplaySubject(1);\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateLinkModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateLinkModalData,\n        public linkForm: LinkForm,\n        private links: LinkService,\n        private toast: Toast,\n        private valueLists: ValueLists,\n        private currentUser: CurrentUser,\n        public settings: Settings,\n        private i18n: Translations,\n        private recaptcha: RecaptchaService,\n    ) {\n        if (data.link) {\n            this.updating$.next(true);\n            this.linkForm.patchValue(data.link);\n        }\n    }\n\n    ngOnInit() {\n        this.valueLists.get(['countries', 'domains', 'pages', 'overlays', 'pixels'], {\n            userId: this.currentUser.get('id'),\n            pageType: LINK_PAGE_TYPE\n        }).subscribe(response => {\n            this.linkOptions$.next(response);\n        });\n\n        this.multiple$.subscribe(() => {\n            this.linkForm.group.patchValue({\n                long_url: '',\n                multiple_urls: '',\n                alias: '',\n            });\n        });\n    }\n\n    public async confirm() {\n        const payload = this.getPayload();\n\n        if (payload.multiple_urls) {\n            if (payload.multiple_urls.some(u => this.urlInvalid(u))) {\n                return this.linkForm.setErrors({multiple_urls: this.i18n.t('Some of the urls are not valid.')});\n            }\n        } else if (this.urlInvalid(payload.long_url))  {\n            return this.linkForm.setErrors({long_url: this.i18n.t('This url is invalid.')});\n        }\n\n        this.loading$.next(true);\n\n        if ( ! await this.recaptcha.verify('link_creation')) {\n            return this.loading$.next(false);\n        }\n\n        const request = this.updating$.value ?\n            this.links.update(this.data.link.id, payload) :\n            this.links.create(payload);\n\n        request.pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                if (payload.multiple_urls) {\n                    this.toast.open(Messages.MULTIPLE_LINKS_CREATE_SUCCESS);\n                    this.close((response as {links: Link[]}).links);\n                } else {\n                    this.toast.open(this.updating$.value ? Messages.LINK_UPDATE_SUCCESS : Messages.LINK_CREATE_SUCCESS);\n                    this.close((response as {link: Link}).link);\n                }\n            }, err => this.linkForm.setErrors(err.messages));\n    }\n\n    public close(data?: Link|Link[]) {\n        this.dialogRef.close(data);\n    }\n\n    public toggleOptions() {\n        this.optionsVisible$.next(!this.optionsVisible$.value);\n    }\n\n    public typeViewName() {\n        const type = this.linkForm.group.get('type').value;\n        return type.split(':')[0];\n    }\n\n    private getPayload() {\n        const payload = this.linkForm.value();\n        if (this.data.group) {\n            payload.group_id = this.data.group.id;\n        }\n        return payload;\n    }\n\n    public toggleMultiple(e: MatSlideToggleChange) {\n        this.multiple$.next(e.checked);\n        this.optionsVisible$.next(false);\n    }\n\n    private urlInvalid(url: string) {\n        return !urlRegex({exact: true, strict: false}).test(url);\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Attach Existing Link</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<mat-dialog-content>\n    <div class=\"input-container\">\n        <input type=\"text\" placeholder=\"Search for links...\" [formControl]=\"searchControl\">\n        <loading-indicator [isVisible]=\"loading$ | async\" class=\"small\"></loading-indicator>\n    </div>\n\n    <div class=\"links\" *ngIf=\"links$ | async as links\">\n        <div class=\"link\" *ngFor=\"let link of links\" (click)=\"confirm(link)\">\n            <img [src]=\"favicon(link.long_url)\">\n            <button class=\"meta overflow-hidden no-style\" [disabled]=\"loading$ | async\">\n                <span class=\"long-url overflow-hidden\">{{link.long_url}}</span>\n                <span class=\"short-url overflow-hidden\">{{link.short_url}}</span>\n            </button>\n        </div>\n        <div class=\"link\" *ngIf=\"!links.length\">\n            <no-results-message [horizontal]=\"true\">\n                <span secondary-text trans>Could not find any links matching this query.</span>\n            </no-results-message>\n        </div>\n    </div>\n</mat-dialog-content>\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {LinkGroup} from '../../../shared/link/link-group';\nimport {LinkGroupService} from '../../../shared/link/link-group.service';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {LinkService} from '../../../shared/link/link.service';\nimport {FormControl} from '@angular/forms';\nimport {catchError, debounceTime, distinctUntilChanged, finalize, map, startWith, switchMap} from 'rxjs/operators';\nimport {Link} from '../../../shared/link/link';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Messages} from '../../../messages.enum';\nimport {getFaviconFromUrl} from '@common/core/utils/get-favicon-from-url';\n\ninterface AttachLinkModalData {\n    group?: LinkGroup;\n}\n\n@Component({\n    selector: 'attach-link-modal',\n    templateUrl: './attach-link-modal.component.html',\n    styleUrls: ['./attach-link-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AttachLinkModalComponent implements OnInit {\n    public loading$ = new BehaviorSubject(false);\n    public links$ = new BehaviorSubject<Link[]>(null);\n    public searchControl = new FormControl();\n\n    constructor(\n        private dialogRef: MatDialogRef<AttachLinkModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: AttachLinkModalData,\n        private linkGroup: LinkGroupService,\n        private link: LinkService,\n        private currentUser: CurrentUser,\n        private toast: Toast,\n    ) {}\n\n    ngOnInit() {\n        this.searchControl.valueChanges\n            .pipe(\n                startWith(''),\n                debounceTime(250),\n                distinctUntilChanged(),\n                switchMap(query => this.findLinks(query)),\n                catchError(() => of([])),\n            ).subscribe(links => {\n                this.links$.next(links);\n                this.loading$.next(false);\n            });\n    }\n\n    public close(link?: Link) {\n        this.dialogRef.close(link);\n    }\n\n    public confirm(link: Link) {\n        this.loading$.next(true);\n        this.linkGroup.attach(this.data.group.id, [link.id])\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(() => {\n                this.toast.open(Messages.LINK_ATTACH_SUCCESS);\n                this.close(link);\n            });\n    }\n\n    private findLinks(query: string): Observable<Link[]> {\n        this.loading$.next(true);\n        const userId = this.currentUser.get('id'),\n            groupId = '!' + this.data.group.id;\n        return this.link.index({query, userId, groupId, per_page: 8}).pipe(map(r => r.pagination.data));\n    }\n\n    public favicon(url: string) {\n        return getFaviconFromUrl(url);\n    }\n}\n","import {DataTableFilter} from '@common/shared/data-table/filter-panel/data-table-filters';\r\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\r\nimport {Link} from '../../../shared/link/link';\r\n\r\nexport const LINK_INDEX_FILTERS: DataTableFilter[] = [\r\n    {\r\n        name: 'status',\r\n        column: 'status',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'all'},\r\n            {name: 'enabled', value: 'enabled'},\r\n            {name: 'disabled', value: 'disabled'},\r\n            {name: 'expired', value: 'expired'},\r\n        ]\r\n    },\r\n    {\r\n        name: 'password',\r\n        column: 'password',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'all'},\r\n            {name: 'with_password', value: true},\r\n            {name: 'without_password', value: false}\r\n        ]\r\n    },\r\n    {\r\n        name: 'expiration',\r\n        column: 'expires_at',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'all'},\r\n            {name: 'with_expiration_date', value: true},\r\n            {name: 'without_expiration_date', value: false}\r\n        ]\r\n    },\r\n    {\r\n        name: 'type',\r\n        column: 'type',\r\n        type: 'select',\r\n        options: [\r\n            {name: 'all'},\r\n            {name: 'direct'},\r\n            {name: 'overlay'},\r\n            {name: 'frame'},\r\n            {name: 'custom_page'},\r\n        ]\r\n    },\r\n    {\r\n        name: 'user',\r\n        column: 'user_id',\r\n        type: 'user-select',\r\n        condition: (dataSource: PaginatedDataTableSource<Link>) => {\r\n            return !dataSource.config.staticParams.userId;\r\n        }\r\n    },\r\n];\r\n","<data-table [dataSource]=\"dataSource\" itemsName=\"links\" matSort class=\"responsive-material-table\">\n    <ng-container headerActions>\n        <button mat-raised-button color=\"accent\" (click)=\"showCrupdateLinkModal()\"  trans>New Link</button>\n        <button mat-button (click)=\"showAttachLinkModal()\" *ngIf=\"group\" trans>Attach</button>\n    </ng-container>\n\n    <div class=\"message-widget warning-color\" *ngIf=\"linkUsage.overClickQuota()\" headerContent>\n        <mat-icon svgIcon=\"warning\" class=\"icon\"></mat-icon>\n        <span class=\"message\" trans>You have exhausted your click quota for this month.</span>\n        <a routerLink=\"billing/upgrade\" class=\"upgrade-button\" *ngIf=\"settings.get('billing.enable')\" mat-raised-button trans>Upgrade</a>\n    </div>\n\n    <ng-container headerSelectedActions>\n        <button mat-icon-button [matTooltip]=\"'Detach selected' | trans\" (click)=\"maybeDetachSelectedLinks()\" *ngIf=\"group\">\n            <mat-icon svgIcon=\"detach\"></mat-icon>\n        </button>\n        <button mat-icon-button [matTooltip]=\"'Delete selected' | trans\" (click)=\"maybeDeleteSelectedLinks()\">\n            <mat-icon svgIcon=\"delete\"></mat-icon>\n        </button>\n    </ng-container>\n\n    <ng-container matColumnDef=\"summary\">\n        <mat-header-cell *matHeaderCellDef class=\"multiline-column\" trans>Summary</mat-header-cell>\n        <mat-cell *matCellDef=\"let link\" class=\"multiline-column\">\n            <a class=\"long-url\" [href]=\"link.long_url\" target=\"_blank\">\n                <img class=\"favicon-img\" [src]=\"favicon(link.long_url)\" alt=\"Link favicon\">\n                <span>{{removeProtocol(link.long_url)}}</span>\n            </a>\n            <div class=\"short-url\">\n                <a [href]=\"link.short_url\" target=\"_blank\">{{link.short_url}}</a>\n            </div>\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"clicks\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header=\"clicks_count\" trans>Clicks</mat-header-cell>\n        <mat-cell *matCellDef=\"let link\" data-label=\"Clicks: \">{{link.clicks_count}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"type\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Type</mat-header-cell>\n        <mat-cell *matCellDef=\"let link\" data-label=\"Type: \" trans>{{link.type}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"password\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Password</mat-header-cell>\n        <mat-cell *matCellDef=\"let link\" class=\"hidden-on-mobile\" trans>{{ link.has_password ? 'Yes' : 'No' }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"expires_at\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Expires At</mat-header-cell>\n        <mat-cell *matCellDef=\"let link\" class=\"hidden-on-mobile\">{{ link.deleted_at ? ('Expired' | trans) : (link.expires_at ? (link.expires_at | formattedDate) : '-') }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"created_at\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Last Updated</mat-header-cell>\n        <mat-cell *matCellDef=\"let link\" class=\"hidden-on-mobile\">{{link.updated_at | formattedDate}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let link\">\n            <a mat-icon-button [routerLink]=\"['/', getParentRoute(), 'links', link.id]\" [matTooltip]=\"'Link Statistics' | trans\">\n                <mat-icon svgIcon=\"visibility\"></mat-icon>\n            </a>\n            <copy-link-btn [model]=\"link\"></copy-link-btn>\n            <button mat-icon-button (click)=\"showCrupdateLinkModal(link)\" [matTooltip]=\"'Edit link' | trans\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n        </mat-cell>\n    </ng-container>\n</data-table>\n","import {\n    AfterViewInit,\n    ApplicationRef,\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\nimport {Paginator} from '@common/shared/paginator.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {getFaviconFromUrl} from '@common/core/utils/get-favicon-from-url';\nimport {Link} from '../../../shared/link/link';\nimport {CrupdateLinkModalComponent} from '../crupdate-link-modal/crupdate-link-modal.component';\nimport {DataTableSourceConfig} from '@common/shared/data-table/data/data-table-source-config';\nimport {LinkGroup} from '../../../shared/link/link-group';\nimport {LinkService} from '../../../shared/link/link.service';\nimport {LinkGroupService} from '../../../shared/link/link-group.service';\nimport {AttachLinkModalComponent} from '../../link-group/attach-link-modal/attach-link-modal.component';\nimport {LinkUsageService} from '../../../shared/link/link-usage.service';\nimport {LINK_INDEX_FILTERS} from './link-index-filters';\nimport {Router} from '@angular/router';\nimport merge from 'deepmerge';\nimport {RecaptchaService} from '@common/core/services/recaptcha.service';\n\n@Component({\n    selector: 'link-index',\n    templateUrl: './link-index.component.html',\n    styleUrls: ['./link-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [Paginator],\n})\nexport class LinkIndexComponent implements OnInit, AfterViewInit, OnDestroy {\n    @ViewChild(MatSort, { static: true }) matSort: MatSort;\n    @Input() params: Partial<DataTableSourceConfig<Link>> = {};\n    @Input() group: LinkGroup;\n    public dataSource: PaginatedDataTableSource<Link>;\n\n    constructor(\n        public paginator: Paginator<Link>,\n        private links: LinkService,\n        private linkGroups: LinkGroupService,\n        private modal: Modal,\n        public currentUser: CurrentUser,\n        public settings: Settings,\n        private toast: Toast,\n        public linkUsage: LinkUsageService,\n        private router: Router,\n        private recaptcha: RecaptchaService,\n    ) {}\n\n    ngOnInit() {\n        // filter links by current user ID if we are not in admin\n        if (this.router.url.indexOf('admin') === -1) {\n            this.params = merge(this.params, {staticParams: {userId: this.currentUser.get('id')}});\n        }\n        this.dataSource = new PaginatedDataTableSource<Link>({\n            uri: 'link',\n            dataPaginator: this.paginator,\n            matSort: this.matSort,\n            filters: LINK_INDEX_FILTERS,\n            ...this.params,\n        });\n    }\n\n    ngAfterViewInit() {\n        this.recaptcha.loadIfEnableFor('link_creation');\n    }\n\n    ngOnDestroy() {\n        this.paginator.destroy();\n    }\n\n    public favicon(url: string) {\n        return getFaviconFromUrl(url);\n    }\n\n    public maybeDeleteSelectedLinks() {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Delete Links',\n            body:  'Are you sure you want to delete selected links?',\n            ok:    'Delete'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.deleteSelectedLinks();\n        });\n    }\n\n    public deleteSelectedLinks() {\n        const ids = this.dataSource.getSelectedItems();\n        this.links.delete(ids).subscribe(() => {\n            this.dataSource.reset();\n            this.linkUsage.reload();\n        }, err => {\n            this.toast.open(err.messages.general || HttpErrors.Default);\n        });\n    }\n\n    public maybeDetachSelectedLinks() {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Detach Links',\n            body:  'Are you sure you want to detach selected links?',\n            ok:    'Detach'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.detachSelectedLinks();\n        });\n    }\n\n    public detachSelectedLinks() {\n        const ids = this.dataSource.getSelectedItems();\n        this.linkGroups.detach(this.group.id, ids).subscribe(() => {\n            this.dataSource.reset();\n        }, err => {\n            this.toast.open(err.messages.general || HttpErrors.Default);\n        });\n    }\n\n    public showCrupdateLinkModal(link?: Link) {\n        this.modal.open(\n            CrupdateLinkModalComponent,\n            {link, group: this.group},\n            'crupdate-link-modal-container'\n        ).beforeClosed().subscribe(data => {\n            if ( ! data) return;\n            this.dataSource.reset();\n            this.linkUsage.reload();\n        });\n    }\n\n    public showAttachLinkModal() {\n        this.modal.open(\n            AttachLinkModalComponent,\n            {group: this.group},\n            'attach-link-modal-container'\n        ).beforeClosed().subscribe(data => {\n            if ( ! data) return;\n            this.dataSource.reset();\n        });\n    }\n\n    public removeProtocol(url: string) {\n        return url.replace(/(^\\w+:|^)\\/\\//, '');\n    }\n\n    public getParentRoute(): string {\n        return this.router.url.indexOf('admin') > -1 ? 'admin' : 'dashboard';\n    }\n}\n","<div class=\"header\">\n    <div class=\"current-plan\">\n        {{ ('Current Plan:' | trans) + ' ' + (currentUser.getSubscription()?.plan?.name || ('Free' | trans))}}\n    </div>\n    <div class=\"next-payment\">\n        {{ ('Next Payment:' | trans) + ' ' + ((currentUser.getSubscription()?.renews_at | formattedDate) || ('Never' | trans))}}\n    </div>\n</div>\n\n<ul *ngIf=\"linkUsage.usage$ | async as usage\">\n    <li *ngIf=\"usage.links\">{{usage.links.used + ' ' + ('out of' | trans) + ' ' + (usage.links.total || ('Unlimited' | trans)) + ' ' + ('Links' | trans) }}</li>\n    <li *ngIf=\"usage.clicks\">{{usage.clicks.used + ' ' + ('out of' | trans) + ' ' + (usage.clicks.total || ('Unlimited' | trans)) + ' ' + ('Visitors' | trans) }}</li>\n    <li *ngIf=\"usage.link_overlays\">{{usage.link_overlays.used + ' ' + ('out of' | trans) + ' ' + (usage.link_overlays.total || ('Unlimited' | trans)) + ' ' + ('Link Overlays' | trans) }}</li>\n    <li *ngIf=\"usage.custom_pages\">{{usage.custom_pages.used + ' ' + ('out of' | trans) + ' ' + (usage.custom_pages.total || ('Unlimited' | trans)) + ' ' + ('Custom Link Pages' | trans) }}</li>\n    <li *ngIf=\"usage.custom_domains\">{{usage.custom_domains.used + ' ' + ('out of' | trans) + ' ' + (usage.custom_domains.total || ('Unlimited' | trans)) + ' ' + ('Custom Domains' | trans) }}</li>\n    <li *ngIf=\"usage.link_groups\">{{usage.link_groups.used + ' ' + ('out of' | trans) + ' ' + (usage.link_groups.total || ('Unlimited' | trans)) + ' ' + ('Link Groups' | trans) }}</li>\n    <li *ngIf=\"usage.tracking_pixels\">{{usage.tracking_pixels.used + ' ' + ('out of' | trans) + ' ' + (usage.tracking_pixels.total || ('Unlimited' | trans)) + ' ' + ('Tracking Pixels' | trans) }}</li>\n</ul>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {LinkUsageService} from '../../../shared/link/link-usage.service';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'link-usage-info',\n    templateUrl: './link-usage-info.component.html',\n    styleUrls: ['./link-usage-info.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkUsageInfoComponent {\n    constructor(\n        public linkUsage: LinkUsageService,\n        public currentUser: CurrentUser,\n    ) {}\n}\n","<ng-container *ngIf=\"settings.get('billing.enable')\">\n    <div class=\"upgrade-panel\" *ngIf=\"linkUsage.usage$ | async as linkUsage\">\n        <ng-container *ngIf=\"linkUsage.links\">\n            <mat-progress-bar mode=\"determinate\" color=\"accent\" [value]=\"(linkUsage.links.used / linkUsage.links.total) * 100\"></mat-progress-bar>\n\n            <div class=\"usage-info\">\n                <div class=\"text\">{{ linkUsage.links.used + ' ' + ('of' | trans)  + ' ' + linkUsage.links.total + ' ' + ('links created' | trans) }}</div>\n                <mat-icon #infoIcon svgIcon=\"info\" class=\"info-icon\" (click)=\"togglePopover()\" (mouseenter)=\"openPopover()\" (mouseleave)=\"closePopover()\"></mat-icon>\n            </div>\n        </ng-container>\n\n        <div class=\"upgrade-link-container\">\n            <a routerLink=\"/billing/upgrade\" target=\"_blank\" trans>Upgrade Account</a>\n        </div>\n    </div>\n</ng-container>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Settings} from '@common/core/config/settings.service';\nimport {LinkUsageService} from '../../../shared/link/link-usage.service';\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport {LinkUsageInfoComponent} from '../link-usage-info/link-usage-info.component';\nimport {RIGHT_POSITION} from '@common/core/ui/overlay-panel/positions/right-position';\nimport {OverlayPanelRef} from '@common/core/ui/overlay-panel/overlay-panel-ref';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'upgrade-panel',\n    templateUrl: './upgrade-panel.component.html',\n    styleUrls: ['./upgrade-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UpgradePanelComponent implements OnInit {\n    @ViewChild('infoIcon', { read: ElementRef }) infoIcon: ElementRef<HTMLElement>;\n    private overlayRef: OverlayPanelRef;\n\n    constructor(\n        public settings: Settings,\n        public linkUsage: LinkUsageService,\n        public currentUser: CurrentUser,\n        private overlay: OverlayPanel,\n    ) {}\n\n    ngOnInit() {\n        this.linkUsage.reload();\n    }\n\n    public openPopover() {\n        if (this.overlayRef) {\n           this.closePopover();\n        }\n        const position = {...RIGHT_POSITION};\n        position[0].offsetY = -15;\n        this.overlayRef = this.overlay.open(LinkUsageInfoComponent, {\n            origin: this.infoIcon,\n            position: RIGHT_POSITION,\n            hasBackdrop: false,\n        });\n    }\n\n    public closePopover() {\n        this.overlayRef && this.overlayRef.close();\n        this.overlayRef = null;\n    }\n\n    public togglePopover() {\n        if (this.overlayRef) {\n            this.closePopover();\n        } else {\n            this.openPopover();\n        }\n    }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {BreakpointsService} from '@common/core/ui/breakpoints.service';\nimport {filter} from 'rxjs/operators';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {ValueLists} from '@common/core/services/value-lists.service';\n\n@Component({\n    selector: 'dashboard-host',\n    templateUrl: './dashboard-host.component.html',\n    styleUrls: ['./dashboard-host.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [ValueLists],\n})\nexport class DashboardHostComponent implements OnInit {\n    public leftColumnIsHidden = false;\n\n    constructor(\n        private router: Router,\n        public breakpoints: BreakpointsService,\n    ) {}\n\n    ngOnInit() {\n        this.leftColumnIsHidden = this.breakpoints.isMobile$.value;\n\n        // close left column when navigating between dashboard pages on mobile\n        this.router.events\n            .pipe(filter(e => e instanceof NavigationEnd))\n            .subscribe(() => {\n                this.leftColumnIsHidden = this.breakpoints.isMobile$.value;\n            });\n    }\n\n    public toggleLeftSidebar() {\n        this.leftColumnIsHidden = !this.leftColumnIsHidden;\n    }\n}\n","<material-navbar menuPosition=\"dashboard-navbar\" [showToggleButton]=\"true\" (toggleButtonClick)=\"toggleLeftSidebar()\"></material-navbar>\n\n<mat-sidenav-container>\n    <mat-sidenav [opened]=\"!leftColumnIsHidden\" [mode]=\"(breakpoints.isMobile$ | async) ? 'over' : 'side'\" [fixedInViewport]=\"true\" [fixedTopGap]=\"70\">\n        <div class=\"sidenav-wrapper\">\n            <custom-menu position=\"dashboard-sidebar\" [vertical]=\"true\" class=\"vertical\"></custom-menu>\n            <upgrade-panel></upgrade-panel>\n        </div>\n    </mat-sidenav>\n\n    <mat-sidenav-content class=\"content-inner\">\n        <ad-host slot=\"ads.dashboard.top\"></ad-host>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\r\nimport {catchError, mergeMap} from 'rxjs/operators';\r\nimport {EMPTY, Observable, of} from 'rxjs';\r\nimport {LinkService, LinkStats} from './link.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LinkReportsResolverService implements Resolve<Observable<LinkStats>> {\r\n    constructor(\r\n        private router: Router,\r\n        private http: AppHttpClient,\r\n        private link: LinkService,\r\n    ) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<LinkStats> {\r\n        return this.link.getCurrentUserReports().pipe(\r\n            catchError(() => {\r\n                this.router.navigate(['/dashboard']);\r\n                return EMPTY;\r\n            }),\r\n            mergeMap(response => {\r\n                if (response) {\r\n                    return of(response.reports);\r\n                } else {\r\n                    this.router.navigate(['/dashboard']);\r\n                    return EMPTY;\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n","import {Component, OnInit, ChangeDetectionStrategy} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {LinkStats} from '../../shared/link/link.service';\nimport {BehaviorSubject} from 'rxjs';\n\n@Component({\n    selector: 'dashboard-home',\n    templateUrl: './dashboard-home.component.html',\n    styleUrls: ['./dashboard-home.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardHomeComponent implements OnInit {\n    public reports$ = new BehaviorSubject<LinkStats>(null);\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe((data: {reports: LinkStats}) => {\n            this.reports$.next(data.reports);\n        });\n    }\n\n}\n","<click-charts [reports]=\"reports$ | async\"></click-charts>","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {DashboardHostComponent} from './dashboard-host/dashboard-host.component';\nimport {LinkIndexComponent} from './link/link-index/link-index.component';\nimport {LinkShowComponent} from './link/link-show/link-show.component';\nimport {LinkShowResolverService} from './link/link-show/link-show-resolver.service';\nimport {LinkReportsResolverService} from '../shared/link/link-reports-resolver.service';\nimport {DashboardHomeComponent} from './dashboard-home/dashboard-home.component';\nimport {LinkGroupIndexComponent} from './link-group/link-group-index/link-group-index.component';\nimport {LinkGroupShowComponent} from './link-group/link-group-show/link-group-show.component';\nimport {LinkGroupResolverService} from './link-group/link-group-show/link-group-resolver.service';\nimport {CustomDomainIndexComponent} from '@common/custom-domain/custom-domain-index/custom-domain-index.component';\nimport {LinkOverlayIndexComponent} from './link-overlay/link-overlay-index/link-overlay-index.component';\nimport {customPagesManagerRoutes} from '@common/core/pages/manager/custom-pages-manager-routing.module';\nimport {TrackingPixelIndexComponent} from './pixels/tracking-pixel-index/tracking-pixel-index.component';\n\nconst routes: Routes = [\n    {path: '', component: DashboardHostComponent, children: [\n        {path: '', resolve: {reports: LinkReportsResolverService}, component: DashboardHomeComponent, data: {name: 'Dashboard'}},\n\n        // link\n        {path: 'links', component: LinkIndexComponent, data: {name: 'Links'}},\n        {path: 'links/:linkId', resolve: {api: LinkShowResolverService}, component: LinkShowComponent, data: {name: 'Link Statistics'}},\n\n        // group\n        {path: 'link-groups', component: LinkGroupIndexComponent, data: {name: 'Link Groups'}},\n        {path: 'link-groups/:groupId', resolve: {api: LinkGroupResolverService}, component: LinkGroupShowComponent, data: {name: 'Link Group Statistics'}},\n\n        // custom domain\n        {path: 'custom-domains', component: CustomDomainIndexComponent, data: {name: 'Custom Domains'}},\n\n        // link overlay\n        {path: 'link-overlays', component: LinkOverlayIndexComponent, data: {name: 'Link Overlays'}},\n\n        // tracking pixels\n        {path: 'pixels', component: TrackingPixelIndexComponent, data: {name: 'Tracking Pixels'}},\n\n        ...customPagesManagerRoutes,\n    ]},\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DashboardRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CustomDomainIndexComponent} from '@common/custom-domain/custom-domain-index/custom-domain-index.component';\nimport {CrupdateCustomDomainModalComponent} from '@common/custom-domain/crupdate-custom-domain-modal/crupdate-custom-domain-modal.component';\nimport {DataTableModule} from '@common/shared/data-table/data-table.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {NoResultsMessageModule} from '@common/core/ui/no-results-message/no-results-message.module';\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\n\n@NgModule({\n    declarations: [\n        CustomDomainIndexComponent,\n        CrupdateCustomDomainModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        DataTableModule,\n        TranslationsModule,\n        NoResultsMessageModule,\n        FormatPipesModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatIconModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatSlideToggleModule,\n    ],\n    exports: [\n        CustomDomainIndexComponent,\n        CrupdateCustomDomainModalComponent\n    ]\n})\nexport class CustomDomainModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DatetimeInputComponent} from './datetime-input.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\n\n@NgModule({\n    declarations: [DatetimeInputComponent],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TranslationsModule,\n    ],\n    exports: [\n        DatetimeInputComponent,\n    ]\n})\nexport class DatetimeInputModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InfoPopoverComponent} from '@common/core/ui/info-popover/info-popover.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\n\n\n@NgModule({\n    declarations: [\n        InfoPopoverComponent,\n    ],\n    imports: [\n        CommonModule,\n\n        // material\n        MatIconModule,\n        MatButtonModule,\n    ],\n    exports: [\n        InfoPopoverComponent,\n    ]\n})\nexport class InfoPopoverModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashboardHostComponent} from './dashboard-host/dashboard-host.component';\nimport {DashboardRoutingModule} from './dashboard-routing.module';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {RouterModule} from '@angular/router';\nimport {LinkOptionsFormComponent} from './link/link-options-form/link-options-form.component';\nimport {ChipInputModule} from '@common/core/ui/chip-input/chip-input.module';\nimport {LinkIndexComponent} from './link/link-index/link-index.component';\nimport {DataTableModule} from '@common/shared/data-table/data-table.module';\nimport {CrupdateLinkModalComponent} from './link/crupdate-link-modal/crupdate-link-modal.component';\nimport {LinkShowComponent} from './link/link-show/link-show.component';\nimport {ChartsModule} from '@common/shared/charts/charts.module';\nimport {LinkGroupIndexComponent} from './link-group/link-group-index/link-group-index.component';\nimport {DashboardHomeComponent} from './dashboard-home/dashboard-home.component';\nimport {SharedModule} from '../shared/shared.module';\nimport {CrupdateLinkGroupModalComponent} from './link-group/crupdate-link-group-modal/crupdate-link-group-modal.component';\nimport {LinkGroupShowComponent} from './link-group/link-group-show/link-group-show.component';\nimport {AttachLinkModalComponent} from './link-group/attach-link-modal/attach-link-modal.component';\nimport {CustomDomainModule} from '@common/custom-domain/custom-domain.module';\nimport {LinkOverlayIndexComponent} from './link-overlay/link-overlay-index/link-overlay-index.component';\nimport {CrupdateLinkOverlayModalComponent} from './link-overlay/crupdate-link-overlay-modal/crupdate-link-overlay-modal.component';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {CustomPagesManagerModule} from '@common/core/pages/manager/custom-pages-manager.module';\nimport {LinkTypeMenuComponent} from './link/link-type-menu/link-type-menu.component';\nimport {DatetimeInputModule} from '@common/core/ui/datetime-input/datetime-input.module';\nimport {LINK_PAGE_TYPE} from './link/types';\nimport {LinkUsageInfoComponent} from './dashboard-host/link-usage-info/link-usage-info.component';\nimport {UpgradePanelComponent} from './dashboard-host/upgrade-panel/upgrade-panel.component';\nimport {TrackingPixelIndexComponent} from './pixels/tracking-pixel-index/tracking-pixel-index.component';\nimport {CrupdateTrackingPixelModalComponent} from './pixels/crupdate-tracking-pixel-modal/crupdate-tracking-pixel-modal.component';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\nimport {ClickChartsModule} from './click-charts/click-charts.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ColorPickerInputModule} from '@common/core/ui/color-picker/color-picker-input/color-picker-input.module';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {NoResultsMessageModule} from '@common/core/ui/no-results-message/no-results-message.module';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {InfoPopoverModule} from '@common/core/ui/info-popover/info-popover.module';\nimport {MaterialNavbarModule} from '@common/core/ui/material-navbar/material-navbar.module';\nimport {AdHostModule} from '@common/core/ui/ad-host/ad-host.module';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {SlugControlModule} from '@common/shared/form-controls/slug-control/slug-control.module';\n\n@NgModule({\n    declarations: [\n        DashboardHostComponent,\n        DashboardHomeComponent,\n        LinkOptionsFormComponent,\n        LinkIndexComponent,\n        CrupdateLinkModalComponent,\n        LinkShowComponent,\n        LinkGroupIndexComponent,\n        CrupdateLinkGroupModalComponent,\n        LinkGroupShowComponent,\n        AttachLinkModalComponent,\n        LinkOverlayIndexComponent,\n        CrupdateLinkOverlayModalComponent,\n        LinkTypeMenuComponent,\n        LinkUsageInfoComponent,\n        UpgradePanelComponent,\n        TrackingPixelIndexComponent,\n        CrupdateTrackingPixelModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        DashboardRoutingModule,\n        TranslationsModule,\n        FormatPipesModule,\n        ClickChartsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ColorPickerInputModule,\n        LoadingIndicatorModule,\n        NoResultsMessageModule,\n        InfoPopoverModule,\n        MaterialNavbarModule,\n        AdHostModule,\n        SlugControlModule,\n\n        SharedModule,\n        ChartsModule,\n        DataTableModule,\n        CustomDomainModule,\n        ChipInputModule,\n        DatetimeInputModule,\n        CustomPagesManagerModule.forRoot({\n            resourceName: 'link pages',\n            type: LINK_PAGE_TYPE,\n            showSlug: false,\n            filterByUserId: true,\n        }),\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatTooltipModule,\n        MatSidenavModule,\n        MatDialogModule,\n        MatButtonToggleModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n    ],\n    providers: [\n        Modal,\n    ]\n})\nexport class DashboardModule {\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ChipInputComponent} from './chip-input.component';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatChipsModule,\r\n        MatIconModule,\r\n        MatAutocompleteModule,\r\n        ReactiveFormsModule,\r\n        TranslationsModule,\r\n    ],\r\n    declarations: [\r\n        ChipInputComponent\r\n    ],\r\n    exports: [\r\n        ChipInputComponent\r\n    ]\r\n})\r\nexport class ChipInputModule {\r\n}\r\n","import { ConnectedPosition } from '@angular/cdk/overlay';\r\n\r\nexport const RIGHT_POSITION: ConnectedPosition[] = [\r\n    {originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 5},\r\n    {originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: 5},\r\n];\r\n","import {BehaviorSubject, combineLatest, merge, Observable} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged, filter, map, take} from 'rxjs/operators';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {PageEvent} from '@angular/material/paginator';\r\nimport {Sort} from '@angular/material/sort';\r\nimport {DataSource, SelectionModel} from '@angular/cdk/collections';\r\nimport {DataTableSourceConfig} from '@common/shared/data-table/data/data-table-source-config';\r\nimport {arrayToObject} from '@common/core/utils/array-to-object';\r\nimport {DataTableFilter} from '@common/shared/data-table/filter-panel/data-table-filters';\r\nimport {PaginationResponse} from '@common/core/types/pagination/pagination-response';\r\nimport {PaginationParams} from '@common/core/types/pagination/pagination-params';\r\n\r\nexport class PaginatedDataTableSource<T> implements DataSource<T> {\r\n    public initiated = false;\r\n    private pagination$ = new BehaviorSubject<PaginationResponse<T>>(null);\r\n    private userParamsChange$ = new BehaviorSubject<object>({});\r\n    public selectedRows = new SelectionModel<T>(true, []);\r\n    public searchControl = new FormControl();\r\n    public filterForm = new FormGroup({});\r\n    public nextPageLoader$ = new BehaviorSubject<{page: number}>(null);\r\n    public virtualSort$ = new BehaviorSubject<Partial<Sort>>({});\r\n    public paginationParams: PaginationParams = {};\r\n    public activeFilters$: Observable<DataTableFilter[]> = this.filterForm.valueChanges.pipe(map((value: object) => {\r\n        return Object.entries(value)\r\n            // remove non active filters\r\n            .filter(entry => entry[1] != null)\r\n            // map filter column to display name\r\n            .map(entry => this.config.filters.find(f => f.column === entry[0]));\r\n    }));\r\n\r\n    public get paginatedOnce$(): Observable<boolean> {\r\n        return this.config.dataPaginator.paginatedOnce$.pipe(filter(val => !!val), take(1));\r\n    }\r\n\r\n    public get noResults$() {\r\n        // check if paginated at least once or if\r\n        // data has been set via \"setData\" method\r\n        return combineLatest([\r\n            this.config.dataPaginator.noResults$,\r\n            this.pagination$,\r\n        ]).pipe(map(([noResults, paginationResponse]) => {\r\n            return noResults && (paginationResponse && !paginationResponse.data.length);\r\n        }));\r\n    }\r\n\r\n    public get loading$() {\r\n        return this.config.dataPaginator.loading$;\r\n    }\r\n\r\n    public get totalCount$(): Observable<number|null> {\r\n        return this.pagination$.pipe(map(p => p ? p.total : null));\r\n    }\r\n\r\n    constructor(public config: DataTableSourceConfig<T>) {\r\n        if (this.config.filters) {\r\n            this.config.filters.forEach(f => {\r\n                const control = new FormControl(f.defaultValue || null);\r\n                this.filterForm.addControl(f.column, control);\r\n            });\r\n            this.applyFiltersFromQueryParams();\r\n        }\r\n        if (config.dataPaginator && config.dontUpdateQueryParams) {\r\n            config.dataPaginator.dontUpdateQueryParams = true;\r\n        }\r\n    }\r\n\r\n    public anyRowsSelected() {\r\n        return this.selectedRows.hasValue();\r\n    }\r\n\r\n    public allRowsSelected(): boolean {\r\n        return this.selectedRows.selected.length &&\r\n            this.selectedRows.selected.length === this.pagination$.value.data.length;\r\n    }\r\n\r\n    public toggleAllRows() {\r\n        this.allRowsSelected() ?\r\n            this.deselectAllItems() :\r\n            this.pagination$.value.data.forEach(row => this.selectedRows.select(row));\r\n    }\r\n\r\n    public deselectAllItems() {\r\n        this.selectedRows.clear();\r\n    }\r\n\r\n    public getSelectedItems(): number[] {\r\n        return this.selectedRows.selected.map(item => item['id']);\r\n    }\r\n\r\n    public setSelectedItems(items: T[]) {\r\n        this.deselectAllItems();\r\n        this.selectedRows.select(...items);\r\n    }\r\n\r\n    public setData(data: T[]) {\r\n        this.pagination$.next({...this.pagination$.value, data});\r\n    }\r\n\r\n    public getData(): T[] {\r\n        return this.pagination$.value ? this.pagination$.value.data : [];\r\n    }\r\n    \r\n    public removeFilter(column: string) {\r\n        this.filterForm.get(column).setValue(null);\r\n    }\r\n\r\n    public updateConfig(config: DataTableSourceConfig<T>) {\r\n        this.config = {...this.config, ...config};\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Merge specified params with current\r\n     * pagination params and reload data.\r\n     */\r\n    public reload(params: object = {}) {\r\n        this.userParamsChange$.next(params);\r\n        if ( ! this.initiated) {\r\n            this.init();\r\n        }\r\n    }\r\n    \r\n    public canLoadNextPage() {\r\n        return this.pagination$.value &&\r\n            this.getCurrentPage() < this.pagination$.value.last_page;\r\n    }\r\n\r\n    public loadNextPage() {\r\n        this.nextPageLoader$.next({page: this.getCurrentPage() + 1});\r\n    }\r\n\r\n    /**\r\n     * Reset current pagination params to initial\r\n     * state and reload data using specified params\r\n     */\r\n    public reset(params?: object) {\r\n        this.searchControl.reset();\r\n        this.resetSort();\r\n        this.resetMatPaginator();\r\n        this.deselectAllItems();\r\n        this.reload(params);\r\n    }\r\n\r\n    public init(config?: DataTableSourceConfig<T>) {\r\n        if (this.initiated) return this;\r\n        if (config) this.updateConfig(config);\r\n        const sortChange = this.config.matSort ?\r\n            merge(this.config.matSort.sortChange, this.config.matSort.initialized) :\r\n            this.virtualSort$;\r\n        const pageChange = this.config.matPaginator ?\r\n            merge(this.config.matPaginator.page, this.config.matPaginator.initialized) :\r\n            this.nextPageLoader$;\r\n        const searchChange = this.searchControl.valueChanges.pipe(\r\n            debounceTime(400),\r\n            distinctUntilChanged(),\r\n            map(query => {\r\n                return {query};\r\n            })\r\n        );\r\n        const filterChange = this.filterForm.valueChanges.pipe(map((value: object) => {\r\n            // remove \"undefined\" values from filters object\r\n            Object.keys(value).forEach(key => {\r\n                if (value[key] == null) {\r\n                    delete value[key];\r\n                // return only ID if whole model is bound to form\r\n                } else if (value[key].id) {\r\n                    value[key] = value[key].id;\r\n                }\r\n            });\r\n            return value;\r\n        }));\r\n\r\n        combineLatest([sortChange, pageChange, searchChange, filterChange, this.userParamsChange$])\r\n            .pipe(\r\n                // prevent double trigger when resetting all filters at the same time\r\n                debounceTime(0),\r\n                map(params => this.transformParams(params as any)),\r\n            )\r\n            .subscribe(params => {\r\n                this.config.dataPaginator.paginate(params, this.config.uri, this.config.initialData);\r\n            });\r\n\r\n        this.config.dataPaginator.pagination$.subscribe(pagination => {\r\n            // material paginator current page is zero-based while laravel starts from one\r\n            if (this.config.matPaginator) {\r\n                this.config.matPaginator.pageIndex = pagination.current_page - 1;\r\n                this.config.matPaginator.pageSize = pagination.per_page;\r\n                this.config.matPaginator.length = pagination.data.length ? pagination.total : 0;\r\n            }\r\n\r\n            // append data instead of overriding with next page data (infinite scroll).\r\n            // if page did not change, we can assume that it was filter or sort\r\n            // change and we should use only new data, even on infinite scroll\r\n            if (this.config.appendData && pagination.current_page !== this.getCurrentPage()) {\r\n                const currentData = this.pagination$.value ? this.pagination$.value.data : [];\r\n                pagination = {...pagination, data: [...currentData, ...pagination.data]};\r\n            }\r\n\r\n            this.pagination$.next(pagination);\r\n        });\r\n\r\n        // angular does not fire \"valueChanges\" on form control if default\r\n        // value is not provided, so need to trigger it manually here otherwise\r\n        // changes pipeline will not fire until search control value changes\r\n        // # https://github.com/angular/angular/issues/14542\r\n        this.searchControl.setValue(null);\r\n        this.filterForm.patchValue({});\r\n\r\n        this.initiated = true;\r\n        return this;\r\n    }\r\n\r\n    public getCurrentPage(): number {\r\n        return this.pagination$.value ? this.pagination$.value.current_page : undefined;\r\n    }\r\n\r\n    private transformParams(originalParams: (PageEvent & Sort)[]) {\r\n        const params = arrayToObject(originalParams);\r\n\r\n        // have mat paginator\r\n        if (this.config.matPaginator) {\r\n            // pageIndex can be 0, need to check for undefined or null only\r\n            params.page = params.pageIndex != null ? params.pageIndex + 1 : undefined;\r\n            params.per_page = params.pageSize;\r\n        }\r\n\r\n        if (params.active) {\r\n            params.orderBy = params.active;\r\n            params.orderDir = params.direction;\r\n        }\r\n\r\n        // remove \"undefined\" and renamed values from object\r\n        const keysToRemove = ['pageIndex', 'pageSize', 'active', 'direction', 'previousPageIndex', 'length'];\r\n        Object.keys(params)\r\n            .forEach(key => {\r\n                if (keysToRemove.indexOf(key) > -1 || params[key] == null) {\r\n                    delete params[key];\r\n                }\r\n            });\r\n\r\n        // merge static params specified by users, they will\r\n        // not change and should be sent with every request\r\n        this.paginationParams = {...this.config.staticParams, ...params};\r\n        return this.paginationParams;\r\n    }\r\n\r\n    private resetSort() {\r\n        if ( ! this.config.matSort || ! this.config.matSort.active) return;\r\n        this.config.matSort.sort({\r\n            id: '',\r\n            start: 'desc',\r\n            disableClear: false\r\n        });\r\n    }\r\n\r\n    private resetMatPaginator() {\r\n        if ( ! this.config.matPaginator) return;\r\n        this.config.matPaginator.length = 0;\r\n        this.config.matPaginator._changePageSize(15);\r\n        this.config.matPaginator.firstPage();\r\n    }\r\n\r\n    public connect(): Observable<T[]> {\r\n        return this.pagination$.pipe(\r\n            filter(p => !!p), // skip first \"null\" on behaviour subject\r\n            map(p => p ? p.data : [])\r\n        );\r\n    }\r\n\r\n    public disconnect() {\r\n        this.config.dataPaginator.destroy();\r\n        this.pagination$.complete();\r\n    }\r\n\r\n    private applyFiltersFromQueryParams() {\r\n        const queryParams = this.config.dataPaginator.currentQueryParams();\r\n        const queryValues = {};\r\n        Object.keys(this.filterForm.controls).forEach(filterName => {\r\n            let queryValue = queryParams[filterName];\r\n            if (queryValue) {\r\n                if (queryValue === 'false') {\r\n                    queryValue = false;\r\n                } else if (queryValue === 'true') {\r\n                    queryValue = true;\r\n                }\r\n                queryValues[filterName] = queryValue;\r\n            }\r\n        });\r\n        if (Object.keys(queryValues).length) {\r\n            setTimeout(() => {\r\n                this.filterForm.patchValue(queryValues);\r\n            });\r\n        }\r\n    }\r\n}\r\n","export function arrayToObject(array: object[]): {[key: string]: any} {\r\n    return array.reduce((previous, current) => {\r\n        return {...previous, ...current};\r\n    });\r\n}\r\n","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r8._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r12._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ScrollingModule,\n            PlatformModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ScrollingModule,\n        PlatformModule]; }, exports: function () { return [MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ScrollingModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","import { Injectable } from '@angular/core';\r\nimport { AppHttpClient } from '../../core/http/app-http-client.service';\r\nimport { PaginatedBackendResponse } from '../../core/types/pagination/paginated-backend-response';\r\nimport { BackendResponse } from '@common/core/types/backend-response';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\nimport { PaginationParams } from '@common/core/types/pagination/pagination-params';\r\n\r\nexport const PLANS_BASE_URI = 'billing-plan';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Plans {\r\n    constructor(private http: AppHttpClient) {}\r\n\r\n    public all(params?: PaginationParams): PaginatedBackendResponse<Plan> {\r\n        return this.http.get(PLANS_BASE_URI, params);\r\n    }\r\n\r\n    public get(id: number): BackendResponse<{plan: Plan}> {\r\n        return this.http.get(`${PLANS_BASE_URI}/${id}`);\r\n    }\r\n\r\n    public create(params: object): BackendResponse<{plan: Plan}> {\r\n        return this.http.post(PLANS_BASE_URI, params);\r\n    }\r\n\r\n    public update(id: number, params: object): BackendResponse<{plan: Plan}> {\r\n        return this.http.put(`${PLANS_BASE_URI}/${id}`, params);\r\n    }\r\n\r\n    public delete(params: {ids: number[]}): BackendResponse<void> {\r\n        return this.http.delete(`${PLANS_BASE_URI}/${params.ids}`);\r\n    }\r\n\r\n    public sync(): BackendResponse<void> {\r\n        return this.http.post(`${PLANS_BASE_URI}/sync`);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {TextEditorComponent} from './text-editor.component';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TranslationsModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatSnackBarModule,\r\n        MatTableModule,\r\n        MatCheckboxModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n    ],\r\n    declarations: [\r\n        TextEditorComponent,\r\n    ],\r\n    exports: [\r\n        TextEditorComponent,\r\n    ],\r\n})\r\nexport class TextEditorModule { }\r\n","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Self, Attribute, Inject, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/material/form-field';\nimport * as ɵngcc6 from '@angular/cdk/a11y';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r42 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r42.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r45 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r45.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r43 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r43.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r49 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r49); const ctx_r48 = ɵngcc0.ɵɵnextContext(); return ctx_r48._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r49); const ctx_r50 = ɵngcc0.ɵɵnextContext(); return ctx_r50._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r44 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r44._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r44._transformOrigin)(\"font-size\", ctx_r44._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r44.panelClass)(\"@transformPanel\", ctx_r44.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.MatFormField, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r40 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r40)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc6.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import {NgModule} from '@angular/core';\r\nimport {FullPlanNameComponent} from './full-plan-name.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FullPlanNameComponent,\r\n    ],\r\n    exports: [\r\n        FullPlanNameComponent,\r\n    ]\r\n})\r\nexport class FullPlanNameModule {}\r\n","import {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\n@Pipe({\r\n    name: 'formattedDate'\r\n})\r\nexport class FormattedDatePipe implements PipeTransform {\r\n    private readonly format: string;\r\n    private angularPipe: DatePipe;\r\n\r\n    /**\r\n     * FormattedDatePipe Constructor.\r\n     */\r\n    constructor(private settings: Settings, @Inject(LOCALE_ID) private _locale: string) {\r\n        this.format = this.settings.get('dates.format', 'yyyy-MM-dd');\r\n        this.angularPipe = new DatePipe(_locale);\r\n    }\r\n\r\n    transform(value: any, format?: string, timezone?: string, locale?: string): string | null {\r\n        // iOS does not support YYYY-MM-DD\r\n        value = (value && typeof value === 'string' ) ? value.replace(/-/g, '/') : value;\r\n        return this.angularPipe.transform(value, format || this.format, timezone, locale);\r\n    }\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport interface CustomPageManagerConfig {\r\n    resourceName: string;\r\n    type: string;\r\n    showSlug: boolean;\r\n    filterByUserId?: boolean;\r\n}\r\n\r\nexport const CUSTOM_PAGE_CONFIG_TOKEN = new InjectionToken<CustomPageManagerConfig[]>('CUSTOM_PAGE_CONFIG_TOKEN');\r\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/button-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents the default options for the button toggle that can be configured\n * using the `MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS` injection token.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nfunction MatButtonToggleDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatButtonToggleDefaultOptions.prototype.appearance;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n * @type {?}\n */\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatButtonToggleGroup)),\n    multi: true\n};\n/**\n * @deprecated Use `MatButtonToggleGroup` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatButtonToggleGroupMultiple {\n}\n/** @type {?} */\nlet _uniqueIdCounter = 0;\n/**\n * Change event object emitted by MatButtonToggle.\n */\nclass MatButtonToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * The MatButtonToggle that emits the event.\n     * @type {?}\n     */\n    MatButtonToggleChange.prototype.source;\n    /**\n     * The value assigned to the MatButtonToggle.\n     * @type {?}\n     */\n    MatButtonToggleChange.prototype.value;\n}\n/**\n * Exclusive selection button toggle group that behaves like a radio-button group.\n */\nclass MatButtonToggleGroup {\n    /**\n     * @param {?} _changeDetector\n     * @param {?=} defaultOptions\n     */\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._name = `mat-button-toggle-group-${_uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Event emitted when the group's value changes.\n         */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /**\n     * `name` attribute for the underlying `input` element.\n     * @return {?}\n     */\n    get name() { return this._name; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => {\n                toggle.name = this._name;\n                toggle._markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the toggle group is vertical.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * Value of the toggle group.\n     * @return {?}\n     */\n    get value() {\n        /** @type {?} */\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => toggle.value));\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /**\n     * Selected button toggles in the group.\n     * @return {?}\n     */\n    get selected() {\n        /** @type {?} */\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : (selected[0] || null);\n    }\n    /**\n     * Whether multiple button toggles can be selected.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether multiple button toggle group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => toggle._markForCheck()));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => toggle.checked)));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const selected = this.selected;\n        /** @type {?} */\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        /** @type {?} */\n        const event = new MatButtonToggleChange((/** @type {?} */ (source)), this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param {?} toggle Toggle to be synced.\n     * @param {?} select Whether the toggle should be selected.\n     * @param {?=} isUserInput Whether the change was a result of a user interaction.\n     * @param {?=} deferEvents Whether to defer emitting the change events.\n     * @return {?}\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            ((/** @type {?} */ (this.selected))).checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve((/**\n             * @return {?}\n             */\n            () => this._updateModelValue(isUserInput)));\n        }\n        else {\n            this._updateModelValue(isUserInput);\n        }\n    }\n    /**\n     * Checks whether a button toggle is selected.\n     * @param {?} toggle\n     * @return {?}\n     */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /**\n     * Determines whether a button toggle should be checked on init.\n     * @param {?} toggle\n     * @return {?}\n     */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => toggle.value != null && value === toggle.value));\n        }\n        return toggle.value === this._rawValue;\n    }\n    /**\n     * Updates the selection state of the toggles in the group based on a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /**\n     * Clears the selected toggles.\n     * @private\n     * @return {?}\n     */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => toggle.checked = false));\n    }\n    /**\n     * Selects a value if there's a toggle that corresponds to it.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this._buttonToggles.find((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => {\n            return toggle.value != null && toggle.value === value;\n        }));\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /**\n     * Syncs up the group's value with the model and emits the change event.\n     * @private\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _updateModelValue(isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent();\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n}\nMatButtonToggleGroup.ɵfac = function MatButtonToggleGroup_Factory(t) { return new (t || MatButtonToggleGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggleGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatButtonToggleGroup, selectors: [[\"mat-button-toggle-group\"]], contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatButtonToggle, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonToggles = _t);\n    } }, hostAttrs: [\"role\", \"group\", 1, \"mat-button-toggle-group\"], hostVars: 5, hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, exportAs: [\"matButtonToggleGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n            { provide: MatButtonToggleGroupMultiple, useExisting: MatButtonToggleGroup },\n        ])] });\n/** @nocollapse */\nMatButtonToggleGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggleGroup.propDecorators = {\n    _buttonToggles: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatButtonToggle)), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                },] }],\n    appearance: [{ type: Input }],\n    name: [{ type: Input }],\n    vertical: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    multiple: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonToggleGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-button-toggle-group',\n                providers: [\n                    MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                    { provide: MatButtonToggleGroupMultiple, useExisting: MatButtonToggleGroup },\n                ],\n                host: {\n                    'role': 'group',\n                    'class': 'mat-button-toggle-group',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[class.mat-button-toggle-vertical]': 'vertical',\n                    '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"'\n                },\n                exportAs: 'matButtonToggleGroup'\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { valueChange: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], appearance: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _buttonToggles: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatButtonToggle)), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._selectionModel;\n    /**\n     * Reference to the raw value that the consumer tried to assign. The real\n     * value will exclude any values from this one that don't correspond to a\n     * toggle. Useful for the cases where the value is assigned before the toggles\n     * have been initialized or at the same that they're being swapped out.\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._rawValue;\n    /**\n     * The method to be called in order to update ngModel.\n     * Now `ngModel` binding is not supported in multiple selection mode.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._controlValueAccessorChangeFn;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._onTouched;\n    /**\n     * Child button toggle buttons.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._buttonToggles;\n    /**\n     * The appearance for all the buttons in the group.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._name;\n    /**\n     * Event that emits whenever the value of the group changes.\n     * Used to facilitate two-way data binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.valueChange;\n    /**\n     * Event emitted when the group's value changes.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._changeDetector;\n}\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/**\n * \\@docs-private\n */\nclass MatButtonToggleBase {\n}\n/** @type {?} */\nconst _MatButtonToggleMixinBase = mixinDisableRipple(MatButtonToggleBase);\n/**\n * Single button inside of a toggle group.\n */\nclass MatButtonToggle extends _MatButtonToggleMixinBase {\n    /**\n     * @param {?} toggleGroup\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     * @param {?} defaultTabIndex\n     * @param {?=} defaultOptions\n     */\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, \n    // @breaking-change 8.0.0 `defaultTabIndex` to be made a required parameter.\n    defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._isSingleSelector = false;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /**\n         * Event emitted when the group value changes.\n         */\n        this.change = new EventEmitter();\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /**\n     * Unique ID for the underlying `button` element.\n     * @return {?}\n     */\n    get buttonId() { return `${this.id}-button`; }\n    /**\n     * The appearance style of the button.\n     * @return {?}\n     */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /**\n     * Whether the button is checked.\n     * @return {?}\n     */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isSingleSelector = this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n        this._type = this._isSingleSelector ? 'radio' : 'checkbox';\n        this.id = this.id || `mat-button-toggle-${_uniqueIdCounter++}`;\n        if (this._isSingleSelector) {\n            this.name = this.buttonToggleGroup.name;\n        }\n        if (this.buttonToggleGroup && this.buttonToggleGroup._isPrechecked(this)) {\n            this.checked = true;\n        }\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /**\n     * Checks the button toggle due to an interaction with the underlying native button.\n     * @return {?}\n     */\n    _onButtonClick() {\n        /** @type {?} */\n        const newChecked = this._isSingleSelector ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatButtonToggle.ɵfac = function MatButtonToggle_Factory(t) { return new (t || MatButtonToggle)(ɵngcc0.ɵɵdirectiveInject(MatButtonToggleGroup, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButtonToggle, selectors: [[\"mat-button-toggle\"]], viewQuery: function MatButtonToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonElement = _t.first);\n    } }, hostAttrs: [1, \"mat-button-toggle\", \"mat-focus-indicator\"], hostVars: 11, hostBindings: function MatButtonToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatButtonToggle_focus_HostBindingHandler() { return ctx.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"name\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { disableRipple: \"disableRipple\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\", id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], value: \"value\" }, outputs: { change: \"change\" }, exportAs: [\"matButtonToggle\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 9, consts: [[\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"click\"], [\"button\", \"\"], [1, \"mat-button-toggle-label-content\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]], template: function MatButtonToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatButtonToggle_Template_button_click_0_listener() { return ctx._onButtonClick(); });\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n    } if (rf & 2) {\n        const _r6 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.buttonId)(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex)(\"aria-pressed\", ctx.checked)(\"name\", ctx.name || null)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r6)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{line-height:48px;padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 48px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatButtonToggle.ctorParameters = () => [\n    { type: MatButtonToggleGroup, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggle.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    _buttonElement: [{ type: ViewChild, args: ['button',] }],\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    value: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    appearance: [{ type: Input }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-button-toggle',\n                template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"name || null\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <div class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</button>\\n\\n<div class=\\\"mat-button-toggle-focus-overlay\\\"></div>\\n<div class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matButtonToggle',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disableRipple'],\n                host: {\n                    '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                    '[class.mat-button-toggle-checked]': 'checked',\n                    '[class.mat-button-toggle-disabled]': 'disabled',\n                    '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                    'class': 'mat-button-toggle mat-focus-indicator',\n                    // Always reset the tabindex to -1 so it doesn't conflict with the one on the `button`,\n                    // but can still receive focus from things like cdkFocusInitial.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.name]': 'null',\n                    '(focus)': 'focus()'\n                },\n                styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{line-height:48px;padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 48px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatButtonToggleGroup, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _buttonElement: [{\n            type: ViewChild,\n            args: ['button']\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._isSingleSelector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._checked;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatButtonToggle.prototype.ariaLabelledby;\n    /**\n     * Type of the button toggle. Either 'radio' or 'checkbox'.\n     * @type {?}\n     */\n    MatButtonToggle.prototype._type;\n    /** @type {?} */\n    MatButtonToggle.prototype._buttonElement;\n    /**\n     * The parent button toggle group (exclusive selection). Optional.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.buttonToggleGroup;\n    /**\n     * The unique ID for this button toggle.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.id;\n    /**\n     * HTML's 'name' attribute used to group radios for unique selection.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.name;\n    /**\n     * MatButtonToggleGroup reads this to assign its own value.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.value;\n    /**\n     * Tabindex for the toggle.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.tabIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._disabled;\n    /**\n     * Event emitted when the group value changes.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/button-toggle-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonToggleModule {\n}\nMatButtonToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonToggleModule });\nMatButtonToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonToggleModule_Factory(t) { return new (t || MatButtonToggleModule)(); }, imports: [[MatCommonModule, MatRippleModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonToggleModule, { declarations: function () { return [MatButtonToggleGroup,\n        MatButtonToggle]; }, imports: function () { return [MatCommonModule, MatRippleModule]; }, exports: function () { return [MatCommonModule,\n        MatButtonToggleGroup,\n        MatButtonToggle]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, MatRippleModule],\n                exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                declarations: [MatButtonToggleGroup, MatButtonToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleGroupMultiple, MatButtonToggleModule };\n\n//# sourceMappingURL=button-toggle.js.map","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormattedDatePipe} from '@common/core/ui/format-pipes/formatted-date.pipe';\nimport {FormattedFileSizePipe} from '@common/uploads/formatted-file-size.pipe';\n\n\n@NgModule({\n    declarations: [\n        FormattedDatePipe,\n        FormattedFileSizePipe,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        FormattedDatePipe,\n        FormattedFileSizePipe,\n    ]\n})\nexport class FormatPipesModule {\n}\n","import { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r33 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r33._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r37 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r37); const ctx_r36 = ɵngcc0.ɵɵnextContext(); return ctx_r36.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r27 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r27._control.empty && !ctx_r27._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r27._control.empty && !ctx_r27._shouldAlwaysFloat)(\"mat-accent\", ctx_r27.color == \"accent\")(\"mat-warn\", ctx_r27.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r27.appearance != \"outline\")(\"id\", ctx_r27._labelId)(\"ngSwitch\", ctx_r27._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r27._control.id)(\"aria-owns\", ctx_r27._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r27.hideRequiredMarker && ctx_r27._control.required && !ctx_r27._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r29 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r29.color == \"accent\")(\"mat-warn\", ctx_r29.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r30 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r30._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r39 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r39._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r39.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r31 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r31._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r31.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = labelStart - containerStart - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {PaginatedBackendResponse} from '@common/core/types/pagination/paginated-backend-response';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {LinkOverlay} from './link-overlay';\n\nconst BASE_URI = 'link-overlay';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LinkOverlayService {\n    constructor(private http: AppHttpClient) {\n    }\n\n    public index(params: { userId?: number, query?: string } = {}): PaginatedBackendResponse<LinkOverlay> {\n        return this.http.get(`${BASE_URI}`, params);\n    }\n\n    public create(params: { host: string }): BackendResponse<{ linkOverlay: LinkOverlay }> {\n        return this.http.post(BASE_URI, params);\n    }\n\n    public update(id, params: { host: string }): BackendResponse<{ linkOverlay: LinkOverlay }> {\n        return this.http.put(`${BASE_URI}/${id}`, params);\n    }\n\n    public delete(ids: number[]): BackendResponse<void> {\n        return this.http.delete(`${BASE_URI}/${ids}`);\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title>\n        <span *ngIf=\"data.overlay; else creating\" trans>Update Overlay</span>\n        <ng-template #creating><span trans>Create New Overlay</span></ng-template>\n    </h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form (ngSubmit)=\"confirm()\" [formGroup]=\"form\" ngNativeValidate>\n    <mat-dialog-content class=\"many-inputs\">\n        <link-overlay [overlay]=\"form.valueChanges | async\"></link-overlay>\n\n        <mat-tab-group color=\"accent\">\n            <mat-tab [label]=\"'Content' | trans\">\n                <div class=\"many-inputs tab-body-wrapper\" *ngIf=\"errors$ | async as errors\">\n                    <div class=\"input-container\">\n                        <label for=\"name\" trans>Name</label>\n                        <input type=\"text\" id=\"name\" formControlName=\"name\" required>\n                        <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n                    </div>\n                    <div class=\"input-container\">\n                        <label for=\"position\" trans>Position</label>\n                        <select id=\"position\" formControlName=\"position\" required>\n                            <option value=\"top-left\" trans>Top Left</option>\n                            <option value=\"top-right\" trans>Top Right</option>\n                            <option value=\"bottom-left\" trans>Bottom Left</option>\n                            <option value=\"bottom-right\" trans>Bottom Right</option>\n                        </select>\n                    </div>\n                    <div class=\"input-container\">\n                        <label for=\"message\" trans>Message</label>\n                        <textarea id=\"message\" formControlName=\"message\" maxlength=\"200\" required></textarea>\n                        <div class=\"error\" *ngIf=\"errors.message\">{{errors.message}}</div>\n                    </div>\n                    <div class=\"input-container\">\n                        <label for=\"label\" trans>Label</label>\n                        <input type=\"text\" id=\"label\" formControlName=\"label\" maxlength=\"8\">\n                        <div class=\"error\" *ngIf=\"errors.label\">{{errors.label}}</div>\n                    </div>\n                    <div class=\"input-container\">\n                        <label for=\"btn_link\" trans>Button Link</label>\n                        <input type=\"url\" id=\"btn_link\" formControlName=\"btn_link\">\n                        <div class=\"error\" *ngIf=\"errors.btn_link\">{{errors.btn_link}}</div>\n                    </div>\n                    <div class=\"input-container\">\n                        <label for=\"btn_text\" trans>Button Text</label>\n                        <input type=\"text\" id=\"btn_text\" formControlName=\"btn_text\" maxlength=\"30\">\n                        <div class=\"error\" *ngIf=\"errors.btn_text\">{{errors.btn_text}}</div>\n                    </div>\n                </div>\n            </mat-tab>\n            <mat-tab [label]=\"'Colors' | trans\">\n                <div class=\"tab-body-wrapper\">\n                    <div formGroupName=\"colors\">\n                        <color-picker-input *ngFor=\"let pair of colorControls() | keyvalue\" [formControlName]=\"pair.key\">{{colorViewName(pair.key)}}</color-picker-input>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\n            <span *ngIf=\"data.overlay\" trans>Update</span>\n            <span *ngIf=\"!data.overlay\" trans>Create</span>\n        </button>\n    </mat-dialog-actions>\n</form>","import {AfterViewInit, ChangeDetectionStrategy, Component, Inject, ViewChild} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {LinkOverlay} from '../link-overlay';\nimport {BehaviorSubject} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {Messages} from '../../../messages.enum';\nimport {LinkOverlayService} from '../link-overlay.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {LinkOverlayComponent} from '../../../shared/link-overlay/link-overlay.component';\nimport {Translations} from '@common/core/translations/translations.service';\nimport {finalize} from 'rxjs/operators';\n\ninterface CrupdateLinkOverlayModalData {\n    overlay?: LinkOverlay;\n}\n\n@Component({\n    selector: 'crupdate-link-overlay-modal',\n    templateUrl: './crupdate-link-overlay-modal.component.html',\n    styleUrls: ['./crupdate-link-overlay-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateLinkOverlayModalComponent implements AfterViewInit {\n    @ViewChild(LinkOverlayComponent, {static: true}) overlayCmp: LinkOverlayComponent;\n    public loading$ = new BehaviorSubject(false);\n    public errors$ = new BehaviorSubject<Partial<LinkOverlay>>({});\n    public form = this.fb.group({\n        name: [''],\n        position: [''],\n        message: [''],\n        label: [''],\n        label_position: [''],\n        btn_link: [''],\n        btn_text: [''],\n        colors: this.fb.group({\n            'bg-color': this.fb.control(['']),\n            'text-color': this.fb.control(['']),\n            'label-bg-color': this.fb.control(['']),\n            'label-color': this.fb.control(['']),\n            'btn-bg-color': this.fb.control(['']),\n            'btn-text-color': this.fb.control(['']),\n        }),\n    });\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateLinkOverlayModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateLinkOverlayModalData,\n        private fb: FormBuilder,\n        private linkOverlays: LinkOverlayService,\n        private toast: Toast,\n        private i18n: Translations,\n    ) {}\n\n    ngAfterViewInit() {\n        setTimeout(() => this.hydrateForm());\n    }\n\n    public confirm() {\n        this.loading$.next(true);\n        const request = this.data.overlay ?\n            this.linkOverlays.update(this.data.overlay.id, this.getPayload()) :\n            this.linkOverlays.create(this.getPayload());\n\n        const msg = this.data.overlay ?\n            Messages.LINK_OVERLAY_UPDATE_SUCCESS :\n            Messages.LINK_OVERLAY_CREATE_SUCCESS;\n\n        request\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.toast.open(msg);\n                this.close(response.linkOverlay);\n            }, err => this.errors$.next(err.messages));\n    }\n\n    public close(overlay?: LinkOverlay) {\n        this.dialogRef.close(overlay);\n    }\n\n    private getPayload() {\n        return this.form.value;\n    }\n\n    private hydrateForm() {\n        const value =  this.data.overlay || this.getDefaultValue();\n        this.form.patchValue({...value});\n    }\n\n    private getDefaultValue() {\n        const defaults = {\n            position: 'top-left',\n            message: this.i18n.t('Your message here'),\n            label: this.i18n.t('Label'),\n            btn_text: this.i18n.t('Button Text'),\n            btn_link: 'https://google.com',\n            colors: {},\n        };\n        const style = this.overlayCmp.getComputedStyle();\n        Object.keys(this.colorControls()).forEach(key => {\n            defaults.colors[key] = style.getPropertyValue('--' + key).trim();\n        });\n        return defaults;\n    }\n\n    public colorControls() {\n        return (this.form.get('colors') as FormGroup).controls;\n    }\n\n    public colorViewName(name: string) {\n        return name.replace(/-/g, ' ')\n            .replace('bg', 'background')\n            .replace('btn', 'button');\n    }\n}\n","<data-table [dataSource]=\"dataSource\" itemsName=\"overlays\" matSort class=\"responsive-material-table\">\n    <ng-container headerActions>\n        <button mat-raised-button color=\"accent\" (click)=\"showCrupdateLinkOverlayModal()\" trans>Add</button>\n        <info-popover>\n            <span trans>When specific overlay is selected as link type, that overlay will be displayed over destination website (Long url). Content and style is fully customizable.</span>\n        </info-popover>\n    </ng-container>\n\n    <ng-container headerSelectedActions>\n        <button mat-icon-button [matTooltip]=\"'Delete selected' | trans\" (click)=\"maybeDeleteSelectedOverlays()\">\n            <mat-icon svgIcon=\"delete\"></mat-icon>\n        </button>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Name</mat-header-cell>\n        <mat-cell *matCellDef=\"let overlay\">{{overlay.name}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"message\">\n        <mat-header-cell *matHeaderCellDef trans>Message</mat-header-cell>\n        <mat-cell *matCellDef=\"let overlay\" data-label=\"Message:\">{{overlay.message}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"btn_text\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Action</mat-header-cell>\n        <mat-cell *matCellDef=\"let overlay\" data-label=\"Action:\">{{overlay.btn_text}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"color\">\n        <mat-header-cell *matHeaderCellDef trans>Color</mat-header-cell>\n        <mat-cell *matCellDef=\"let overlay\">\n            <mat-icon svgIcon=\"drop-custom\" class=\"color-icon\" [style.color]=\"overlay.colors['bg-color']\"></mat-icon>\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"user\" *ngIf=\"insideAdmin()\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header=\"user_id\" trans>User</mat-header-cell>\n        <mat-cell *matCellDef=\"let overlay\" data-label=\"User: \">\n            <ng-container *ngIf=\"overlay.user\">\n                <img [src]=\"overlay.user.avatar\">\n                <span>{{overlay.user.display_name}}</span>\n            </ng-container>\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"updated_at\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Last Updated</mat-header-cell>\n        <mat-cell *matCellDef=\"let overlay\" class=\"hidden-on-mobile\">{{overlay.updated_at | formattedDate}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let overlay\">\n            <button mat-icon-button (click)=\"showCrupdateLinkOverlayModal(overlay)\" [matTooltip]=\"'Edit overlay' | trans\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n        </mat-cell>\n    </ng-container>\n</data-table>\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\nimport {Paginator} from '@common/shared/paginator.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {Messages} from '../../../messages.enum';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\nimport {LinkOverlay} from '../link-overlay';\nimport {LinkOverlayService} from '../link-overlay.service';\nimport {CrupdateLinkOverlayModalComponent} from '../crupdate-link-overlay-modal/crupdate-link-overlay-modal.component';\nimport {LinkUsageService} from '../../../shared/link/link-usage.service';\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'link-overlay-index',\n    templateUrl: './link-overlay-index.component.html',\n    styleUrls: ['./link-overlay-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [Paginator],\n})\nexport class LinkOverlayIndexComponent implements OnInit, OnDestroy {\n    @ViewChild(MatSort, {static: true}) matSort: MatSort;\n    public dataSource: PaginatedDataTableSource<LinkOverlay>;\n\n    constructor(\n        public paginator: Paginator<LinkOverlay>,\n        private overlays: LinkOverlayService,\n        private modal: Modal,\n        public currentUser: CurrentUser,\n        public settings: Settings,\n        private toast: Toast,\n        private linkUsage: LinkUsageService,\n        private overlay: OverlayPanel,\n        private router: Router,\n    ) {}\n\n    ngOnInit() {\n        // filter link overlays by current user ID if we are not in admin\n        const staticParams = this.router.url.indexOf('admin') === -1 ?\n            {userId: this.currentUser.get('id')} :\n            {};\n        this.dataSource = new PaginatedDataTableSource<LinkOverlay>({\n            uri: 'link-overlay',\n            dataPaginator: this.paginator,\n            matSort: this.matSort,\n            staticParams,\n        });\n    }\n\n    ngOnDestroy() {\n        this.paginator.destroy();\n    }\n\n    public maybeDeleteSelectedOverlays() {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Delete Overlays',\n            body:  'Are you sure you want to delete selected overlays?',\n            ok:    'Delete'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.deleteSelectedOverlays();\n        });\n    }\n\n    public deleteSelectedOverlays() {\n        const ids = this.dataSource.selectedRows.selected.map(d => d.id);\n        this.overlays.delete(ids).subscribe(() => {\n            this.dataSource.reset();\n            this.linkUsage.reload();\n            this.toast.open(Messages.LINK_OVERLAY_DELETE_SUCCESS);\n        }, err => {\n            this.toast.open(err.messages.general || HttpErrors.Default);\n        });\n    }\n\n    public showCrupdateLinkOverlayModal(overlay?: LinkOverlay) {\n        this.modal.open(\n            CrupdateLinkOverlayModalComponent,\n            {overlay},\n            'crupdate-link-overlay-modal-container'\n        ).beforeClosed().subscribe(data => {\n            if ( ! data) return;\n            this.dataSource.reset();\n            this.linkUsage.reload();\n        });\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.indexOf('admin') > -1;\n    }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CustomPagesIndexComponent} from '@common/core/pages/manager/custom-pages-index/custom-pages-index.component';\nimport {CrupdatePageComponent} from '@common/core/pages/manager/crupdate-page/crupdate-page.component';\nimport {DataTableModule} from '@common/shared/data-table/data-table.module';\nimport {RouterModule} from '@angular/router';\nimport {TextEditorModule} from '@common/text-editor/text-editor.module';\nimport {CUSTOM_PAGE_CONFIG_TOKEN, CustomPageManagerConfig} from '@common/core/pages/manager/custom-page-config';\nimport {SlugControlModule} from '@common/shared/form-controls/slug-control/slug-control.module';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    declarations: [\n        CustomPagesIndexComponent,\n        CrupdatePageComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        DataTableModule,\n        TextEditorModule,\n        SlugControlModule,\n        TranslationsModule,\n        FormatPipesModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatTooltipModule,\n    ]\n})\nexport class CustomPagesManagerModule {\n    static forRoot(config: CustomPageManagerConfig): ModuleWithProviders<CustomPagesManagerModule> {\n        return {\n            ngModule: CustomPagesManagerModule,\n            providers: [\n                {\n                    provide: CUSTOM_PAGE_CONFIG_TOKEN,\n                    useValue: config,\n                    multi: true,\n                }\n            ]\n        };\n    }\n}\n","'use strict';\nconst ipRegex = require('ip-regex');\nconst tlds = require('tlds');\n\nmodule.exports = options => {\n\toptions = {\n\t\tstrict: true,\n\t\t...options\n\t};\n\n\tconst protocol = `(?:(?:[a-z]+:)?//)${options.strict ? '' : '?'}`;\n\tconst auth = '(?:\\\\S+(?::\\\\S*)?@)?';\n\tconst ip = ipRegex.v4().source;\n\tconst host = '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9][-_]*)*[a-z\\\\u00a1-\\\\uffff0-9]+)';\n\tconst domain = '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*';\n\tconst tld = `(?:\\\\.${options.strict ? '(?:[a-z\\\\u00a1-\\\\uffff]{2,})' : `(?:${tlds.sort((a, b) => b.length - a.length).join('|')})`})\\\\.?`;\n\tconst port = '(?::\\\\d{2,5})?';\n\tconst path = '(?:[/?#][^\\\\s\"]*)?';\n\tconst regex = `(?:${protocol}|www\\\\.)${auth}(?:localhost|${ip}|${host}${domain}${tld})${port}${path}`;\n\n\treturn options.exact ? new RegExp(`(?:^${regex}$)`, 'i') : new RegExp(regex, 'ig');\n};\n","import {Injectable} from '@angular/core';\r\nimport { Params, Router } from '@angular/router';\r\nimport {BehaviorSubject, Observable, of, ReplaySubject, Subscription} from 'rxjs';\r\nimport {map, switchMap, take, tap} from 'rxjs/operators';\r\nimport {PaginationResponse} from '@common/core/types/pagination/pagination-response';\r\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\r\nimport {PaginatedBackendResponse} from '@common/core/types/pagination/paginated-backend-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class Paginator<T> {\r\n    protected params$ = new BehaviorSubject({});\r\n    private backendUri: string;\r\n    private lastResponse$ = new ReplaySubject<PaginationResponse<T>>(1);\r\n    private subscription: Subscription;\r\n    private initiated = false;\r\n    public paginatedOnce$ = new BehaviorSubject<boolean>(false);\r\n\r\n    // might not want to update query params sometimes\r\n    // if data table is only smaller part of the page\r\n    public dontUpdateQueryParams = false;\r\n    public loading$ = new BehaviorSubject(false);\r\n\r\n    public get pagination$(): Observable<PaginationResponse<T>> {\r\n        return this.lastResponse$.asObservable();\r\n    }\r\n\r\n    public get noResults$() {\r\n        // only return TRUE if data has already been\r\n        // loaded from backend and there were no results\r\n        return this.pagination$.pipe(map(p => !!p.data && p.data.length === 0));\r\n    }\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: AppHttpClient,\r\n    ) {}\r\n\r\n    public paginate(userParams: object = {}, url?: string, initialData?: PaginationResponse<T>): Observable<PaginationResponse<T>> {\r\n        // only use query params on first pagination, so query params can be removed via user params\r\n        const queryParams = !this.initiated ? this.currentQueryParams() : {};\r\n        this.params$.next({...queryParams, ...userParams});\r\n\r\n        if ( ! this.initiated) {\r\n            this.init(url, initialData);\r\n        }\r\n\r\n        // prevent multiple subscriptions\r\n        return this.pagination$.pipe(take(1));\r\n    }\r\n\r\n    public setPagination(pagination: PaginationResponse<T>) {\r\n        this.lastResponse$.next(pagination);\r\n        this.paginatedOnce$.next(true);\r\n    }\r\n\r\n    public currentQueryParams(): Params {\r\n        return this.router.routerState.root.snapshot.queryParams;\r\n    }\r\n\r\n    private init(uri: string, initialData?: PaginationResponse<T>) {\r\n        this.backendUri = uri;\r\n        this.subscription = this.params$.pipe(\r\n            switchMap(params => {\r\n                this.loading$.next(true);\r\n\r\n                // if we got initial pagination response (of 1st page)\r\n                // return that instead of making 1st page http request\r\n                const request = !this.paginatedOnce$.value && initialData ?\r\n                    of({pagination: initialData}) :\r\n                    this.http.get(this.backendUri, params);\r\n\r\n                return request.pipe(\r\n                    // can't use \"finalize\" here as it will complete after loading$.next(true)\r\n                    // call above, which will prevent loading bar from showing\r\n                    // if pagination request is cancelled and new one is queued\r\n                    tap(() => {\r\n                        this.updateQueryParams(params);\r\n                        this.loading$.next(false);\r\n                        this.paginatedOnce$.next(true);\r\n                    }, () => {\r\n                        this.loading$.next(false);\r\n                        this.paginatedOnce$.next(true);\r\n                    })\r\n                ) as PaginatedBackendResponse<T>;\r\n            })\r\n        ).subscribe(response => {\r\n            this.lastResponse$.next(response.pagination);\r\n        });\r\n\r\n        this.initiated = true;\r\n    }\r\n\r\n    private updateQueryParams(params = {}) {\r\n        if (this.dontUpdateQueryParams) return;\r\n        this.router.navigate([], {queryParams: params, replaceUrl: true});\r\n    }\r\n\r\n    public destroy() {\r\n        this.subscription && this.subscription.unsubscribe();\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\r\nimport {PaginationResponse} from '../../core/types/pagination/pagination-response';\r\nimport {User} from '../../core/types/models/User';\r\nimport {Subscription} from '@common/shared/billing/models/subscription';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Subscriptions {\r\n\r\n    /**\r\n     * Subscriptions constructor.\r\n     */\r\n    constructor(private http: AppHttpClient) {}\r\n\r\n    /**\r\n     * Get all available subscriptions.\r\n     */\r\n    public all(params?: object): Observable<PaginationResponse<Subscription>> {\r\n        return this.http.get('billing/subscriptions', params);\r\n    }\r\n\r\n    /**\r\n     * Get subscription matching specified id.\r\n     */\r\n    public get(id: number): Observable<{subscription: Subscription}> {\r\n        return this.http.get('billing/subscriptions/' + id);\r\n    }\r\n\r\n    /**\r\n     * Create a new subscription on stripe.\r\n     */\r\n    public createOnStripe(params: {plan_id: number, start_date?: string}): Observable<{user: User}> {\r\n        return this.http.post('billing/subscriptions/stripe', params);\r\n    }\r\n\r\n    /**\r\n     * Update subscription matching specified id.\r\n     */\r\n    public update(id: number, params: object): Observable<{subscription: Subscription}> {\r\n        return this.http.put('billing/subscriptions/' + id, params);\r\n    }\r\n\r\n    /**\r\n     * Create a new subscription.\r\n     */\r\n    public create(params: object): Observable<{subscription: Subscription}> {\r\n        return this.http.post('billing/subscriptions', params);\r\n    }\r\n\r\n    /**\r\n     * Cancel subscription matching specified id.\r\n     */\r\n    public cancel(id: number, params: {delete: boolean}): Observable<{user: User}> {\r\n        return this.http.delete('billing/subscriptions/' + id, params);\r\n    }\r\n\r\n    public resume(id: number): Observable<{subscription: Subscription}> {\r\n        return this.http.post('billing/subscriptions/' + id + '/resume');\r\n    }\r\n\r\n    public changePlan(id: number, plan: Plan): Observable<{user: User}|{links: {approve: string}}> {\r\n        return this.http.post('billing/subscriptions/' + id + '/change-plan', {newPlanId: plan.id});\r\n    }\r\n\r\n    public addCard(token: string): Observable<{user: User}> {\r\n        return this.http.post('billing/stripe/cards/add', {token});\r\n    }\r\n}\r\n","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('Chartist', [], function () {\n      return (root['Chartist'] = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist'] = factory();\n  }\n}(this, function () {\n\n/* Chartist.js 0.11.4\n * Copyright © 2019 Gion Kunz\n * Free to use under either the WTFPL license or the MIT license.\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT\n */\n/**\n * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.\n *\n * @module Chartist.Core\n */\nvar Chartist = {\n  version: '0.11.4'\n};\n\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * This object contains all namespaces used within Chartist.\n   *\n   * @memberof Chartist.Core\n   * @type {{svg: string, xmlns: string, xhtml: string, xlink: string, ct: string}}\n   */\n  Chartist.namespaces = {\n    svg: 'http://www.w3.org/2000/svg',\n    xmlns: 'http://www.w3.org/2000/xmlns/',\n    xhtml: 'http://www.w3.org/1999/xhtml',\n    xlink: 'http://www.w3.org/1999/xlink',\n    ct: 'http://gionkunz.github.com/chartist-js/ct'\n  };\n\n  /**\n   * Helps to simplify functional style code\n   *\n   * @memberof Chartist.Core\n   * @param {*} n This exact value will be returned by the noop function\n   * @return {*} The same value that was provided to the n parameter\n   */\n  Chartist.noop = function (n) {\n    return n;\n  };\n\n  /**\n   * Generates a-z from a number 0 to 26\n   *\n   * @memberof Chartist.Core\n   * @param {Number} n A number from 0 to 26 that will result in a letter a-z\n   * @return {String} A character from a-z based on the input number n\n   */\n  Chartist.alphaNumerate = function (n) {\n    // Limit to a-z\n    return String.fromCharCode(97 + n % 26);\n  };\n\n  /**\n   * Simple recursive object extend\n   *\n   * @memberof Chartist.Core\n   * @param {Object} target Target object where the source will be merged into\n   * @param {Object...} sources This object (objects) will be merged into target and then target is returned\n   * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source\n   */\n  Chartist.extend = function (target) {\n    var i, source, sourceProp;\n    target = target || {};\n\n    for (i = 1; i < arguments.length; i++) {\n      source = arguments[i];\n      for (var prop in source) {\n        sourceProp = source[prop];\n        if (typeof sourceProp === 'object' && sourceProp !== null && !(sourceProp instanceof Array)) {\n          target[prop] = Chartist.extend(target[prop], sourceProp);\n        } else {\n          target[prop] = sourceProp;\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Replaces all occurrences of subStr in str with newSubStr and returns a new string.\n   *\n   * @memberof Chartist.Core\n   * @param {String} str\n   * @param {String} subStr\n   * @param {String} newSubStr\n   * @return {String}\n   */\n  Chartist.replaceAll = function(str, subStr, newSubStr) {\n    return str.replace(new RegExp(subStr, 'g'), newSubStr);\n  };\n\n  /**\n   * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value\n   * @param {String} unit\n   * @return {String} Returns the passed number value with unit.\n   */\n  Chartist.ensureUnit = function(value, unit) {\n    if(typeof value === 'number') {\n      value = value + unit;\n    }\n\n    return value;\n  };\n\n  /**\n   * Converts a number or string to a quantity object.\n   *\n   * @memberof Chartist.Core\n   * @param {String|Number} input\n   * @return {Object} Returns an object containing the value as number and the unit as string.\n   */\n  Chartist.quantity = function(input) {\n    if (typeof input === 'string') {\n      var match = (/^(\\d+)\\s*(.*)$/g).exec(input);\n      return {\n        value : +match[1],\n        unit: match[2] || undefined\n      };\n    }\n    return { value: input };\n  };\n\n  /**\n   * This is a wrapper around document.querySelector that will return the query if it's already of type Node\n   *\n   * @memberof Chartist.Core\n   * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly\n   * @return {Node}\n   */\n  Chartist.querySelector = function(query) {\n    return query instanceof Node ? query : document.querySelector(query);\n  };\n\n  /**\n   * Functional style helper to produce array with given length initialized with undefined values\n   *\n   * @memberof Chartist.Core\n   * @param length\n   * @return {Array}\n   */\n  Chartist.times = function(length) {\n    return Array.apply(null, new Array(length));\n  };\n\n  /**\n   * Sum helper to be used in reduce functions\n   *\n   * @memberof Chartist.Core\n   * @param previous\n   * @param current\n   * @return {*}\n   */\n  Chartist.sum = function(previous, current) {\n    return previous + (current ? current : 0);\n  };\n\n  /**\n   * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} factor\n   * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array\n   */\n  Chartist.mapMultiply = function(factor) {\n    return function(num) {\n      return num * factor;\n    };\n  };\n\n  /**\n   * Add helper to be used in `Array.map` for adding a addend to each value of an array.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} addend\n   * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array\n   */\n  Chartist.mapAdd = function(addend) {\n    return function(num) {\n      return num + addend;\n    };\n  };\n\n  /**\n   * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n   *\n   * @memberof Chartist.Core\n   * @param arr\n   * @param cb\n   * @return {Array}\n   */\n  Chartist.serialMap = function(arr, cb) {\n    var result = [],\n        length = Math.max.apply(null, arr.map(function(e) {\n          return e.length;\n        }));\n\n    Chartist.times(length).forEach(function(e, index) {\n      var args = arr.map(function(e) {\n        return e[index];\n      });\n\n      result[index] = cb.apply(null, args);\n    });\n\n    return result;\n  };\n\n  /**\n   * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value that should be rounded with precision\n   * @param {Number} [digits] The number of digits after decimal used to do the rounding\n   * @returns {number} Rounded value\n   */\n  Chartist.roundWithPrecision = function(value, digits) {\n    var precision = Math.pow(10, digits || Chartist.precision);\n    return Math.round(value * precision) / precision;\n  };\n\n  /**\n   * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n   *\n   * @memberof Chartist.Core\n   * @type {number}\n   */\n  Chartist.precision = 8;\n\n  /**\n   * A map with characters to escape for strings to be safely used as attribute values.\n   *\n   * @memberof Chartist.Core\n   * @type {Object}\n   */\n  Chartist.escapingMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#039;'\n  };\n\n  /**\n   * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n   * If called with null or undefined the function will return immediately with null or undefined.\n   *\n   * @memberof Chartist.Core\n   * @param {Number|String|Object} data\n   * @return {String}\n   */\n  Chartist.serialize = function(data) {\n    if(data === null || data === undefined) {\n      return data;\n    } else if(typeof data === 'number') {\n      data = ''+data;\n    } else if(typeof data === 'object') {\n      data = JSON.stringify({data: data});\n    }\n\n    return Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);\n    }, data);\n  };\n\n  /**\n   * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n   *\n   * @memberof Chartist.Core\n   * @param {String} data\n   * @return {String|Number|Object}\n   */\n  Chartist.deserialize = function(data) {\n    if(typeof data !== 'string') {\n      return data;\n    }\n\n    data = Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, Chartist.escapingMap[key], key);\n    }, data);\n\n    try {\n      data = JSON.parse(data);\n      data = data.data !== undefined ? data.data : data;\n    } catch(e) {}\n\n    return data;\n  };\n\n  /**\n   * Create or reinitialize the SVG element for the chart\n   *\n   * @memberof Chartist.Core\n   * @param {Node} container The containing DOM Node object that will be used to plant the SVG element\n   * @param {String} width Set the width of the SVG element. Default is 100%\n   * @param {String} height Set the height of the SVG element. Default is 100%\n   * @param {String} className Specify a class to be added to the SVG element\n   * @return {Object} The created/reinitialized SVG element\n   */\n  Chartist.createSvg = function (container, width, height, className) {\n    var svg;\n\n    width = width || '100%';\n    height = height || '100%';\n\n    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n    Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {\n      return svg.getAttributeNS(Chartist.namespaces.xmlns, 'ct');\n    }).forEach(function removePreviousElement(svg) {\n      container.removeChild(svg);\n    });\n\n    // Create svg object with width and height or use 100% as default\n    svg = new Chartist.Svg('svg').attr({\n      width: width,\n      height: height\n    }).addClass(className);\n\n    svg._node.style.width = width;\n    svg._node.style.height = height;\n\n    // Add the DOM node to our container\n    container.appendChild(svg._node);\n\n    return svg;\n  };\n\n  /**\n   * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n   *\n   * @param  {Object} data The data object that is passed as second argument to the charts\n   * @return {Object} The normalized data object\n   */\n  Chartist.normalizeData = function(data, reverse, multi) {\n    var labelCount;\n    var output = {\n      raw: data,\n      normalized: {}\n    };\n\n    // Check if we should generate some labels based on existing series data\n    output.normalized.series = Chartist.getDataArray({\n      series: data.series || []\n    }, reverse, multi);\n\n    // If all elements of the normalized data array are arrays we're dealing with\n    // multi series data and we need to find the largest series if they are un-even\n    if (output.normalized.series.every(function(value) {\n        return value instanceof Array;\n      })) {\n      // Getting the series with the the most elements\n      labelCount = Math.max.apply(null, output.normalized.series.map(function(series) {\n        return series.length;\n      }));\n    } else {\n      // We're dealing with Pie data so we just take the normalized array length\n      labelCount = output.normalized.series.length;\n    }\n\n    output.normalized.labels = (data.labels || []).slice();\n    // Padding the labels to labelCount with empty strings\n    Array.prototype.push.apply(\n      output.normalized.labels,\n      Chartist.times(Math.max(0, labelCount - output.normalized.labels.length)).map(function() {\n        return '';\n      })\n    );\n\n    if(reverse) {\n      Chartist.reverseData(output.normalized);\n    }\n\n    return output;\n  };\n\n  /**\n   * This function safely checks if an objects has an owned property.\n   *\n   * @param {Object} object The object where to check for a property\n   * @param {string} property The property name\n   * @returns {boolean} Returns true if the object owns the specified property\n   */\n  Chartist.safeHasProperty = function(object, property) {\n    return object !== null &&\n      typeof object === 'object' &&\n      object.hasOwnProperty(property);\n  };\n\n  /**\n   * Checks if a value is considered a hole in the data series.\n   *\n   * @param {*} value\n   * @returns {boolean} True if the value is considered a data hole\n   */\n  Chartist.isDataHoleValue = function(value) {\n    return value === null ||\n      value === undefined ||\n      (typeof value === 'number' && isNaN(value));\n  };\n\n  /**\n   * Reverses the series, labels and series data arrays.\n   *\n   * @memberof Chartist.Core\n   * @param data\n   */\n  Chartist.reverseData = function(data) {\n    data.labels.reverse();\n    data.series.reverse();\n    for (var i = 0; i < data.series.length; i++) {\n      if(typeof(data.series[i]) === 'object' && data.series[i].data !== undefined) {\n        data.series[i].data.reverse();\n      } else if(data.series[i] instanceof Array) {\n        data.series[i].reverse();\n      }\n    }\n  };\n\n  /**\n   * Convert data series into plain array\n   *\n   * @memberof Chartist.Core\n   * @param {Object} data The series object that contains the data to be visualized in the chart\n   * @param {Boolean} [reverse] If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.\n   * @param {Boolean} [multi] Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n   * @return {Array} A plain array that contains the data to be visualized in the chart\n   */\n  Chartist.getDataArray = function(data, reverse, multi) {\n    // Recursively walks through nested arrays and convert string values to numbers and objects with value properties\n    // to values. Check the tests in data core -> data normalization for a detailed specification of expected values\n    function recursiveConvert(value) {\n      if(Chartist.safeHasProperty(value, 'value')) {\n        // We are dealing with value object notation so we need to recurse on value property\n        return recursiveConvert(value.value);\n      } else if(Chartist.safeHasProperty(value, 'data')) {\n        // We are dealing with series object notation so we need to recurse on data property\n        return recursiveConvert(value.data);\n      } else if(value instanceof Array) {\n        // Data is of type array so we need to recurse on the series\n        return value.map(recursiveConvert);\n      } else if(Chartist.isDataHoleValue(value)) {\n        // We're dealing with a hole in the data and therefore need to return undefined\n        // We're also returning undefined for multi value output\n        return undefined;\n      } else {\n        // We need to prepare multi value output (x and y data)\n        if(multi) {\n          var multiValue = {};\n\n          // Single series value arrays are assumed to specify the Y-Axis value\n          // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n          // If multi is a string then it's assumed that it specified which dimension should be filled as default\n          if(typeof multi === 'string') {\n            multiValue[multi] = Chartist.getNumberOrUndefined(value);\n          } else {\n            multiValue.y = Chartist.getNumberOrUndefined(value);\n          }\n\n          multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;\n          multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;\n\n          return multiValue;\n\n        } else {\n          // We can return simple data\n          return Chartist.getNumberOrUndefined(value);\n        }\n      }\n    }\n\n    return data.series.map(recursiveConvert);\n  };\n\n  /**\n   * Converts a number into a padding object.\n   *\n   * @memberof Chartist.Core\n   * @param {Object|Number} padding\n   * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed\n   * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n   */\n  Chartist.normalizePadding = function(padding, fallback) {\n    fallback = fallback || 0;\n\n    return typeof padding === 'number' ? {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    } : {\n      top: typeof padding.top === 'number' ? padding.top : fallback,\n      right: typeof padding.right === 'number' ? padding.right : fallback,\n      bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,\n      left: typeof padding.left === 'number' ? padding.left : fallback\n    };\n  };\n\n  Chartist.getMetaData = function(series, index) {\n    var value = series.data ? series.data[index] : series[index];\n    return value ? value.meta : undefined;\n  };\n\n  /**\n   * Calculate the order of magnitude for the chart scale\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value Range of the chart\n   * @return {Number} The order of magnitude\n   */\n  Chartist.orderOfMagnitude = function (value) {\n    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  };\n\n  /**\n   * Project a data length into screen coordinates (pixels)\n   *\n   * @memberof Chartist.Core\n   * @param {Object} axisLength The svg element for the chart\n   * @param {Number} length Single data value from a series array\n   * @param {Object} bounds All the values to set the bounds of the chart\n   * @return {Number} The projected data length in pixels\n   */\n  Chartist.projectLength = function (axisLength, length, bounds) {\n    return length / bounds.range * axisLength;\n  };\n\n  /**\n   * Get the height of the area in the chart for the data series\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @return {Number} The height of the area in the chart for the data series\n   */\n  Chartist.getAvailableHeight = function (svg, options) {\n    return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top +  options.chartPadding.bottom) - options.axisX.offset, 0);\n  };\n\n  /**\n   * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n   *\n   * @memberof Chartist.Core\n   * @param {Array} data The array that contains the data to be visualized in the chart\n   * @param {Object} options The Object that contains the chart options\n   * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n   * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.\n   */\n  Chartist.getHighLow = function (data, options, dimension) {\n    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n    options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});\n\n    var highLow = {\n        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n        low: options.low === undefined ? Number.MAX_VALUE : +options.low\n      };\n    var findHigh = options.high === undefined;\n    var findLow = options.low === undefined;\n\n    // Function to recursively walk through arrays and find highest and lowest number\n    function recursiveHighLow(data) {\n      if(data === undefined) {\n        return undefined;\n      } else if(data instanceof Array) {\n        for (var i = 0; i < data.length; i++) {\n          recursiveHighLow(data[i]);\n        }\n      } else {\n        var value = dimension ? +data[dimension] : +data;\n\n        if (findHigh && value > highLow.high) {\n          highLow.high = value;\n        }\n\n        if (findLow && value < highLow.low) {\n          highLow.low = value;\n        }\n      }\n    }\n\n    // Start to find highest and lowest number recursively\n    if(findHigh || findLow) {\n      recursiveHighLow(data);\n    }\n\n    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n    // used to generate the chart. This is useful when the chart always needs to contain the position of the\n    // invisible reference value in the view i.e. for bipolar scales.\n    if (options.referenceValue || options.referenceValue === 0) {\n      highLow.high = Math.max(options.referenceValue, highLow.high);\n      highLow.low = Math.min(options.referenceValue, highLow.low);\n    }\n\n    // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n    // to set the high or low to 0 depending on the polarity\n    if (highLow.high <= highLow.low) {\n      // If both values are 0 we set high to 1\n      if (highLow.low === 0) {\n        highLow.high = 1;\n      } else if (highLow.low < 0) {\n        // If we have the same negative value for the bounds we set bounds.high to 0\n        highLow.high = 0;\n      } else if (highLow.high > 0) {\n        // If we have the same positive value for the bounds we set bounds.low to 0\n        highLow.low = 0;\n      } else {\n        // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n        highLow.high = 1;\n        highLow.low = 0;\n      }\n    }\n\n    return highLow;\n  };\n\n  /**\n   * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {Boolean}\n   */\n  Chartist.isNumeric = function(value) {\n    return value === null ? false : isFinite(value);\n  };\n\n  /**\n   * Returns true on all falsey values except the numeric value 0.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {boolean}\n   */\n  Chartist.isFalseyButZero = function(value) {\n    return !value && value !== 0;\n  };\n\n  /**\n   * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {*}\n   */\n  Chartist.getNumberOrUndefined = function(value) {\n    return Chartist.isNumeric(value) ? +value : undefined;\n  };\n\n  /**\n   * Checks if provided value object is multi value (contains x or y properties)\n   *\n   * @memberof Chartist.Core\n   * @param value\n   */\n  Chartist.isMultiValue = function(value) {\n    return typeof value === 'object' && ('x' in value || 'y' in value);\n  };\n\n  /**\n   * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @param dimension\n   * @param defaultValue\n   * @returns {*}\n   */\n  Chartist.getMultiValue = function(value, dimension) {\n    if(Chartist.isMultiValue(value)) {\n      return Chartist.getNumberOrUndefined(value[dimension || 'y']);\n    } else {\n      return Chartist.getNumberOrUndefined(value);\n    }\n  };\n\n  /**\n   * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} num An integer number where the smallest factor should be searched for\n   * @returns {Number} The smallest integer factor of the parameter num.\n   */\n  Chartist.rho = function(num) {\n    if(num === 1) {\n      return num;\n    }\n\n    function gcd(p, q) {\n      if (p % q === 0) {\n        return q;\n      } else {\n        return gcd(q, p % q);\n      }\n    }\n\n    function f(x) {\n      return x * x + 1;\n    }\n\n    var x1 = 2, x2 = 2, divisor;\n    if (num % 2 === 0) {\n      return 2;\n    }\n\n    do {\n      x1 = f(x1) % num;\n      x2 = f(f(x2)) % num;\n      divisor = gcd(Math.abs(x1 - x2), num);\n    } while (divisor === 1);\n\n    return divisor;\n  };\n\n  /**\n   * Calculate and retrieve all the bounds for the chart and return them in one array\n   *\n   * @memberof Chartist.Core\n   * @param {Number} axisLength The length of the Axis used for\n   * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.\n   * @param {Number} scaleMinSpace The minimum projected length a step should result in\n   * @param {Boolean} onlyInteger\n   * @return {Object} All the values to set the bounds of the chart\n   */\n  Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {\n    var i,\n      optimizationCounter = 0,\n      newMin,\n      newMax,\n      bounds = {\n        high: highLow.high,\n        low: highLow.low\n      };\n\n    bounds.valueRange = bounds.high - bounds.low;\n    bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);\n    bounds.step = Math.pow(10, bounds.oom);\n    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n    bounds.range = bounds.max - bounds.min;\n    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n    // If we are already below the scaleMinSpace value we will scale up\n    var length = Chartist.projectLength(axisLength, bounds.step, bounds);\n    var scaleUp = length < scaleMinSpace;\n    var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0;\n\n    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n    if(onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n      bounds.step = 1;\n    } else if(onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {\n      // If step 1 was too small, we can try the smallest factor of range\n      // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n      // is larger than the scaleMinSpace we should go for it.\n      bounds.step = smallestFactor;\n    } else {\n      // Trying to divide or multiply by 2 and find the best step value\n      while (true) {\n        if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {\n          bounds.step *= 2;\n        } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {\n          bounds.step /= 2;\n          if(onlyInteger && bounds.step % 1 !== 0) {\n            bounds.step *= 2;\n            break;\n          }\n        } else {\n          break;\n        }\n\n        if(optimizationCounter++ > 1000) {\n          throw new Error('Exceeded maximum number of iterations while optimizing scale step!');\n        }\n      }\n    }\n\n    var EPSILON = 2.221E-16;\n    bounds.step = Math.max(bounds.step, EPSILON);\n    function safeIncrement(value, increment) {\n      // If increment is too small use *= (1+EPSILON) as a simple nextafter\n      if (value === (value += increment)) {\n      \tvalue *= (1 + (increment > 0 ? EPSILON : -EPSILON));\n      }\n      return value;\n    }\n\n    // Narrow min and max based on new step\n    newMin = bounds.min;\n    newMax = bounds.max;\n    while (newMin + bounds.step <= bounds.low) {\n    \tnewMin = safeIncrement(newMin, bounds.step);\n    }\n    while (newMax - bounds.step >= bounds.high) {\n    \tnewMax = safeIncrement(newMax, -bounds.step);\n    }\n    bounds.min = newMin;\n    bounds.max = newMax;\n    bounds.range = bounds.max - bounds.min;\n\n    var values = [];\n    for (i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n      var value = Chartist.roundWithPrecision(i);\n      if (value !== values[values.length - 1]) {\n        values.push(value);\n      }\n    }\n    bounds.values = values;\n    return bounds;\n  };\n\n  /**\n   * Calculate cartesian coordinates of polar coordinates\n   *\n   * @memberof Chartist.Core\n   * @param {Number} centerX X-axis coordinates of center point of circle segment\n   * @param {Number} centerY X-axis coordinates of center point of circle segment\n   * @param {Number} radius Radius of circle segment\n   * @param {Number} angleInDegrees Angle of circle segment in degrees\n   * @return {{x:Number, y:Number}} Coordinates of point on circumference\n   */\n  Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  };\n\n  /**\n   * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used\n   * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements\n   */\n  Chartist.createChartRect = function (svg, options, fallbackPadding) {\n    var hasAxis = !!(options.axisX || options.axisY);\n    var yAxisOffset = hasAxis ? options.axisY.offset : 0;\n    var xAxisOffset = hasAxis ? options.axisX.offset : 0;\n    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n    var width = svg.width() || Chartist.quantity(options.width).value || 0;\n    var height = svg.height() || Chartist.quantity(options.height).value || 0;\n    var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding);\n\n    // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);\n    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);\n\n    var chartRect = {\n      padding: normalizedPadding,\n      width: function () {\n        return this.x2 - this.x1;\n      },\n      height: function () {\n        return this.y1 - this.y2;\n      }\n    };\n\n    if(hasAxis) {\n      if (options.axisX.position === 'start') {\n        chartRect.y2 = normalizedPadding.top + xAxisOffset;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n      } else {\n        chartRect.y2 = normalizedPadding.top;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);\n      }\n\n      if (options.axisY.position === 'start') {\n        chartRect.x1 = normalizedPadding.left + yAxisOffset;\n        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      } else {\n        chartRect.x1 = normalizedPadding.left;\n        chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);\n      }\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n    }\n\n    return chartRect;\n  };\n\n  /**\n   * Creates a grid line based on a projected value.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param index\n   * @param axis\n   * @param offset\n   * @param length\n   * @param group\n   * @param classes\n   * @param eventEmitter\n   */\n  Chartist.createGrid = function(position, index, axis, offset, length, group, classes, eventEmitter) {\n    var positionalData = {};\n    positionalData[axis.units.pos + '1'] = position;\n    positionalData[axis.units.pos + '2'] = position;\n    positionalData[axis.counterUnits.pos + '1'] = offset;\n    positionalData[axis.counterUnits.pos + '2'] = offset + length;\n\n    var gridElement = group.elem('line', positionalData, classes.join(' '));\n\n    // Event for grid draw\n    eventEmitter.emit('draw',\n      Chartist.extend({\n        type: 'grid',\n        axis: axis,\n        index: index,\n        group: group,\n        element: gridElement\n      }, positionalData)\n    );\n  };\n\n  /**\n   * Creates a grid background rect and emits the draw event.\n   *\n   * @memberof Chartist.Core\n   * @param gridGroup\n   * @param chartRect\n   * @param className\n   * @param eventEmitter\n   */\n  Chartist.createGridBackground = function (gridGroup, chartRect, className, eventEmitter) {\n    var gridBackground = gridGroup.elem('rect', {\n        x: chartRect.x1,\n        y: chartRect.y2,\n        width: chartRect.width(),\n        height: chartRect.height(),\n      }, className, true);\n\n      // Event for grid background draw\n      eventEmitter.emit('draw', {\n        type: 'gridBackground',\n        group: gridGroup,\n        element: gridBackground\n      });\n  };\n\n  /**\n   * Creates a label based on a projected value and an axis.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param length\n   * @param index\n   * @param labels\n   * @param axis\n   * @param axisOffset\n   * @param labelOffset\n   * @param group\n   * @param classes\n   * @param useForeignObject\n   * @param eventEmitter\n   */\n  Chartist.createLabel = function(position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {\n    var labelElement;\n    var positionalData = {};\n\n    positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];\n    positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];\n    positionalData[axis.units.len] = length;\n    positionalData[axis.counterUnits.len] = Math.max(0, axisOffset - 10);\n\n    if(useForeignObject) {\n      // We need to set width and height explicitly to px as span will not expand with width and height being\n      // 100% in all browsers\n      var content = document.createElement('span');\n      content.className = classes.join(' ');\n      content.setAttribute('xmlns', Chartist.namespaces.xhtml);\n      content.innerText = labels[index];\n      content.style[axis.units.len] = Math.round(positionalData[axis.units.len]) + 'px';\n      content.style[axis.counterUnits.len] = Math.round(positionalData[axis.counterUnits.len]) + 'px';\n\n      labelElement = group.foreignObject(content, Chartist.extend({\n        style: 'overflow: visible;'\n      }, positionalData));\n    } else {\n      labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);\n    }\n\n    eventEmitter.emit('draw', Chartist.extend({\n      type: 'label',\n      axis: axis,\n      index: index,\n      group: group,\n      element: labelElement,\n      text: labels[index]\n    }, positionalData));\n  };\n\n  /**\n   * Helper to read series specific options from options object. It automatically falls back to the global option if\n   * there is no option in the series options.\n   *\n   * @param {Object} series Series object\n   * @param {Object} options Chartist options object\n   * @param {string} key The options key that should be used to obtain the options\n   * @returns {*}\n   */\n  Chartist.getSeriesOption = function(series, options, key) {\n    if(series.name && options.series && options.series[series.name]) {\n      var seriesOptions = options.series[series.name];\n      return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];\n    } else {\n      return options[key];\n    }\n  };\n\n  /**\n   * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n   *\n   * @memberof Chartist.Core\n   * @param {Object} options Options set by user\n   * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart\n   * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events\n   * @return {Object} The consolidated options object from the defaults, base and matching responsive options\n   */\n  Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {\n    var baseOptions = Chartist.extend({}, options),\n      currentOptions,\n      mediaQueryListeners = [],\n      i;\n\n    function updateCurrentOptions(mediaEvent) {\n      var previousOptions = currentOptions;\n      currentOptions = Chartist.extend({}, baseOptions);\n\n      if (responsiveOptions) {\n        for (i = 0; i < responsiveOptions.length; i++) {\n          var mql = window.matchMedia(responsiveOptions[i][0]);\n          if (mql.matches) {\n            currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);\n          }\n        }\n      }\n\n      if(eventEmitter && mediaEvent) {\n        eventEmitter.emit('optionsChanged', {\n          previousOptions: previousOptions,\n          currentOptions: currentOptions\n        });\n      }\n    }\n\n    function removeMediaQueryListeners() {\n      mediaQueryListeners.forEach(function(mql) {\n        mql.removeListener(updateCurrentOptions);\n      });\n    }\n\n    if (!window.matchMedia) {\n      throw 'window.matchMedia not found! Make sure you\\'re using a polyfill.';\n    } else if (responsiveOptions) {\n\n      for (i = 0; i < responsiveOptions.length; i++) {\n        var mql = window.matchMedia(responsiveOptions[i][0]);\n        mql.addListener(updateCurrentOptions);\n        mediaQueryListeners.push(mql);\n      }\n    }\n    // Execute initially without an event argument so we get the correct options\n    updateCurrentOptions();\n\n    return {\n      removeMediaQueryListeners: removeMediaQueryListeners,\n      getCurrentOptions: function getCurrentOptions() {\n        return Chartist.extend({}, currentOptions);\n      }\n    };\n  };\n\n\n  /**\n   * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n   * valueData property describing the segment.\n   *\n   * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n   * points with undefined values are discarded.\n   *\n   * **Options**\n   * The following options are used to determine how segments are formed\n   * ```javascript\n   * var options = {\n   *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n   *   fillHoles: false,\n   *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n   *   increasingX: false\n   * };\n   * ```\n   *\n   * @memberof Chartist.Core\n   * @param {Array} pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n   * @param {Array} values List of associated point values in the form [v1, v2 .. vn]\n   * @param {Object} options Options set by user\n   * @return {Array} List of segments, each containing a pathCoordinates and valueData property.\n   */\n  Chartist.splitIntoSegments = function(pathCoordinates, valueData, options) {\n    var defaultOptions = {\n      increasingX: false,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var segments = [];\n    var hole = true;\n\n    for(var i = 0; i < pathCoordinates.length; i += 2) {\n      // If this value is a \"hole\" we set the hole flag\n      if(Chartist.getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n        if(!options.fillHoles) {\n          hole = true;\n        }\n      } else {\n        if(options.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i-2]) {\n          // X is not increasing, so we need to make sure we start a new segment\n          hole = true;\n        }\n\n\n        // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n        if(hole) {\n          segments.push({\n            pathCoordinates: [],\n            valueData: []\n          });\n          // As we have a valid value now, we are not in a \"hole\" anymore\n          hole = false;\n        }\n\n        // Add to the segment pathCoordinates and valueData\n        segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);\n        segments[segments.length - 1].valueData.push(valueData[i / 2]);\n      }\n    }\n\n    return segments;\n  };\n}(this || global, Chartist));\n;/**\n * Chartist path interpolation functions.\n *\n * @module Chartist.Interpolation\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.Interpolation = {};\n\n  /**\n   * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.none({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @return {Function}\n   */\n  Chartist.Interpolation.none = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n    return function none(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var hole = true;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        if(Chartist.getMultiValue(currData.value) !== undefined) {\n\n          if(hole) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.line(currX, currY, false, currData);\n          }\n\n          hole = false;\n        } else if(!options.fillHoles) {\n          hole = true;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n   *\n   * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.simple({\n   *     divisor: 2,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the simple interpolation factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.simple = function(options) {\n    var defaultOptions = {\n      divisor: 2,\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var d = 1 / Math.max(1, options.divisor);\n\n    return function simple(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var prevX, prevY, prevData;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var length = (currX - prevX) * d;\n        var currData = valueData[i / 2];\n\n        if(currData.value !== undefined) {\n\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.curve(\n              prevX + length,\n              prevY,\n              currX - length,\n              currY,\n              currX,\n              currY,\n              false,\n              currData\n            );\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = currX = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n   *\n   * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 1,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the cardinal factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.cardinal = function(options) {\n    var defaultOptions = {\n      tension: 1,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var t = Math.min(1, Math.max(0, options.tension)),\n      c = 1 - t;\n\n    return function cardinal(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the cardinal function\n        segments.forEach(function(segment) {\n          paths.push(cardinal(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than two points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),\n          z;\n\n        for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {\n          var p = [\n            {x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1]},\n            {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]},\n            {x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3]},\n            {x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5]}\n          ];\n          if (z) {\n            if (!i) {\n              p[0] = {x: +pathCoordinates[iLen - 2], y: +pathCoordinates[iLen - 1]};\n            } else if (iLen - 4 === i) {\n              p[3] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n            } else if (iLen - 2 === i) {\n              p[2] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n              p[3] = {x: +pathCoordinates[2], y: +pathCoordinates[3]};\n            }\n          } else {\n            if (iLen - 4 === i) {\n              p[3] = p[2];\n            } else if (!i) {\n              p[0] = {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]};\n            }\n          }\n\n          path.curve(\n            (t * (-p[0].x + 6 * p[1].x + p[2].x) / 6) + (c * p[2].x),\n            (t * (-p[0].y + 6 * p[1].y + p[2].y) / 6) + (c * p[2].y),\n            (t * (p[1].x + 6 * p[2].x - p[3].x) / 6) + (c * p[2].x),\n            (t * (p[1].y + 6 * p[2].y - p[3].y) / 6) + (c * p[2].y),\n            p[2].x,\n            p[2].y,\n            false,\n            valueData[(i + 2) / 2]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n   *\n   * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.monotoneCubic({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the monotoneCubic factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.monotoneCubic = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function monotoneCubic(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles,\n        increasingX: true\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the monotoneCubic fn function\n        segments.forEach(function(segment) {\n          paths.push(monotoneCubic(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than three points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var xs = [],\n          ys = [],\n          i,\n          n = pathCoordinates.length / 2,\n          ms = [],\n          ds = [], dys = [], dxs = [],\n          path;\n\n        // Populate x and y coordinates into separate arrays, for readability\n\n        for(i = 0; i < n; i++) {\n          xs[i] = pathCoordinates[i * 2];\n          ys[i] = pathCoordinates[i * 2 + 1];\n        }\n\n        // Calculate deltas and derivative\n\n        for(i = 0; i < n - 1; i++) {\n          dys[i] = ys[i + 1] - ys[i];\n          dxs[i] = xs[i + 1] - xs[i];\n          ds[i] = dys[i] / dxs[i];\n        }\n\n        // Determine desired slope (m) at each point using Fritsch-Carlson method\n        // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\n        ms[0] = ds[0];\n        ms[n - 1] = ds[n - 2];\n\n        for(i = 1; i < n - 1; i++) {\n          if(ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0)) {\n            ms[i] = 0;\n          } else {\n            ms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n              (2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n            if(!isFinite(ms[i])) {\n              ms[i] = 0;\n            }\n          }\n        }\n\n        // Now build a path from the slopes\n\n        path = new Chartist.Svg.Path().move(xs[0], ys[0], false, valueData[0]);\n\n        for(i = 0; i < n - 1; i++) {\n          path.curve(\n            // First control point\n            xs[i] + dxs[i] / 3,\n            ys[i] + ms[i] * dxs[i] / 3,\n            // Second control point\n            xs[i + 1] - dxs[i] / 3,\n            ys[i + 1] - ms[i + 1] * dxs[i] / 3,\n            // End point\n            xs[i + 1],\n            ys[i + 1],\n\n            false,\n            valueData[i + 1]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.step({\n   *     postpone: true,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param options\n   * @returns {Function}\n   */\n  Chartist.Interpolation.step = function(options) {\n    var defaultOptions = {\n      postpone: true,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function step(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n\n      var prevX, prevY, prevData;\n\n      for (var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        // If the current point is also not a hole we can draw the step lines\n        if(currData.value !== undefined) {\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            if(options.postpone) {\n              // If postponed we should draw the step line with the value of the previous value\n              path.line(currX, prevY, false, prevData);\n            } else {\n              // If not postponed we should draw the step line with the value of the current value\n              path.line(prevX, currY, false, currData);\n            }\n            // Line to the actual point (this should only be a Y-Axis movement\n            path.line(currX, currY, false, currData);\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = prevY = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * A very basic event module that helps to generate and catch events.\n *\n * @module Chartist.Event\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.EventEmitter = function () {\n    var handlers = [];\n\n    /**\n     * Add an event handler for a specific event\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name\n     * @param {Function} handler A event handler function\n     */\n    function addEventHandler(event, handler) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    }\n\n    /**\n     * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name where a specific or all handlers should be removed\n     * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n     */\n    function removeEventHandler(event, handler) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        // If handler is set we will look for a specific handler and only remove this\n        if(handler) {\n          handlers[event].splice(handlers[event].indexOf(handler), 1);\n          if(handlers[event].length === 0) {\n            delete handlers[event];\n          }\n        } else {\n          // If no handler is specified we remove all handlers for this event\n          delete handlers[event];\n        }\n      }\n    }\n\n    /**\n     * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name that should be triggered\n     * @param {*} data Arbitrary data that will be passed to the event handler callback functions\n     */\n    function emit(event, data) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        handlers[event].forEach(function(handler) {\n          handler(data);\n        });\n      }\n\n      // Emit event to star event handlers\n      if(handlers['*']) {\n        handlers['*'].forEach(function(starHandler) {\n          starHandler(event, data);\n        });\n      }\n    }\n\n    return {\n      addEventHandler: addEventHandler,\n      removeEventHandler: removeEventHandler,\n      emit: emit\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * This module provides some basic prototype inheritance utilities.\n *\n * @module Chartist.Class\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  function listToArray(list) {\n    var arr = [];\n    if (list.length) {\n      for (var i = 0; i < list.length; i++) {\n        arr.push(list[i]);\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Method to extend from current prototype.\n   *\n   * @memberof Chartist.Class\n   * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.\n   * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.\n   * @return {Function} Constructor function of the new class\n   *\n   * @example\n   * var Fruit = Class.extend({\n     * color: undefined,\n     *   sugar: undefined,\n     *\n     *   constructor: function(color, sugar) {\n     *     this.color = color;\n     *     this.sugar = sugar;\n     *   },\n     *\n     *   eat: function() {\n     *     this.sugar = 0;\n     *     return this;\n     *   }\n     * });\n   *\n   * var Banana = Fruit.extend({\n     *   length: undefined,\n     *\n     *   constructor: function(length, sugar) {\n     *     Banana.super.constructor.call(this, 'Yellow', sugar);\n     *     this.length = length;\n     *   }\n     * });\n   *\n   * var banana = new Banana(20, 40);\n   * console.log('banana instanceof Fruit', banana instanceof Fruit);\n   * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));\n   * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);\n   * console.log(banana.sugar);\n   * console.log(banana.eat().sugar);\n   * console.log(banana.color);\n   */\n  function extend(properties, superProtoOverride) {\n    var superProto = superProtoOverride || this.prototype || Chartist.Class;\n    var proto = Object.create(superProto);\n\n    Chartist.Class.cloneDefinitions(proto, properties);\n\n    var constr = function() {\n      var fn = proto.constructor || function () {},\n        instance;\n\n      // If this is linked to the Chartist namespace the constructor was not called with new\n      // To provide a fallback we will instantiate here and return the instance\n      instance = this === Chartist ? Object.create(proto) : this;\n      fn.apply(instance, Array.prototype.slice.call(arguments, 0));\n\n      // If this constructor was not called with new we need to return the instance\n      // This will not harm when the constructor has been called with new as the returned value is ignored\n      return instance;\n    };\n\n    constr.prototype = proto;\n    constr.super = superProto;\n    constr.extend = this.extend;\n\n    return constr;\n  }\n\n  // Variable argument list clones args > 0 into args[0] and retruns modified args[0]\n  function cloneDefinitions() {\n    var args = listToArray(arguments);\n    var target = args[0];\n\n    args.splice(1, args.length - 1).forEach(function (source) {\n      Object.getOwnPropertyNames(source).forEach(function (propName) {\n        // If this property already exist in target we delete it first\n        delete target[propName];\n        // Define the property with the descriptor from source\n        Object.defineProperty(target, propName,\n          Object.getOwnPropertyDescriptor(source, propName));\n      });\n    });\n\n    return target;\n  }\n\n  Chartist.Class = {\n    extend: extend,\n    cloneDefinitions: cloneDefinitions\n  };\n\n}(this || global, Chartist));\n;/**\n * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.\n *\n * @module Chartist.Base\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   *\n   * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   * @memberof Chartist.Base\n   */\n  function update(data, options, override) {\n    if(data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if(options) {\n      this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options);\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if(!this.initializeTimeoutId) {\n        this.optionsProvider.removeMediaQueryListeners();\n        this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if(!this.initializeTimeoutId) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   *\n   * @memberof Chartist.Base\n   */\n  function detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if(!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event. Check the examples for supported events.\n   * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  function on(event, handler) {\n    this.eventEmitter.addEventHandler(event, handler);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event for which a handler should be removed\n   * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  function off(event, handler) {\n    this.eventEmitter.removeEventHandler(event, handler);\n    return this;\n  }\n\n  function initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.addEventHandler('optionsChanged', function() {\n      this.update();\n    }.bind(this));\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if(this.options.plugins) {\n      this.options.plugins.forEach(function(plugin) {\n        if(plugin instanceof Array) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      }.bind(this));\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = undefined;\n  }\n\n  /**\n   * Constructor of chart base class.\n   *\n   * @param query\n   * @param data\n   * @param defaultOptions\n   * @param options\n   * @param responsiveOptions\n   * @constructor\n   */\n  function Base(query, data, defaultOptions, options, responsiveOptions) {\n    this.container = Chartist.querySelector(query);\n    this.data = data || {};\n    this.data.labels = this.data.labels || [];\n    this.data.series = this.data.series || [];\n    this.defaultOptions = defaultOptions;\n    this.options = options;\n    this.responsiveOptions = responsiveOptions;\n    this.eventEmitter = Chartist.EventEmitter();\n    this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');\n    this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');\n    this.resizeListener = function resizeListener(){\n      this.update();\n    }.bind(this);\n\n    if(this.container) {\n      // If chartist was already initialized in this container we are detaching all event listeners first\n      if(this.container.__chartist__) {\n        this.container.__chartist__.detach();\n      }\n\n      this.container.__chartist__ = this;\n    }\n\n    // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n    // the chart was created.\n    this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);\n  }\n\n  // Creating the chart base class\n  Chartist.Base = Chartist.Class.extend({\n    constructor: Base,\n    optionsProvider: undefined,\n    container: undefined,\n    svg: undefined,\n    eventEmitter: undefined,\n    createChart: function() {\n      throw new Error('Base chart type can\\'t be instantiated!');\n    },\n    update: update,\n    detach: detach,\n    on: on,\n    off: off,\n    version: Chartist.version,\n    supportsForeignObject: false\n  });\n\n}(this || global, Chartist));\n;/**\n * Chartist SVG module for simple SVG DOM abstraction\n *\n * @module Chartist.Svg\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var document = globalRoot.document;\n\n  /**\n   * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n   *\n   * @memberof Chartist.Svg\n   * @constructor\n   * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg\n   * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} className This class or class list will be added to the SVG element\n   * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  function Svg(name, attributes, className, parent, insertFirst) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if(name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(Chartist.namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if(name === 'svg') {\n        this.attr({\n          'xmlns:ct': Chartist.namespaces.ct\n        });\n      }\n    }\n\n    if(attributes) {\n      this.attr(attributes);\n    }\n\n    if(className) {\n      this.addClass(className);\n    }\n\n    if(parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   *\n   * @memberof Chartist.Svg\n   * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param {String} [ns] If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  function attr(attributes, ns) {\n    if(typeof attributes === 'string') {\n      if(ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(function(key) {\n      // If the attribute value is undefined we can skip this one\n      if(attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        var namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(Chartist.namespaces[namespacedAttribute[0]], key, attributes[key]);\n      } else {\n        this._node.setAttribute(key, attributes[key]);\n      }\n    }.bind(this));\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data\n   */\n  function elem(name, attributes, className, insertFirst) {\n    return new Chartist.Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  function parent() {\n    return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;\n  }\n\n  /**\n   * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element\n   */\n  function root() {\n    var node = this._node;\n    while(node.nodeName !== 'svg') {\n      node = node.parentNode;\n    }\n    return new Chartist.Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found\n   */\n  function querySelector(selector) {\n    var foundNode = this._node.querySelector(selector);\n    return foundNode ? new Chartist.Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found\n   */\n  function querySelectorAll(selector) {\n    var foundNodes = this._node.querySelectorAll(selector);\n    return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   *\n   * @memberof Chartist.Svg\n   * @returns {Node}\n   */\n  function getNode() {\n    return this._node;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child\n   * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element\n   */\n  function foreignObject(content, attributes, className, insertFirst) {\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if(typeof content === 'string') {\n      var container = document.createElement('div');\n      container.innerHTML = content;\n      content = container.firstChild;\n    }\n\n    // Adding namespace to content element\n    content.setAttribute('xmlns', Chartist.namespaces.xmlns);\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    var fnObj = this.elem('foreignObject', attributes, className, insertFirst);\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(content);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} t The text that should be added to the text element that is created\n   * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element\n   */\n  function text(t) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The same wrapper object that got emptied\n   */\n  function empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The parent wrapper object of the element that got removed\n   */\n  function remove() {\n    this._node.parentNode.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object\n   * @return {Chartist.Svg} The wrapper of the new element\n   */\n  function replace(newElement) {\n    this._node.parentNode.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child\n   * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child\n   * @return {Chartist.Svg} The wrapper of the appended object\n   */\n  function append(element, insertFirst) {\n    if(insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   *\n   * @memberof Chartist.Svg\n   * @return {Array} A list of classes or an empty array if there are no classes on the current element\n   */\n  function classes() {\n    return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function addClass(names) {\n    this._node.setAttribute('class',\n      this.classes(this._node)\n        .concat(names.trim().split(/\\s+/))\n        .filter(function(elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        }).join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeClass(names) {\n    var removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute('class', this.classes(this._node).filter(function(name) {\n      return removedClasses.indexOf(name) === -1;\n    }).join(' '));\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeAllClasses() {\n    this._node.setAttribute('class', '');\n\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Svg\n   * @return {Number} The elements height in pixels\n   */\n  function height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Core\n   * @return {Number} The elements width in pixels\n   */\n  function width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   *\n   * @memberof Chartist.Svg\n   * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return {Chartist.Svg} The current element where the animation was added\n   */\n  function animate(animations, guided, eventEmitter) {\n    if(guided === undefined) {\n      guided = true;\n    }\n\n    Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {\n\n      function createAnimate(animationDefinition, guided) {\n        var attributeProperties = {},\n          animate,\n          timeout,\n          easing;\n\n        // Check if an easing is specified in the definition object and delete it from the object as it will not\n        // be part of the animate element attributes.\n        if(animationDefinition.easing) {\n          // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n          easing = animationDefinition.easing instanceof Array ?\n            animationDefinition.easing :\n            Chartist.Svg.Easing[animationDefinition.easing];\n          delete animationDefinition.easing;\n        }\n\n        // If numeric dur or begin was provided we assume milli seconds\n        animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');\n        animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');\n\n        if(easing) {\n          animationDefinition.calcMode = 'spline';\n          animationDefinition.keySplines = easing.join(' ');\n          animationDefinition.keyTimes = '0;1';\n        }\n\n        // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n        if(guided) {\n          animationDefinition.fill = 'freeze';\n          // Animated property on our element should already be set to the animation from value in guided mode\n          attributeProperties[attribute] = animationDefinition.from;\n          this.attr(attributeProperties);\n\n          // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n          // which needs to be in ms aside\n          timeout = Chartist.quantity(animationDefinition.begin || 0).value;\n          animationDefinition.begin = 'indefinite';\n        }\n\n        animate = this.elem('animate', Chartist.extend({\n          attributeName: attribute\n        }, animationDefinition));\n\n        if(guided) {\n          // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n          setTimeout(function() {\n            // If beginElement fails we set the animated attribute to the end position and remove the animate element\n            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in\n            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n            try {\n              animate._node.beginElement();\n            } catch(err) {\n              // Set animated attribute to current animated value\n              attributeProperties[attribute] = animationDefinition.to;\n              this.attr(attributeProperties);\n              // Remove the animate element as it's no longer required\n              animate.remove();\n            }\n          }.bind(this), timeout);\n        }\n\n        if(eventEmitter) {\n          animate._node.addEventListener('beginEvent', function handleBeginEvent() {\n            eventEmitter.emit('animationBegin', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }.bind(this));\n        }\n\n        animate._node.addEventListener('endEvent', function handleEndEvent() {\n          if(eventEmitter) {\n            eventEmitter.emit('animationEnd', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }\n\n          if(guided) {\n            // Set animated attribute to current animated value\n            attributeProperties[attribute] = animationDefinition.to;\n            this.attr(attributeProperties);\n            // Remove the animate element as it's no longer required\n            animate.remove();\n          }\n        }.bind(this));\n      }\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if(animations[attribute] instanceof Array) {\n        animations[attribute].forEach(function(animationDefinition) {\n          createAnimate.bind(this)(animationDefinition, false);\n        }.bind(this));\n      } else {\n        createAnimate.bind(this)(animations[attribute], guided);\n      }\n\n    }.bind(this));\n\n    return this;\n  }\n\n  Chartist.Svg = Chartist.Class.extend({\n    constructor: Svg,\n    attr: attr,\n    elem: elem,\n    parent: parent,\n    root: root,\n    querySelector: querySelector,\n    querySelectorAll: querySelectorAll,\n    getNode: getNode,\n    foreignObject: foreignObject,\n    text: text,\n    empty: empty,\n    remove: remove,\n    replace: replace,\n    append: append,\n    classes: classes,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeAllClasses: removeAllClasses,\n    height: height,\n    width: width,\n    animate: animate\n  });\n\n  /**\n   * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} feature The SVG 1.1 feature that should be checked for support.\n   * @return {Boolean} True of false if the feature is supported or not\n   */\n  Chartist.Svg.isSupported = function(feature) {\n    return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');\n  };\n\n  /**\n   * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.\n   *\n   * @memberof Chartist.Svg\n   */\n  var easingCubicBeziers = {\n    easeInSine: [0.47, 0, 0.745, 0.715],\n    easeOutSine: [0.39, 0.575, 0.565, 1],\n    easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n    easeInQuad: [0.55, 0.085, 0.68, 0.53],\n    easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n    easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n    easeInCubic: [0.55, 0.055, 0.675, 0.19],\n    easeOutCubic: [0.215, 0.61, 0.355, 1],\n    easeInOutCubic: [0.645, 0.045, 0.355, 1],\n    easeInQuart: [0.895, 0.03, 0.685, 0.22],\n    easeOutQuart: [0.165, 0.84, 0.44, 1],\n    easeInOutQuart: [0.77, 0, 0.175, 1],\n    easeInQuint: [0.755, 0.05, 0.855, 0.06],\n    easeOutQuint: [0.23, 1, 0.32, 1],\n    easeInOutQuint: [0.86, 0, 0.07, 1],\n    easeInExpo: [0.95, 0.05, 0.795, 0.035],\n    easeOutExpo: [0.19, 1, 0.22, 1],\n    easeInOutExpo: [1, 0, 0, 1],\n    easeInCirc: [0.6, 0.04, 0.98, 0.335],\n    easeOutCirc: [0.075, 0.82, 0.165, 1],\n    easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n    easeInBack: [0.6, -0.28, 0.735, 0.045],\n    easeOutBack: [0.175, 0.885, 0.32, 1.275],\n    easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n  };\n\n  Chartist.Svg.Easing = easingCubicBeziers;\n\n  /**\n   * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.\n   * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.\n   *\n   * @memberof Chartist.Svg\n   * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   * @constructor\n   */\n  function SvgList(nodeList) {\n    var list = this;\n\n    this.svgElements = [];\n    for(var i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Chartist.Svg(nodeList[i]));\n    }\n\n    // Add delegation methods for Chartist.Svg\n    Object.keys(Chartist.Svg.prototype).filter(function(prototypeProperty) {\n      return ['constructor',\n          'parent',\n          'querySelector',\n          'querySelectorAll',\n          'replace',\n          'append',\n          'classes',\n          'height',\n          'width'].indexOf(prototypeProperty) === -1;\n    }).forEach(function(prototypeProperty) {\n      list[prototypeProperty] = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        list.svgElements.forEach(function(element) {\n          Chartist.Svg.prototype[prototypeProperty].apply(element, args);\n        });\n        return list;\n      };\n    });\n  }\n\n  Chartist.Svg.List = Chartist.Class.extend({\n    constructor: SvgList\n  });\n}(this || global, Chartist));\n;/**\n * Chartist SVG path module for SVG path description creation and modification.\n *\n * @module Chartist.Svg.Path\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  /**\n   * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var elementDescriptions = {\n    m: ['x', 'y'],\n    l: ['x', 'y'],\n    c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n    a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n  };\n\n  /**\n   * Default options for newly created SVG path objects.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var defaultOptions = {\n    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n    accuracy: 3\n  };\n\n  function element(command, params, pathElements, pos, relative, data) {\n    var pathElement = Chartist.extend({\n      command: relative ? command.toLowerCase() : command.toUpperCase()\n    }, params, data ? { data: data } : {} );\n\n    pathElements.splice(pos, 0, pathElement);\n  }\n\n  function forEachParam(pathElements, cb) {\n    pathElements.forEach(function(pathElement, pathElementIndex) {\n      elementDescriptions[pathElement.command.toLowerCase()].forEach(function(paramName, paramIndex) {\n        cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      });\n    });\n  }\n\n  /**\n   * Used to construct a new path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param {Object} options Options object that overrides the default objects. See default options for more details.\n   * @constructor\n   */\n  function SvgPath(close, options) {\n    this.pathElements = [];\n    this.pos = 0;\n    this.close = close;\n    this.options = Chartist.extend({}, defaultOptions, options);\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.\n   * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  function position(pos) {\n    if(pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} count Number of path elements that should be removed from the current position.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function remove(count) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the move element.\n   * @param {Number} y The y coordinate for the move element.\n   * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function move(x, y, relative, data) {\n    element('M', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the line element.\n   * @param {Number} y The y coordinate for the line element.\n   * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function line(x, y, relative, data) {\n    element('L', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x1 The x coordinate for the first control point of the bezier curve.\n   * @param {Number} y1 The y coordinate for the first control point of the bezier curve.\n   * @param {Number} x2 The x coordinate for the second control point of the bezier curve.\n   * @param {Number} y2 The y coordinate for the second control point of the bezier curve.\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function curve(x1, y1, x2, y2, x, y, relative, data) {\n    element('C', {\n      x1: +x1,\n      y1: +y1,\n      x2: +x2,\n      y2: +y2,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} rx The radius to be used for the x-axis of the arc.\n   * @param {Number} ry The radius to be used for the y-axis of the arc.\n   * @param {Number} xAr Defines the orientation of the arc\n   * @param {Number} lAf Large arc flag\n   * @param {Number} sf Sweep flag\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {\n    element('A', {\n      rx: +rx,\n      ry: +ry,\n      xAr: +xAr,\n      lAf: +lAf,\n      sf: +sf,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function parse(path) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce(function(result, element) {\n        if(element.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(element);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if(chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    var elements = chunks.map(function(chunk) {\n        var command = chunk.shift(),\n          description = elementDescriptions[command.toLowerCase()];\n\n        return Chartist.extend({\n          command: command\n        }, description.reduce(function(result, paramName, index) {\n          result[paramName] = +chunk[index];\n          return result;\n        }, {}));\n      });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    var spliceArgs = [this.pos, 0];\n    Array.prototype.push.apply(spliceArgs, elements);\n    Array.prototype.splice.apply(this.pathElements, spliceArgs);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   *\n   * @memberof Chartist.Svg.Path\n   * @return {String}\n   */\n  function stringify() {\n    var accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return this.pathElements.reduce(function(path, pathElement) {\n        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function(paramName) {\n          return this.options.accuracy ?\n            (Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier) :\n            pathElement[paramName];\n        }.bind(this));\n\n        return path + pathElement.command + params.join(',');\n      }.bind(this), '') + (this.close ? 'Z' : '');\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function scale(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function translate(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function transform(transformFnc) {\n    forEachParam(this.pathElements, function(pathElement, paramName, pathElementIndex, paramIndex, pathElements) {\n      var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      if(transformed || transformed === 0) {\n        pathElement[paramName] = transformed;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   * @return {Chartist.Svg.Path}\n   */\n  function clone(close) {\n    var c = new Chartist.Svg.Path(close || this.close);\n    c.pos = this.pos;\n    c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {\n      return Chartist.extend({}, pathElement);\n    });\n    c.options = Chartist.extend({}, this.options);\n    return c;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} command The command you'd like to use to split the path\n   * @return {Array<Chartist.Svg.Path>}\n   */\n  function splitByCommand(command) {\n    var split = [\n      new Chartist.Svg.Path()\n    ];\n\n    this.pathElements.forEach(function(pathElement) {\n      if(pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {\n        split.push(new Chartist.Svg.Path());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n\n  /**\n   * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.\n   * @param {boolean} close If the newly created path should be a closed path\n   * @param {Object} options Path options for the newly created path.\n   * @return {Chartist.Svg.Path}\n   */\n\n  function join(paths, close, options) {\n    var joinedPath = new Chartist.Svg.Path(close, options);\n    for(var i = 0; i < paths.length; i++) {\n      var path = paths[i];\n      for(var j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  Chartist.Svg.Path = Chartist.Class.extend({\n    constructor: SvgPath,\n    position: position,\n    remove: remove,\n    move: move,\n    line: line,\n    curve: curve,\n    arc: arc,\n    scale: scale,\n    translate: translate,\n    transform: transform,\n    parse: parse,\n    stringify: stringify,\n    clone: clone,\n    splitByCommand: splitByCommand\n  });\n\n  Chartist.Svg.Path.elementDescriptions = elementDescriptions;\n  Chartist.Svg.Path.join = join;\n}(this || global, Chartist));\n;/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  var axisUnits = {\n    x: {\n      pos: 'x',\n      len: 'width',\n      dir: 'horizontal',\n      rectStart: 'x1',\n      rectEnd: 'x2',\n      rectOffset: 'y2'\n    },\n    y: {\n      pos: 'y',\n      len: 'height',\n      dir: 'vertical',\n      rectStart: 'y2',\n      rectEnd: 'y1',\n      rectOffset: 'x1'\n    }\n  };\n\n  function Axis(units, chartRect, ticks, options) {\n    this.units = units;\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.chartRect = chartRect;\n    this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];\n    this.gridOffset = chartRect[units.rectOffset];\n    this.ticks = ticks;\n    this.options = options;\n  }\n\n  function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {\n    var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];\n    var projectedValues = this.ticks.map(this.projectValue.bind(this));\n    var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach(function(projectedValue, index) {\n      var labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      var labelLength;\n      if(projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(this.axisLength - projectedValue, 30);\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)\n      if(Chartist.isFalseyButZero(labelValues[index]) && labelValues[index] !== '') {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if(this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if(chartOptions.axisX.position === 'start') {\n          labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        } else {\n          labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0);\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if(chartOptions.axisY.position === 'start') {\n          labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;\n        } else {\n          labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if(axisOptions.showGrid) {\n        Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [\n          chartOptions.classNames.grid,\n          chartOptions.classNames[this.units.dir]\n        ], eventEmitter);\n      }\n\n      if(axisOptions.showLabel) {\n        Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [\n          chartOptions.classNames.label,\n          chartOptions.classNames[this.units.dir],\n          (axisOptions.position === 'start' ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames['end'])\n        ], useForeignObject, eventEmitter);\n      }\n    }.bind(this));\n  }\n\n  Chartist.Axis = Chartist.Class.extend({\n    constructor: Axis,\n    createGridAndLabels: createGridAndLabels,\n    projectValue: function(value, index, data) {\n      throw new Error('Base axis can\\'t be instantiated!');\n    }\n  });\n\n  Chartist.Axis.units = axisUnits;\n\n}(this || global, Chartist));\n;/**\n * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).\n *   scaleMinSpace: 20,\n *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.\n *   onlyInteger: true,\n *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.\n *   referenceValue: 5\n * };\n * ```\n *\n * @module Chartist.AutoScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function AutoScaleAxis(axisUnit, data, chartRect, options) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);\n    this.range = {\n      min: this.bounds.min,\n      max: this.bounds.max\n    };\n\n    Chartist.AutoScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.bounds.values,\n      options);\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;\n  }\n\n  Chartist.AutoScaleAxis = Chartist.Axis.extend({\n    constructor: AutoScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.\n *   divisor: 4,\n *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.\n *   ticks: [1, 10, 20, 30]\n * };\n * ```\n *\n * @module Chartist.FixedScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function FixedScaleAxis(axisUnit, data, chartRect, options) {\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.divisor = options.divisor || 1;\n    this.ticks = options.ticks || Chartist.times(this.divisor).map(function(value, index) {\n      return highLow.low + (highLow.high - highLow.low) / this.divisor * index;\n    }.bind(this));\n    this.ticks.sort(function(a, b) {\n      return a - b;\n    });\n    this.range = {\n      min: highLow.low,\n      max: highLow.high\n    };\n\n    Chartist.FixedScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.ticks,\n      options);\n\n    this.stepLength = this.axisLength / this.divisor;\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);\n  }\n\n  Chartist.FixedScaleAxis = Chartist.Axis.extend({\n    constructor: FixedScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.\n *   ticks: ['One', 'Two', 'Three'],\n *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.\n *   stretch: true\n * };\n * ```\n *\n * @module Chartist.StepAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function StepAxis(axisUnit, data, chartRect, options) {\n    Chartist.StepAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      options.ticks,\n      options);\n\n    var calc = Math.max(1, options.ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n  }\n\n  function projectValue(value, index) {\n    return this.stepLength * index;\n  }\n\n  Chartist.StepAxis = Chartist.Axis.extend({\n    constructor: StepAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.\n *\n * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.\n *\n * @module Chartist.Line\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Line\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the labels to the chart area\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the labels to the chart area\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // If the line should be drawn or not\n    showLine: true,\n    // If dots should be drawn or not\n    showPoint: true,\n    // If the line chart should draw an area\n    showArea: false,\n    // The base for the area chart that will be used to close the area shape (is normally 0)\n    areaBase: 0,\n    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n    lineSmooth: true,\n    // If the line chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n    fullWidth: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-line',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      line: 'ct-line',\n      point: 'ct-point',\n      area: 'ct-area',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data, options.reverseData, true);\n\n    // Create new svg object\n    this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart);\n    // Create groups for labels, grid and series\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    var axisX, axisY;\n\n    if(options.axisX.type === undefined) {\n      axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n        ticks: data.normalized.labels,\n        stretch: options.fullWidth\n      }));\n    } else {\n      axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n    }\n\n    if(options.axisY.type === undefined) {\n      axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n        high: Chartist.isNumeric(options.high) ? options.high : options.axisY.high,\n        low: Chartist.isNumeric(options.low) ? options.low : options.axisY.low\n      }));\n    } else {\n      axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n    }\n\n    axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      var seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      var pathCoordinates = [],\n        pathData = [];\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var p = {\n          x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized.series[seriesIndex]),\n          y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized.series[seriesIndex])\n        };\n        pathCoordinates.push(p.x, p.y);\n        pathData.push({\n          value: value,\n          valueIndex: valueIndex,\n          meta: Chartist.getMetaData(series, valueIndex)\n        });\n      }.bind(this));\n\n      var seriesOptions = {\n        lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),\n        showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),\n        showLine: Chartist.getSeriesOption(series, options, 'showLine'),\n        showArea: Chartist.getSeriesOption(series, options, 'showArea'),\n        areaBase: Chartist.getSeriesOption(series, options, 'areaBase')\n      };\n\n      var smoothing = typeof seriesOptions.lineSmooth === 'function' ?\n        seriesOptions.lineSmooth : (seriesOptions.lineSmooth ? Chartist.Interpolation.monotoneCubic() : Chartist.Interpolation.none());\n      // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n      // index, value and meta data\n      var path = smoothing(pathCoordinates, pathData);\n\n      // If we should show points we need to create them now to avoid secondary loop\n      // Points are drawn from the pathElements returned by the interpolation function\n      // Small offset for Firefox to render squares correctly\n      if (seriesOptions.showPoint) {\n\n        path.pathElements.forEach(function(pathElement) {\n          var point = seriesElement.elem('line', {\n            x1: pathElement.x,\n            y1: pathElement.y,\n            x2: pathElement.x + 0.01,\n            y2: pathElement.y\n          }, options.classNames.point).attr({\n            'ct:value': [pathElement.data.value.x, pathElement.data.value.y].filter(Chartist.isNumeric).join(','),\n            'ct:meta': Chartist.serialize(pathElement.data.meta)\n          });\n\n          this.eventEmitter.emit('draw', {\n            type: 'point',\n            value: pathElement.data.value,\n            index: pathElement.data.valueIndex,\n            meta: pathElement.data.meta,\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            group: seriesElement,\n            element: point,\n            x: pathElement.x,\n            y: pathElement.y\n          });\n        }.bind(this));\n      }\n\n      if(seriesOptions.showLine) {\n        var line = seriesElement.elem('path', {\n          d: path.stringify()\n        }, options.classNames.line, true);\n\n        this.eventEmitter.emit('draw', {\n          type: 'line',\n          values: data.normalized.series[seriesIndex],\n          path: path.clone(),\n          chartRect: chartRect,\n          index: seriesIndex,\n          series: series,\n          seriesIndex: seriesIndex,\n          seriesMeta: series.meta,\n          axisX: axisX,\n          axisY: axisY,\n          group: seriesElement,\n          element: line\n        });\n      }\n\n      // Area currently only works with axes that support a range!\n      if(seriesOptions.showArea && axisY.range) {\n        // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n        // the area is not drawn outside the chart area.\n        var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);\n\n        // We project the areaBase value into screen coordinates\n        var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n        // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n        path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {\n          // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n          return pathSegment.pathElements.length > 1;\n        }).map(function convertToArea(solidPathSegments) {\n          // Receiving the filtered solid path segments we can now convert those segments into fill areas\n          var firstElement = solidPathSegments.pathElements[0];\n          var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];\n\n          // Cloning the solid path segment with closing option and removing the first move command from the clone\n          // We then insert a new move that should start at the area base and draw a straight line up or down\n          // at the end of the path we add an additional straight line to the projected area base value\n          // As the closing option is set our path will be automatically closed\n          return solidPathSegments.clone(true)\n            .position(0)\n            .remove(1)\n            .move(firstElement.x, areaBaseProjected)\n            .line(firstElement.x, firstElement.y)\n            .position(solidPathSegments.pathElements.length + 1)\n            .line(lastElement.x, areaBaseProjected);\n\n        }).forEach(function createArea(areaPath) {\n          // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n          // and adding the created DOM elements to the correct series group\n          var area = seriesElement.elem('path', {\n            d: areaPath.stringify()\n          }, options.classNames.area, true);\n\n          // Emit an event for each area that was drawn\n          this.eventEmitter.emit('draw', {\n            type: 'area',\n            values: data.normalized.series[seriesIndex],\n            path: areaPath.clone(),\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            chartRect: chartRect,\n            index: seriesIndex,\n            group: seriesElement,\n            element: area\n          });\n        }.bind(this));\n      }\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: axisY.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new line chart.\n   *\n   * @memberof Chartist.Line\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple line chart\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * var options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new Chartist.Line('.ct-chart', data, options);\n   *\n   * @example\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   *\n   * @example\n   * // Create a line chart with responsive options\n   *\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * var responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new Chartist.Line('.ct-chart', data, null, responsiveOptions);\n   *\n   */\n  function Line(query, data, options, responsiveOptions) {\n    Chartist.Line.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating line chart type in Chartist namespace\n  Chartist.Line = Chartist.Base.extend({\n    constructor: Line,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.\n *\n * @module Chartist.Bar\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Bar\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum width in pixel of the scale steps\n      scaleMinSpace: 30,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n    referenceValue: 0,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // Specify the distance in pixel of bars in a group\n    seriesBarDistance: 15,\n    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n    stackBars: false,\n    // If set to 'overlap' this property will force the stacked bars to draw from the zero line.\n    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n    stackMode: 'accumulate',\n    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n    horizontalBars: false,\n    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n    distributeSeries: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If the bar chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-bar',\n      horizontalBars: 'ct-horizontal-bars',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      bar: 'ct-bar',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data;\n    var highLow;\n\n    if(options.distributeSeries) {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n      data.normalized.series = data.normalized.series.map(function(value) {\n        return [value];\n      });\n    } else {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Create new svg element\n    this.svg = Chartist.createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')\n    );\n\n    // Drawing groups in correct order\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    if(options.stackBars && data.normalized.series.length !== 0) {\n\n      // If stacked bars we need to calculate the high low from stacked values from each series\n      var serialSums = Chartist.serialMap(data.normalized.series, function serialSums() {\n        return Array.prototype.slice.call(arguments).map(function(value) {\n          return value;\n        }).reduce(function(prev, curr) {\n          return {\n            x: prev.x + (curr && curr.x) || 0,\n            y: prev.y + (curr && curr.y) || 0\n          };\n        }, {x: 0, y: 0});\n      });\n\n      highLow = Chartist.getHighLow([serialSums], options, options.horizontalBars ? 'x' : 'y');\n\n    } else {\n\n      highLow = Chartist.getHighLow(data.normalized.series, options, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Overrides of high / low from settings\n    highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);\n    highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n\n    var valueAxis,\n      labelAxisTicks,\n      labelAxis,\n      axisX,\n      axisY;\n\n    // We need to set step count based on some options combinations\n    if(options.distributeSeries && options.stackBars) {\n      // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should\n      // use only the first label for the step axis\n      labelAxisTicks = data.normalized.labels.slice(0, 1);\n    } else {\n      // If distributed series are enabled but stacked bars aren't, we should use the series labels\n      // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n      // as the bars are normalized\n      labelAxisTicks = data.normalized.labels;\n    }\n\n    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n    if(options.horizontalBars) {\n      if(options.axisX.type === undefined) {\n        valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n\n      if(options.axisY.type === undefined) {\n        labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n      }\n    } else {\n      if(options.axisX.type === undefined) {\n        labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n      }\n\n      if(options.axisY.type === undefined) {\n        valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n    }\n\n    // Projected 0 point\n    var zeroPoint = options.horizontalBars ? (chartRect.x1 + valueAxis.projectValue(0)) : (chartRect.y1 - valueAxis.projectValue(0));\n    // Used to track the screen coordinates of stacked bars\n    var stackedBarValues = [];\n\n    labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n      var biPol = seriesIndex - (data.raw.series.length - 1) / 2;\n      // Half of the period width between vertical grid lines used to position bars\n      var periodHalfLength;\n      // Current series SVG element\n      var seriesElement;\n\n      // We need to set periodHalfLength based on some options combinations\n      if(options.distributeSeries && !options.stackBars) {\n        // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n        // which is the series count and divide by 2\n        periodHalfLength = labelAxis.axisLength / data.normalized.series.length / 2;\n      } else if(options.distributeSeries && options.stackBars) {\n        // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n        // length by 2\n        periodHalfLength = labelAxis.axisLength / 2;\n      } else {\n        // On regular bar charts we should just use the series length\n        periodHalfLength = labelAxis.axisLength / data.normalized.series[seriesIndex].length / 2;\n      }\n\n      // Adding the series group to the series element\n      seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var projected,\n          bar,\n          previousStack,\n          labelAxisValueIndex;\n\n        // We need to set labelAxisValueIndex based on some options combinations\n        if(options.distributeSeries && !options.stackBars) {\n          // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n          // on the step axis for label positioning\n          labelAxisValueIndex = seriesIndex;\n        } else if(options.distributeSeries && options.stackBars) {\n          // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n          // 0 for projection on the label step axis\n          labelAxisValueIndex = 0;\n        } else {\n          // On regular bar charts we just use the value index to project on the label step axis\n          labelAxisValueIndex = valueIndex;\n        }\n\n        // We need to transform coordinates differently based on the chart layout\n        if(options.horizontalBars) {\n          projected = {\n            x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized.series[seriesIndex])\n          };\n        } else {\n          projected = {\n            x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized.series[seriesIndex])\n          }\n        }\n\n        // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n        // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n        // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n        // add any automated positioning.\n        if(labelAxis instanceof Chartist.StepAxis) {\n          // Offset to center bar between grid lines, but only if the step axis is not stretched\n          if(!labelAxis.options.stretch) {\n            projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);\n          }\n          // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n          projected[labelAxis.units.pos] += (options.stackBars || options.distributeSeries) ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);\n        }\n\n        // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n        previousStack = stackedBarValues[valueIndex] || zeroPoint;\n        stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n\n        // Skip if value is undefined\n        if(value === undefined) {\n          return;\n        }\n\n        var positions = {};\n        positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];\n        positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];\n\n        if(options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {\n          // Stack mode: accumulate (default)\n          // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n          // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n          // to be the original behaviour (accumulate)\n          positions[labelAxis.counterUnits.pos + '1'] = previousStack;\n          positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];\n        } else {\n          // Draw from the zero line normally\n          // This is also the same code for Stack mode: overlap\n          positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;\n          positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];\n        }\n\n        // Limit x and y so that they are within the chart rect\n        positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);\n        positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);\n        positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);\n        positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);\n\n        var metaData = Chartist.getMetaData(series, valueIndex);\n\n        // Create bar element\n        bar = seriesElement.elem('line', positions, options.classNames.bar).attr({\n          'ct:value': [value.x, value.y].filter(Chartist.isNumeric).join(','),\n          'ct:meta': Chartist.serialize(metaData)\n        });\n\n        this.eventEmitter.emit('draw', Chartist.extend({\n          type: 'bar',\n          value: value,\n          index: valueIndex,\n          meta: metaData,\n          series: series,\n          seriesIndex: seriesIndex,\n          axisX: axisX,\n          axisY: axisY,\n          chartRect: chartRect,\n          group: seriesElement,\n          element: bar\n        }, positions));\n      }.bind(this));\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: valueAxis.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   *\n   * @memberof Chartist.Bar\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple bar chart\n   * var data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new Chartist.Bar('.ct-chart', data);\n   *\n   * @example\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new Chartist.Bar('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   *\n   */\n  function Bar(query, data, options, responsiveOptions) {\n    Chartist.Bar.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating bar chart type in Chartist namespace\n  Chartist.Bar = Chartist.Base.extend({\n    constructor: Bar,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts\n *\n * @module Chartist.Pie\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Pie\n   */\n  var defaultOptions = {\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: 5,\n    // Override the class names that are used to generate the SVG structure of the chart\n    classNames: {\n      chartPie: 'ct-chart-pie',\n      chartDonut: 'ct-chart-donut',\n      series: 'ct-series',\n      slicePie: 'ct-slice-pie',\n      sliceDonut: 'ct-slice-donut',\n      sliceDonutSolid: 'ct-slice-donut-solid',\n      label: 'ct-label'\n    },\n    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n    startAngle: 0,\n    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n    total: undefined,\n    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n    donut: false,\n    // If specified the donut segments will be drawn as shapes instead of strokes.\n    donutSolid: false,\n    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n    donutWidth: 60,\n    // If a label should be shown or not\n    showLabel: true,\n    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n    labelOffset: 0,\n    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n    labelPosition: 'inside',\n    // An interpolation function for the label value\n    labelInterpolationFnc: Chartist.noop,\n    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n    labelDirection: 'neutral',\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If true empty values will be ignored to avoid drawing unncessary slices and labels\n    ignoreEmptyValues: false\n  };\n\n  /**\n   * Determines SVG anchor position based on direction and center parameter\n   *\n   * @param center\n   * @param label\n   * @param direction\n   * @return {string}\n   */\n  function determineAnchorPosition(center, label, direction) {\n    var toTheRight = label.x > center.x;\n\n    if(toTheRight && direction === 'explode' ||\n      !toTheRight && direction === 'implode') {\n      return 'start';\n    } else if(toTheRight && direction === 'implode' ||\n      !toTheRight && direction === 'explode') {\n      return 'end';\n    } else {\n      return 'middle';\n    }\n  }\n\n  /**\n   * Creates the pie chart\n   *\n   * @param options\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data);\n    var seriesGroups = [],\n      labelsGroup,\n      chartRect,\n      radius,\n      labelRadius,\n      totalDataSum,\n      startAngle = options.startAngle;\n\n    // Create SVG.js draw\n    this.svg = Chartist.createSvg(this.container, options.width, options.height,options.donut ? options.classNames.chartDonut : options.classNames.chartPie);\n    // Calculate charting rect\n    chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    // Get biggest circle radius possible within chartRect\n    radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n    // Calculate total of all series to get reference value or use total reference from optional options\n    totalDataSum = options.total || data.normalized.series.reduce(function(previousValue, currentValue) {\n      return previousValue + currentValue;\n    }, 0);\n\n    var donutWidth = Chartist.quantity(options.donutWidth);\n    if (donutWidth.unit === '%') {\n      donutWidth.value *= radius / 100;\n    }\n\n    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n    // Unfortunately this is not possible with the current SVG Spec\n    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n    radius -= options.donut && !options.donutSolid ? donutWidth.value / 2  : 0;\n\n    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n    // if regular pie chart it's half of the radius\n    if(options.labelPosition === 'outside' || options.donut && !options.donutSolid) {\n      labelRadius = radius;\n    } else if(options.labelPosition === 'center') {\n      // If labelPosition is center we start with 0 and will later wait for the labelOffset\n      labelRadius = 0;\n    } else if(options.donutSolid) {\n      labelRadius = radius - donutWidth.value / 2;\n    } else {\n      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n      // slice\n      labelRadius = radius / 2;\n    }\n    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n    labelRadius += options.labelOffset;\n\n    // Calculate end angle based on total sum and current data value and offset with padding\n    var center = {\n      x: chartRect.x1 + chartRect.width() / 2,\n      y: chartRect.y2 + chartRect.height() / 2\n    };\n\n    // Check if there is only one non-zero value in the series array.\n    var hasSingleValInSeries = data.raw.series.filter(function(val) {\n      return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;\n    }).length === 1;\n\n    // Creating the series groups\n    data.raw.series.forEach(function(series, index) {\n      seriesGroups[index] = this.svg.elem('g', null, null);\n    }.bind(this));\n    //if we need to show labels we create the label group now\n    if(options.showLabel) {\n      labelsGroup = this.svg.elem('g', null, null);\n    }\n\n    // Draw the series\n    // initialize series groups\n    data.raw.series.forEach(function(series, index) {\n      // If current value is zero and we are ignoring empty values then skip to next value\n      if (data.normalized.series[index] === 0 && options.ignoreEmptyValues) return;\n\n      // If the series is an object and contains a name or meta data we add a custom attribute\n      seriesGroups[index].attr({\n        'ct:series-name': series.name\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesGroups[index].addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(index))\n      ].join(' '));\n\n      // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n      var endAngle = (totalDataSum > 0 ? startAngle + data.normalized.series[index] / totalDataSum * 360 : 0);\n\n      // Use slight offset so there are no transparent hairline issues\n      var overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n\n      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n      // with Z and use 359.99 degrees\n      if(endAngle - overlappigStartAngle >= 359.99) {\n        endAngle = overlappigStartAngle + 359.99;\n      }\n\n      var start = Chartist.polarToCartesian(center.x, center.y, radius, overlappigStartAngle),\n        end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);\n\n      var innerStart,\n        innerEnd,\n        donutSolidRadius;\n\n      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n      var path = new Chartist.Svg.Path(!options.donut || options.donutSolid)\n        .move(end.x, end.y)\n        .arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y);\n\n      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n      if(!options.donut) {\n        path.line(center.x, center.y);\n      } else if (options.donutSolid) {\n        donutSolidRadius = radius - donutWidth.value;\n        innerStart = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n        innerEnd = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, endAngle);\n        path.line(innerStart.x, innerStart.y);\n        path.arc(donutSolidRadius, donutSolidRadius, 0, endAngle - startAngle  > 180, 1, innerEnd.x, innerEnd.y);\n      }\n\n      // Create the SVG path\n      // If this is a donut chart we add the donut class, otherwise just a regular slice\n      var pathClassName = options.classNames.slicePie;\n      if (options.donut) {\n        pathClassName = options.classNames.sliceDonut;\n        if (options.donutSolid) {\n          pathClassName = options.classNames.sliceDonutSolid;\n        }\n      }\n      var pathElement = seriesGroups[index].elem('path', {\n        d: path.stringify()\n      }, pathClassName);\n\n      // Adding the pie series value to the path\n      pathElement.attr({\n        'ct:value': data.normalized.series[index],\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // If this is a donut, we add the stroke-width as style attribute\n      if(options.donut && !options.donutSolid) {\n        pathElement._node.style.strokeWidth = donutWidth.value + 'px';\n      }\n\n      // Fire off draw event\n      this.eventEmitter.emit('draw', {\n        type: 'slice',\n        value: data.normalized.series[index],\n        totalDataSum: totalDataSum,\n        index: index,\n        meta: series.meta,\n        series: series,\n        group: seriesGroups[index],\n        element: pathElement,\n        path: path.clone(),\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n\n      // If we need to show labels we need to add the label for this slice now\n      if(options.showLabel) {\n        var labelPosition;\n        if(data.raw.series.length === 1) {\n          // If we have only 1 series, we can position the label in the center of the pie\n          labelPosition = {\n            x: center.x,\n            y: center.y\n          };\n        } else {\n          // Position at the labelRadius distance from center and between start and end angle\n          labelPosition = Chartist.polarToCartesian(\n            center.x,\n            center.y,\n            labelRadius,\n            startAngle + (endAngle - startAngle) / 2\n          );\n        }\n\n        var rawValue;\n        if(data.normalized.labels && !Chartist.isFalseyButZero(data.normalized.labels[index])) {\n          rawValue = data.normalized.labels[index];\n        } else {\n          rawValue = data.normalized.series[index];\n        }\n\n        var interpolatedValue = options.labelInterpolationFnc(rawValue, index);\n\n        if(interpolatedValue || interpolatedValue === 0) {\n          var labelElement = labelsGroup.elem('text', {\n            dx: labelPosition.x,\n            dy: labelPosition.y,\n            'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)\n          }, options.classNames.label).text('' + interpolatedValue);\n\n          // Fire off draw event\n          this.eventEmitter.emit('draw', {\n            type: 'label',\n            index: index,\n            group: labelsGroup,\n            element: labelElement,\n            text: '' + interpolatedValue,\n            x: labelPosition.x,\n            y: labelPosition.y\n          });\n        }\n      }\n\n      // Set next startAngle to current endAngle.\n      // (except for last slice)\n      startAngle = endAngle;\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      chartRect: chartRect,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   *\n   * @memberof Chartist.Pie\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object with a version and an update method to manually redraw the chart\n   *\n   * @example\n   * // Simple pie chart example with four series\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   *\n   * @example\n   * // Drawing a donut chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   *\n   * @example\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   *\n   * @example\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   *\n   * @example\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   */\n  function Pie(query, data, options, responsiveOptions) {\n    Chartist.Pie.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating pie chart type in Chartist namespace\n  Chartist.Pie = Chartist.Base.extend({\n    constructor: Pie,\n    createChart: createChart,\n    determineAnchorPosition: determineAnchorPosition\n  });\n\n}(this || global, Chartist));\n\nreturn Chartist;\n\n}));\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport {RIGHT_POSITION} from '@common/core/ui/overlay-panel/positions/right-position';\nimport {OverlayPanelRef} from '@common/core/ui/overlay-panel/overlay-panel-ref';\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\n\n@Component({\n    selector: 'info-popover',\n    templateUrl: './info-popover.component.html',\n    styleUrls: ['./info-popover.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class InfoPopoverComponent {\n    @ViewChild('infoIcon', { read: ElementRef }) infoButton: ElementRef<HTMLElement>;\n    @ViewChild('popoverContent') content: TemplateRef<any>;\n    private overlayRef: OverlayPanelRef;\n\n    constructor(\n        private overlay: OverlayPanel,\n        private viewContainerRef: ViewContainerRef,\n    ) {}\n\n    public openPopover() {\n        if (this.overlayRef) {\n            this.closePopover();\n        }\n        const position = {...RIGHT_POSITION};\n        position[0].offsetY = -15;\n        this.overlayRef = this.overlay.open(this.content, {\n            origin: this.infoButton,\n            position: RIGHT_POSITION,\n            hasBackdrop: false,\n            viewContainerRef: this.viewContainerRef,\n            panelClass: 'info-popover-panel'\n        });\n    }\n\n    public closePopover() {\n        if (this.overlayRef) {\n            this.overlayRef.close();\n            this.overlayRef = null;\n        }\n    }\n\n    public togglePopover() {\n        if (this.overlayRef) {\n            this.closePopover();\n        } else {\n            this.openPopover();\n        }\n    }\n\n}\n","<button type=\"button\" mat-icon-button>\n    <mat-icon #infoIcon svgIcon=\"info\" class=\"info-icon\" (click)=\"togglePopover()\" (mouseenter)=\"openPopover()\" (mouseleave)=\"closePopover()\"></mat-icon>\n</button>\n\n<ng-template #popoverContent>\n    <ng-content></ng-content>\n</ng-template>\n","module.exports = [\n  \"aaa\",\n  \"aarp\",\n  \"abarth\",\n  \"abb\",\n  \"abbott\",\n  \"abbvie\",\n  \"abc\",\n  \"able\",\n  \"abogado\",\n  \"abudhabi\",\n  \"ac\",\n  \"academy\",\n  \"accenture\",\n  \"accountant\",\n  \"accountants\",\n  \"aco\",\n  \"actor\",\n  \"ad\",\n  \"adac\",\n  \"ads\",\n  \"adult\",\n  \"ae\",\n  \"aeg\",\n  \"aero\",\n  \"aetna\",\n  \"af\",\n  \"afamilycompany\",\n  \"afl\",\n  \"africa\",\n  \"ag\",\n  \"agakhan\",\n  \"agency\",\n  \"ai\",\n  \"aig\",\n  \"aigo\",\n  \"airbus\",\n  \"airforce\",\n  \"airtel\",\n  \"akdn\",\n  \"al\",\n  \"alfaromeo\",\n  \"alibaba\",\n  \"alipay\",\n  \"allfinanz\",\n  \"allstate\",\n  \"ally\",\n  \"alsace\",\n  \"alstom\",\n  \"am\",\n  \"americanexpress\",\n  \"americanfamily\",\n  \"amex\",\n  \"amfam\",\n  \"amica\",\n  \"amsterdam\",\n  \"analytics\",\n  \"android\",\n  \"anquan\",\n  \"anz\",\n  \"ao\",\n  \"aol\",\n  \"apartments\",\n  \"app\",\n  \"apple\",\n  \"aq\",\n  \"aquarelle\",\n  \"ar\",\n  \"arab\",\n  \"aramco\",\n  \"archi\",\n  \"army\",\n  \"arpa\",\n  \"art\",\n  \"arte\",\n  \"as\",\n  \"asda\",\n  \"asia\",\n  \"associates\",\n  \"at\",\n  \"athleta\",\n  \"attorney\",\n  \"au\",\n  \"auction\",\n  \"audi\",\n  \"audible\",\n  \"audio\",\n  \"auspost\",\n  \"author\",\n  \"auto\",\n  \"autos\",\n  \"avianca\",\n  \"aw\",\n  \"aws\",\n  \"ax\",\n  \"axa\",\n  \"az\",\n  \"azure\",\n  \"ba\",\n  \"baby\",\n  \"baidu\",\n  \"banamex\",\n  \"bananarepublic\",\n  \"band\",\n  \"bank\",\n  \"bar\",\n  \"barcelona\",\n  \"barclaycard\",\n  \"barclays\",\n  \"barefoot\",\n  \"bargains\",\n  \"baseball\",\n  \"basketball\",\n  \"bauhaus\",\n  \"bayern\",\n  \"bb\",\n  \"bbc\",\n  \"bbt\",\n  \"bbva\",\n  \"bcg\",\n  \"bcn\",\n  \"bd\",\n  \"be\",\n  \"beats\",\n  \"beauty\",\n  \"beer\",\n  \"bentley\",\n  \"berlin\",\n  \"best\",\n  \"bestbuy\",\n  \"bet\",\n  \"bf\",\n  \"bg\",\n  \"bh\",\n  \"bharti\",\n  \"bi\",\n  \"bible\",\n  \"bid\",\n  \"bike\",\n  \"bing\",\n  \"bingo\",\n  \"bio\",\n  \"biz\",\n  \"bj\",\n  \"black\",\n  \"blackfriday\",\n  \"blockbuster\",\n  \"blog\",\n  \"bloomberg\",\n  \"blue\",\n  \"bm\",\n  \"bms\",\n  \"bmw\",\n  \"bn\",\n  \"bnpparibas\",\n  \"bo\",\n  \"boats\",\n  \"boehringer\",\n  \"bofa\",\n  \"bom\",\n  \"bond\",\n  \"boo\",\n  \"book\",\n  \"booking\",\n  \"bosch\",\n  \"bostik\",\n  \"boston\",\n  \"bot\",\n  \"boutique\",\n  \"box\",\n  \"br\",\n  \"bradesco\",\n  \"bridgestone\",\n  \"broadway\",\n  \"broker\",\n  \"brother\",\n  \"brussels\",\n  \"bs\",\n  \"bt\",\n  \"budapest\",\n  \"bugatti\",\n  \"build\",\n  \"builders\",\n  \"business\",\n  \"buy\",\n  \"buzz\",\n  \"bv\",\n  \"bw\",\n  \"by\",\n  \"bz\",\n  \"bzh\",\n  \"ca\",\n  \"cab\",\n  \"cafe\",\n  \"cal\",\n  \"call\",\n  \"calvinklein\",\n  \"cam\",\n  \"camera\",\n  \"camp\",\n  \"cancerresearch\",\n  \"canon\",\n  \"capetown\",\n  \"capital\",\n  \"capitalone\",\n  \"car\",\n  \"caravan\",\n  \"cards\",\n  \"care\",\n  \"career\",\n  \"careers\",\n  \"cars\",\n  \"casa\",\n  \"case\",\n  \"caseih\",\n  \"cash\",\n  \"casino\",\n  \"cat\",\n  \"catering\",\n  \"catholic\",\n  \"cba\",\n  \"cbn\",\n  \"cbre\",\n  \"cbs\",\n  \"cc\",\n  \"cd\",\n  \"ceb\",\n  \"center\",\n  \"ceo\",\n  \"cern\",\n  \"cf\",\n  \"cfa\",\n  \"cfd\",\n  \"cg\",\n  \"ch\",\n  \"chanel\",\n  \"channel\",\n  \"charity\",\n  \"chase\",\n  \"chat\",\n  \"cheap\",\n  \"chintai\",\n  \"christmas\",\n  \"chrome\",\n  \"church\",\n  \"ci\",\n  \"cipriani\",\n  \"circle\",\n  \"cisco\",\n  \"citadel\",\n  \"citi\",\n  \"citic\",\n  \"city\",\n  \"cityeats\",\n  \"ck\",\n  \"cl\",\n  \"claims\",\n  \"cleaning\",\n  \"click\",\n  \"clinic\",\n  \"clinique\",\n  \"clothing\",\n  \"cloud\",\n  \"club\",\n  \"clubmed\",\n  \"cm\",\n  \"cn\",\n  \"co\",\n  \"coach\",\n  \"codes\",\n  \"coffee\",\n  \"college\",\n  \"cologne\",\n  \"com\",\n  \"comcast\",\n  \"commbank\",\n  \"community\",\n  \"company\",\n  \"compare\",\n  \"computer\",\n  \"comsec\",\n  \"condos\",\n  \"construction\",\n  \"consulting\",\n  \"contact\",\n  \"contractors\",\n  \"cooking\",\n  \"cookingchannel\",\n  \"cool\",\n  \"coop\",\n  \"corsica\",\n  \"country\",\n  \"coupon\",\n  \"coupons\",\n  \"courses\",\n  \"cpa\",\n  \"cr\",\n  \"credit\",\n  \"creditcard\",\n  \"creditunion\",\n  \"cricket\",\n  \"crown\",\n  \"crs\",\n  \"cruise\",\n  \"cruises\",\n  \"csc\",\n  \"cu\",\n  \"cuisinella\",\n  \"cv\",\n  \"cw\",\n  \"cx\",\n  \"cy\",\n  \"cymru\",\n  \"cyou\",\n  \"cz\",\n  \"dabur\",\n  \"dad\",\n  \"dance\",\n  \"data\",\n  \"date\",\n  \"dating\",\n  \"datsun\",\n  \"day\",\n  \"dclk\",\n  \"dds\",\n  \"de\",\n  \"deal\",\n  \"dealer\",\n  \"deals\",\n  \"degree\",\n  \"delivery\",\n  \"dell\",\n  \"deloitte\",\n  \"delta\",\n  \"democrat\",\n  \"dental\",\n  \"dentist\",\n  \"desi\",\n  \"design\",\n  \"dev\",\n  \"dhl\",\n  \"diamonds\",\n  \"diet\",\n  \"digital\",\n  \"direct\",\n  \"directory\",\n  \"discount\",\n  \"discover\",\n  \"dish\",\n  \"diy\",\n  \"dj\",\n  \"dk\",\n  \"dm\",\n  \"dnp\",\n  \"do\",\n  \"docs\",\n  \"doctor\",\n  \"dog\",\n  \"domains\",\n  \"dot\",\n  \"download\",\n  \"drive\",\n  \"dtv\",\n  \"dubai\",\n  \"duck\",\n  \"dunlop\",\n  \"dupont\",\n  \"durban\",\n  \"dvag\",\n  \"dvr\",\n  \"dz\",\n  \"earth\",\n  \"eat\",\n  \"ec\",\n  \"eco\",\n  \"edeka\",\n  \"edu\",\n  \"education\",\n  \"ee\",\n  \"eg\",\n  \"email\",\n  \"emerck\",\n  \"energy\",\n  \"engineer\",\n  \"engineering\",\n  \"enterprises\",\n  \"epson\",\n  \"equipment\",\n  \"er\",\n  \"ericsson\",\n  \"erni\",\n  \"es\",\n  \"esq\",\n  \"estate\",\n  \"esurance\",\n  \"et\",\n  \"etisalat\",\n  \"eu\",\n  \"eurovision\",\n  \"eus\",\n  \"events\",\n  \"exchange\",\n  \"expert\",\n  \"exposed\",\n  \"express\",\n  \"extraspace\",\n  \"fage\",\n  \"fail\",\n  \"fairwinds\",\n  \"faith\",\n  \"family\",\n  \"fan\",\n  \"fans\",\n  \"farm\",\n  \"farmers\",\n  \"fashion\",\n  \"fast\",\n  \"fedex\",\n  \"feedback\",\n  \"ferrari\",\n  \"ferrero\",\n  \"fi\",\n  \"fiat\",\n  \"fidelity\",\n  \"fido\",\n  \"film\",\n  \"final\",\n  \"finance\",\n  \"financial\",\n  \"fire\",\n  \"firestone\",\n  \"firmdale\",\n  \"fish\",\n  \"fishing\",\n  \"fit\",\n  \"fitness\",\n  \"fj\",\n  \"fk\",\n  \"flickr\",\n  \"flights\",\n  \"flir\",\n  \"florist\",\n  \"flowers\",\n  \"fly\",\n  \"fm\",\n  \"fo\",\n  \"foo\",\n  \"food\",\n  \"foodnetwork\",\n  \"football\",\n  \"ford\",\n  \"forex\",\n  \"forsale\",\n  \"forum\",\n  \"foundation\",\n  \"fox\",\n  \"fr\",\n  \"free\",\n  \"fresenius\",\n  \"frl\",\n  \"frogans\",\n  \"frontdoor\",\n  \"frontier\",\n  \"ftr\",\n  \"fujitsu\",\n  \"fujixerox\",\n  \"fun\",\n  \"fund\",\n  \"furniture\",\n  \"futbol\",\n  \"fyi\",\n  \"ga\",\n  \"gal\",\n  \"gallery\",\n  \"gallo\",\n  \"gallup\",\n  \"game\",\n  \"games\",\n  \"gap\",\n  \"garden\",\n  \"gay\",\n  \"gb\",\n  \"gbiz\",\n  \"gd\",\n  \"gdn\",\n  \"ge\",\n  \"gea\",\n  \"gent\",\n  \"genting\",\n  \"george\",\n  \"gf\",\n  \"gg\",\n  \"ggee\",\n  \"gh\",\n  \"gi\",\n  \"gift\",\n  \"gifts\",\n  \"gives\",\n  \"giving\",\n  \"gl\",\n  \"glade\",\n  \"glass\",\n  \"gle\",\n  \"global\",\n  \"globo\",\n  \"gm\",\n  \"gmail\",\n  \"gmbh\",\n  \"gmo\",\n  \"gmx\",\n  \"gn\",\n  \"godaddy\",\n  \"gold\",\n  \"goldpoint\",\n  \"golf\",\n  \"goo\",\n  \"goodyear\",\n  \"goog\",\n  \"google\",\n  \"gop\",\n  \"got\",\n  \"gov\",\n  \"gp\",\n  \"gq\",\n  \"gr\",\n  \"grainger\",\n  \"graphics\",\n  \"gratis\",\n  \"green\",\n  \"gripe\",\n  \"grocery\",\n  \"group\",\n  \"gs\",\n  \"gt\",\n  \"gu\",\n  \"guardian\",\n  \"gucci\",\n  \"guge\",\n  \"guide\",\n  \"guitars\",\n  \"guru\",\n  \"gw\",\n  \"gy\",\n  \"hair\",\n  \"hamburg\",\n  \"hangout\",\n  \"haus\",\n  \"hbo\",\n  \"hdfc\",\n  \"hdfcbank\",\n  \"health\",\n  \"healthcare\",\n  \"help\",\n  \"helsinki\",\n  \"here\",\n  \"hermes\",\n  \"hgtv\",\n  \"hiphop\",\n  \"hisamitsu\",\n  \"hitachi\",\n  \"hiv\",\n  \"hk\",\n  \"hkt\",\n  \"hm\",\n  \"hn\",\n  \"hockey\",\n  \"holdings\",\n  \"holiday\",\n  \"homedepot\",\n  \"homegoods\",\n  \"homes\",\n  \"homesense\",\n  \"honda\",\n  \"horse\",\n  \"hospital\",\n  \"host\",\n  \"hosting\",\n  \"hot\",\n  \"hoteles\",\n  \"hotels\",\n  \"hotmail\",\n  \"house\",\n  \"how\",\n  \"hr\",\n  \"hsbc\",\n  \"ht\",\n  \"hu\",\n  \"hughes\",\n  \"hyatt\",\n  \"hyundai\",\n  \"ibm\",\n  \"icbc\",\n  \"ice\",\n  \"icu\",\n  \"id\",\n  \"ie\",\n  \"ieee\",\n  \"ifm\",\n  \"ikano\",\n  \"il\",\n  \"im\",\n  \"imamat\",\n  \"imdb\",\n  \"immo\",\n  \"immobilien\",\n  \"in\",\n  \"inc\",\n  \"industries\",\n  \"infiniti\",\n  \"info\",\n  \"ing\",\n  \"ink\",\n  \"institute\",\n  \"insurance\",\n  \"insure\",\n  \"int\",\n  \"intel\",\n  \"international\",\n  \"intuit\",\n  \"investments\",\n  \"io\",\n  \"ipiranga\",\n  \"iq\",\n  \"ir\",\n  \"irish\",\n  \"is\",\n  \"ismaili\",\n  \"ist\",\n  \"istanbul\",\n  \"it\",\n  \"itau\",\n  \"itv\",\n  \"iveco\",\n  \"jaguar\",\n  \"java\",\n  \"jcb\",\n  \"jcp\",\n  \"je\",\n  \"jeep\",\n  \"jetzt\",\n  \"jewelry\",\n  \"jio\",\n  \"jll\",\n  \"jm\",\n  \"jmp\",\n  \"jnj\",\n  \"jo\",\n  \"jobs\",\n  \"joburg\",\n  \"jot\",\n  \"joy\",\n  \"jp\",\n  \"jpmorgan\",\n  \"jprs\",\n  \"juegos\",\n  \"juniper\",\n  \"kaufen\",\n  \"kddi\",\n  \"ke\",\n  \"kerryhotels\",\n  \"kerrylogistics\",\n  \"kerryproperties\",\n  \"kfh\",\n  \"kg\",\n  \"kh\",\n  \"ki\",\n  \"kia\",\n  \"kim\",\n  \"kinder\",\n  \"kindle\",\n  \"kitchen\",\n  \"kiwi\",\n  \"km\",\n  \"kn\",\n  \"koeln\",\n  \"komatsu\",\n  \"kosher\",\n  \"kp\",\n  \"kpmg\",\n  \"kpn\",\n  \"kr\",\n  \"krd\",\n  \"kred\",\n  \"kuokgroup\",\n  \"kw\",\n  \"ky\",\n  \"kyoto\",\n  \"kz\",\n  \"la\",\n  \"lacaixa\",\n  \"lamborghini\",\n  \"lamer\",\n  \"lancaster\",\n  \"lancia\",\n  \"land\",\n  \"landrover\",\n  \"lanxess\",\n  \"lasalle\",\n  \"lat\",\n  \"latino\",\n  \"latrobe\",\n  \"law\",\n  \"lawyer\",\n  \"lb\",\n  \"lc\",\n  \"lds\",\n  \"lease\",\n  \"leclerc\",\n  \"lefrak\",\n  \"legal\",\n  \"lego\",\n  \"lexus\",\n  \"lgbt\",\n  \"li\",\n  \"liaison\",\n  \"lidl\",\n  \"life\",\n  \"lifeinsurance\",\n  \"lifestyle\",\n  \"lighting\",\n  \"like\",\n  \"lilly\",\n  \"limited\",\n  \"limo\",\n  \"lincoln\",\n  \"linde\",\n  \"link\",\n  \"lipsy\",\n  \"live\",\n  \"living\",\n  \"lixil\",\n  \"lk\",\n  \"llc\",\n  \"loan\",\n  \"loans\",\n  \"locker\",\n  \"locus\",\n  \"loft\",\n  \"lol\",\n  \"london\",\n  \"lotte\",\n  \"lotto\",\n  \"love\",\n  \"lpl\",\n  \"lplfinancial\",\n  \"lr\",\n  \"ls\",\n  \"lt\",\n  \"ltd\",\n  \"ltda\",\n  \"lu\",\n  \"lundbeck\",\n  \"lupin\",\n  \"luxe\",\n  \"luxury\",\n  \"lv\",\n  \"ly\",\n  \"ma\",\n  \"macys\",\n  \"madrid\",\n  \"maif\",\n  \"maison\",\n  \"makeup\",\n  \"man\",\n  \"management\",\n  \"mango\",\n  \"map\",\n  \"market\",\n  \"marketing\",\n  \"markets\",\n  \"marriott\",\n  \"marshalls\",\n  \"maserati\",\n  \"mattel\",\n  \"mba\",\n  \"mc\",\n  \"mckinsey\",\n  \"md\",\n  \"me\",\n  \"med\",\n  \"media\",\n  \"meet\",\n  \"melbourne\",\n  \"meme\",\n  \"memorial\",\n  \"men\",\n  \"menu\",\n  \"merckmsd\",\n  \"metlife\",\n  \"mg\",\n  \"mh\",\n  \"miami\",\n  \"microsoft\",\n  \"mil\",\n  \"mini\",\n  \"mint\",\n  \"mit\",\n  \"mitsubishi\",\n  \"mk\",\n  \"ml\",\n  \"mlb\",\n  \"mls\",\n  \"mm\",\n  \"mma\",\n  \"mn\",\n  \"mo\",\n  \"mobi\",\n  \"mobile\",\n  \"moda\",\n  \"moe\",\n  \"moi\",\n  \"mom\",\n  \"monash\",\n  \"money\",\n  \"monster\",\n  \"mormon\",\n  \"mortgage\",\n  \"moscow\",\n  \"moto\",\n  \"motorcycles\",\n  \"mov\",\n  \"movie\",\n  \"movistar\",\n  \"mp\",\n  \"mq\",\n  \"mr\",\n  \"ms\",\n  \"msd\",\n  \"mt\",\n  \"mtn\",\n  \"mtr\",\n  \"mu\",\n  \"museum\",\n  \"mutual\",\n  \"mv\",\n  \"mw\",\n  \"mx\",\n  \"my\",\n  \"mz\",\n  \"na\",\n  \"nab\",\n  \"nadex\",\n  \"nagoya\",\n  \"name\",\n  \"nationwide\",\n  \"natura\",\n  \"navy\",\n  \"nba\",\n  \"nc\",\n  \"ne\",\n  \"nec\",\n  \"net\",\n  \"netbank\",\n  \"netflix\",\n  \"network\",\n  \"neustar\",\n  \"new\",\n  \"newholland\",\n  \"news\",\n  \"next\",\n  \"nextdirect\",\n  \"nexus\",\n  \"nf\",\n  \"nfl\",\n  \"ng\",\n  \"ngo\",\n  \"nhk\",\n  \"ni\",\n  \"nico\",\n  \"nike\",\n  \"nikon\",\n  \"ninja\",\n  \"nissan\",\n  \"nissay\",\n  \"nl\",\n  \"no\",\n  \"nokia\",\n  \"northwesternmutual\",\n  \"norton\",\n  \"now\",\n  \"nowruz\",\n  \"nowtv\",\n  \"np\",\n  \"nr\",\n  \"nra\",\n  \"nrw\",\n  \"ntt\",\n  \"nu\",\n  \"nyc\",\n  \"nz\",\n  \"obi\",\n  \"observer\",\n  \"off\",\n  \"office\",\n  \"okinawa\",\n  \"olayan\",\n  \"olayangroup\",\n  \"oldnavy\",\n  \"ollo\",\n  \"om\",\n  \"omega\",\n  \"one\",\n  \"ong\",\n  \"onl\",\n  \"online\",\n  \"onyourside\",\n  \"ooo\",\n  \"open\",\n  \"oracle\",\n  \"orange\",\n  \"org\",\n  \"organic\",\n  \"origins\",\n  \"osaka\",\n  \"otsuka\",\n  \"ott\",\n  \"ovh\",\n  \"pa\",\n  \"page\",\n  \"panasonic\",\n  \"paris\",\n  \"pars\",\n  \"partners\",\n  \"parts\",\n  \"party\",\n  \"passagens\",\n  \"pay\",\n  \"pccw\",\n  \"pe\",\n  \"pet\",\n  \"pf\",\n  \"pfizer\",\n  \"pg\",\n  \"ph\",\n  \"pharmacy\",\n  \"phd\",\n  \"philips\",\n  \"phone\",\n  \"photo\",\n  \"photography\",\n  \"photos\",\n  \"physio\",\n  \"pics\",\n  \"pictet\",\n  \"pictures\",\n  \"pid\",\n  \"pin\",\n  \"ping\",\n  \"pink\",\n  \"pioneer\",\n  \"pizza\",\n  \"pk\",\n  \"pl\",\n  \"place\",\n  \"play\",\n  \"playstation\",\n  \"plumbing\",\n  \"plus\",\n  \"pm\",\n  \"pn\",\n  \"pnc\",\n  \"pohl\",\n  \"poker\",\n  \"politie\",\n  \"porn\",\n  \"post\",\n  \"pr\",\n  \"pramerica\",\n  \"praxi\",\n  \"press\",\n  \"prime\",\n  \"pro\",\n  \"prod\",\n  \"productions\",\n  \"prof\",\n  \"progressive\",\n  \"promo\",\n  \"properties\",\n  \"property\",\n  \"protection\",\n  \"pru\",\n  \"prudential\",\n  \"ps\",\n  \"pt\",\n  \"pub\",\n  \"pw\",\n  \"pwc\",\n  \"py\",\n  \"qa\",\n  \"qpon\",\n  \"quebec\",\n  \"quest\",\n  \"qvc\",\n  \"racing\",\n  \"radio\",\n  \"raid\",\n  \"re\",\n  \"read\",\n  \"realestate\",\n  \"realtor\",\n  \"realty\",\n  \"recipes\",\n  \"red\",\n  \"redstone\",\n  \"redumbrella\",\n  \"rehab\",\n  \"reise\",\n  \"reisen\",\n  \"reit\",\n  \"reliance\",\n  \"ren\",\n  \"rent\",\n  \"rentals\",\n  \"repair\",\n  \"report\",\n  \"republican\",\n  \"rest\",\n  \"restaurant\",\n  \"review\",\n  \"reviews\",\n  \"rexroth\",\n  \"rich\",\n  \"richardli\",\n  \"ricoh\",\n  \"rightathome\",\n  \"ril\",\n  \"rio\",\n  \"rip\",\n  \"rmit\",\n  \"ro\",\n  \"rocher\",\n  \"rocks\",\n  \"rodeo\",\n  \"rogers\",\n  \"room\",\n  \"rs\",\n  \"rsvp\",\n  \"ru\",\n  \"rugby\",\n  \"ruhr\",\n  \"run\",\n  \"rw\",\n  \"rwe\",\n  \"ryukyu\",\n  \"sa\",\n  \"saarland\",\n  \"safe\",\n  \"safety\",\n  \"sakura\",\n  \"sale\",\n  \"salon\",\n  \"samsclub\",\n  \"samsung\",\n  \"sandvik\",\n  \"sandvikcoromant\",\n  \"sanofi\",\n  \"sap\",\n  \"sarl\",\n  \"sas\",\n  \"save\",\n  \"saxo\",\n  \"sb\",\n  \"sbi\",\n  \"sbs\",\n  \"sc\",\n  \"sca\",\n  \"scb\",\n  \"schaeffler\",\n  \"schmidt\",\n  \"scholarships\",\n  \"school\",\n  \"schule\",\n  \"schwarz\",\n  \"science\",\n  \"scjohnson\",\n  \"scor\",\n  \"scot\",\n  \"sd\",\n  \"se\",\n  \"search\",\n  \"seat\",\n  \"secure\",\n  \"security\",\n  \"seek\",\n  \"select\",\n  \"sener\",\n  \"services\",\n  \"ses\",\n  \"seven\",\n  \"sew\",\n  \"sex\",\n  \"sexy\",\n  \"sfr\",\n  \"sg\",\n  \"sh\",\n  \"shangrila\",\n  \"sharp\",\n  \"shaw\",\n  \"shell\",\n  \"shia\",\n  \"shiksha\",\n  \"shoes\",\n  \"shop\",\n  \"shopping\",\n  \"shouji\",\n  \"show\",\n  \"showtime\",\n  \"shriram\",\n  \"si\",\n  \"silk\",\n  \"sina\",\n  \"singles\",\n  \"site\",\n  \"sj\",\n  \"sk\",\n  \"ski\",\n  \"skin\",\n  \"sky\",\n  \"skype\",\n  \"sl\",\n  \"sling\",\n  \"sm\",\n  \"smart\",\n  \"smile\",\n  \"sn\",\n  \"sncf\",\n  \"so\",\n  \"soccer\",\n  \"social\",\n  \"softbank\",\n  \"software\",\n  \"sohu\",\n  \"solar\",\n  \"solutions\",\n  \"song\",\n  \"sony\",\n  \"soy\",\n  \"space\",\n  \"sport\",\n  \"spot\",\n  \"spreadbetting\",\n  \"sr\",\n  \"srl\",\n  \"ss\",\n  \"st\",\n  \"stada\",\n  \"staples\",\n  \"star\",\n  \"statebank\",\n  \"statefarm\",\n  \"stc\",\n  \"stcgroup\",\n  \"stockholm\",\n  \"storage\",\n  \"store\",\n  \"stream\",\n  \"studio\",\n  \"study\",\n  \"style\",\n  \"su\",\n  \"sucks\",\n  \"supplies\",\n  \"supply\",\n  \"support\",\n  \"surf\",\n  \"surgery\",\n  \"suzuki\",\n  \"sv\",\n  \"swatch\",\n  \"swiftcover\",\n  \"swiss\",\n  \"sx\",\n  \"sy\",\n  \"sydney\",\n  \"symantec\",\n  \"systems\",\n  \"sz\",\n  \"tab\",\n  \"taipei\",\n  \"talk\",\n  \"taobao\",\n  \"target\",\n  \"tatamotors\",\n  \"tatar\",\n  \"tattoo\",\n  \"tax\",\n  \"taxi\",\n  \"tc\",\n  \"tci\",\n  \"td\",\n  \"tdk\",\n  \"team\",\n  \"tech\",\n  \"technology\",\n  \"tel\",\n  \"telefonica\",\n  \"temasek\",\n  \"tennis\",\n  \"teva\",\n  \"tf\",\n  \"tg\",\n  \"th\",\n  \"thd\",\n  \"theater\",\n  \"theatre\",\n  \"tiaa\",\n  \"tickets\",\n  \"tienda\",\n  \"tiffany\",\n  \"tips\",\n  \"tires\",\n  \"tirol\",\n  \"tj\",\n  \"tjmaxx\",\n  \"tjx\",\n  \"tk\",\n  \"tkmaxx\",\n  \"tl\",\n  \"tm\",\n  \"tmall\",\n  \"tn\",\n  \"to\",\n  \"today\",\n  \"tokyo\",\n  \"tools\",\n  \"top\",\n  \"toray\",\n  \"toshiba\",\n  \"total\",\n  \"tours\",\n  \"town\",\n  \"toyota\",\n  \"toys\",\n  \"tr\",\n  \"trade\",\n  \"trading\",\n  \"training\",\n  \"travel\",\n  \"travelchannel\",\n  \"travelers\",\n  \"travelersinsurance\",\n  \"trust\",\n  \"trv\",\n  \"tt\",\n  \"tube\",\n  \"tui\",\n  \"tunes\",\n  \"tushu\",\n  \"tv\",\n  \"tvs\",\n  \"tw\",\n  \"tz\",\n  \"ua\",\n  \"ubank\",\n  \"ubs\",\n  \"ug\",\n  \"uk\",\n  \"unicom\",\n  \"university\",\n  \"uno\",\n  \"uol\",\n  \"ups\",\n  \"us\",\n  \"uy\",\n  \"uz\",\n  \"va\",\n  \"vacations\",\n  \"vana\",\n  \"vanguard\",\n  \"vc\",\n  \"ve\",\n  \"vegas\",\n  \"ventures\",\n  \"verisign\",\n  \"versicherung\",\n  \"vet\",\n  \"vg\",\n  \"vi\",\n  \"viajes\",\n  \"video\",\n  \"vig\",\n  \"viking\",\n  \"villas\",\n  \"vin\",\n  \"vip\",\n  \"virgin\",\n  \"visa\",\n  \"vision\",\n  \"vistaprint\",\n  \"viva\",\n  \"vivo\",\n  \"vlaanderen\",\n  \"vn\",\n  \"vodka\",\n  \"volkswagen\",\n  \"volvo\",\n  \"vote\",\n  \"voting\",\n  \"voto\",\n  \"voyage\",\n  \"vu\",\n  \"vuelos\",\n  \"wales\",\n  \"walmart\",\n  \"walter\",\n  \"wang\",\n  \"wanggou\",\n  \"watch\",\n  \"watches\",\n  \"weather\",\n  \"weatherchannel\",\n  \"webcam\",\n  \"weber\",\n  \"website\",\n  \"wed\",\n  \"wedding\",\n  \"weibo\",\n  \"weir\",\n  \"wf\",\n  \"whoswho\",\n  \"wien\",\n  \"wiki\",\n  \"williamhill\",\n  \"win\",\n  \"windows\",\n  \"wine\",\n  \"winners\",\n  \"wme\",\n  \"wolterskluwer\",\n  \"woodside\",\n  \"work\",\n  \"works\",\n  \"world\",\n  \"wow\",\n  \"ws\",\n  \"wtc\",\n  \"wtf\",\n  \"xbox\",\n  \"xerox\",\n  \"xfinity\",\n  \"xihuan\",\n  \"xin\",\n  \"कॉम\", // xn--11b4c3d\n  \"セール\", // xn--1ck2e1b\n  \"佛山\", // xn--1qqw23a\n  \"ಭಾರತ\", // xn--2scrj9c\n  \"慈善\", // xn--30rr7y\n  \"集团\", // xn--3bst00m\n  \"在线\", // xn--3ds443g\n  \"한국\", // xn--3e0b707e\n  \"ଭାରତ\", // xn--3hcrj9c\n  \"大众汽车\", // xn--3oq18vl8pn36a\n  \"点看\", // xn--3pxu8k\n  \"คอม\", // xn--42c2d9a\n  \"ভাৰত\", // xn--45br5cyl\n  \"ভারত\", // xn--45brj9c\n  \"八卦\", // xn--45q11c\n  \"موقع\", // xn--4gbrim\n  \"বাংলা\", // xn--54b7fta0cc\n  \"公益\", // xn--55qw42g\n  \"公司\", // xn--55qx5d\n  \"香格里拉\", // xn--5su34j936bgsg\n  \"网站\", // xn--5tzm5g\n  \"移动\", // xn--6frz82g\n  \"我爱你\", // xn--6qq986b3xl\n  \"москва\", // xn--80adxhks\n  \"қаз\", // xn--80ao21a\n  \"католик\", // xn--80aqecdr1a\n  \"онлайн\", // xn--80asehdb\n  \"сайт\", // xn--80aswg\n  \"联通\", // xn--8y0a063a\n  \"срб\", // xn--90a3ac\n  \"бг\", // xn--90ae\n  \"бел\", // xn--90ais\n  \"קום\", // xn--9dbq2a\n  \"时尚\", // xn--9et52u\n  \"微博\", // xn--9krt00a\n  \"淡马锡\", // xn--b4w605ferd\n  \"ファッション\", // xn--bck1b9a5dre4c\n  \"орг\", // xn--c1avg\n  \"नेट\", // xn--c2br7g\n  \"ストア\", // xn--cck2b3b\n  \"삼성\", // xn--cg4bki\n  \"சிங்கப்பூர்\", // xn--clchc0ea0b2g2a9gcd\n  \"商标\", // xn--czr694b\n  \"商店\", // xn--czrs0t\n  \"商城\", // xn--czru2d\n  \"дети\", // xn--d1acj3b\n  \"мкд\", // xn--d1alf\n  \"ею\", // xn--e1a4c\n  \"ポイント\", // xn--eckvdtc9d\n  \"新闻\", // xn--efvy88h\n  \"工行\", // xn--estv75g\n  \"家電\", // xn--fct429k\n  \"كوم\", // xn--fhbei\n  \"中文网\", // xn--fiq228c5hs\n  \"中信\", // xn--fiq64b\n  \"中国\", // xn--fiqs8s\n  \"中國\", // xn--fiqz9s\n  \"娱乐\", // xn--fjq720a\n  \"谷歌\", // xn--flw351e\n  \"భారత్\", // xn--fpcrj9c3d\n  \"ලංකා\", // xn--fzc2c9e2c\n  \"電訊盈科\", // xn--fzys8d69uvgm\n  \"购物\", // xn--g2xx48c\n  \"クラウド\", // xn--gckr3f0f\n  \"ભારત\", // xn--gecrj9c\n  \"通販\", // xn--gk3at1e\n  \"भारतम्\", // xn--h2breg3eve\n  \"भारत\", // xn--h2brj9c\n  \"भारोत\", // xn--h2brj9c8c\n  \"网店\", // xn--hxt814e\n  \"संगठन\", // xn--i1b6b1a6a2e\n  \"餐厅\", // xn--imr513n\n  \"网络\", // xn--io0a7i\n  \"ком\", // xn--j1aef\n  \"укр\", // xn--j1amh\n  \"香港\", // xn--j6w193g\n  \"诺基亚\", // xn--jlq61u9w7b\n  \"食品\", // xn--jvr189m\n  \"飞利浦\", // xn--kcrx77d1x4a\n  \"台湾\", // xn--kprw13d\n  \"台灣\", // xn--kpry57d\n  \"手表\", // xn--kpu716f\n  \"手机\", // xn--kput3i\n  \"мон\", // xn--l1acc\n  \"الجزائر\", // xn--lgbbat1ad8j\n  \"عمان\", // xn--mgb9awbf\n  \"ارامكو\", // xn--mgba3a3ejt\n  \"ایران\", // xn--mgba3a4f16a\n  \"العليان\", // xn--mgba7c0bbn0a\n  \"اتصالات\", // xn--mgbaakc7dvf\n  \"امارات\", // xn--mgbaam7a8h\n  \"بازار\", // xn--mgbab2bd\n  \"موريتانيا\", // xn--mgbah1a3hjkrd\n  \"پاکستان\", // xn--mgbai9azgqp6j\n  \"الاردن\", // xn--mgbayh7gpa\n  \"بارت\", // xn--mgbbh1a\n  \"بھارت\", // xn--mgbbh1a71e\n  \"المغرب\", // xn--mgbc0a9azcg\n  \"ابوظبي\", // xn--mgbca7dzdo\n  \"السعودية\", // xn--mgberp4a5d4ar\n  \"ڀارت\", // xn--mgbgu82a\n  \"كاثوليك\", // xn--mgbi4ecexp\n  \"سودان\", // xn--mgbpl2fh\n  \"همراه\", // xn--mgbt3dhd\n  \"عراق\", // xn--mgbtx2b\n  \"مليسيا\", // xn--mgbx4cd0ab\n  \"澳門\", // xn--mix891f\n  \"닷컴\", // xn--mk1bu44c\n  \"政府\", // xn--mxtq1m\n  \"شبكة\", // xn--ngbc5azd\n  \"بيتك\", // xn--ngbe9e0a\n  \"عرب\", // xn--ngbrx\n  \"გე\", // xn--node\n  \"机构\", // xn--nqv7f\n  \"组织机构\", // xn--nqv7fs00ema\n  \"健康\", // xn--nyqy26a\n  \"ไทย\", // xn--o3cw4h\n  \"سورية\", // xn--ogbpf8fl\n  \"招聘\", // xn--otu796d\n  \"рус\", // xn--p1acf\n  \"рф\", // xn--p1ai\n  \"珠宝\", // xn--pbt977c\n  \"تونس\", // xn--pgbs0dh\n  \"大拿\", // xn--pssy2u\n  \"みんな\", // xn--q9jyb4c\n  \"グーグル\", // xn--qcka1pmc\n  \"ευ\", // xn--qxa6a\n  \"ελ\", // xn--qxam\n  \"世界\", // xn--rhqv96g\n  \"書籍\", // xn--rovu88b\n  \"ഭാരതം\", // xn--rvc1e0am3e\n  \"ਭਾਰਤ\", // xn--s9brj9c\n  \"网址\", // xn--ses554g\n  \"닷넷\", // xn--t60b56a\n  \"コム\", // xn--tckwe\n  \"天主教\", // xn--tiq49xqyj\n  \"游戏\", // xn--unup4y\n  \"vermögensberater\", // xn--vermgensberater-ctb\n  \"vermögensberatung\", // xn--vermgensberatung-pwb\n  \"企业\", // xn--vhquv\n  \"信息\", // xn--vuq861b\n  \"嘉里大酒店\", // xn--w4r85el8fhu5dnra\n  \"嘉里\", // xn--w4rs40l\n  \"مصر\", // xn--wgbh1c\n  \"قطر\", // xn--wgbl6a\n  \"广东\", // xn--xhq521b\n  \"இலங்கை\", // xn--xkc2al3hye2a\n  \"இந்தியா\", // xn--xkc2dl3a5ee0h\n  \"հայ\", // xn--y9a3aq\n  \"新加坡\", // xn--yfro4i67o\n  \"فلسطين\", // xn--ygbi2ammx\n  \"政务\", // xn--zfr164b\n  \"xxx\",\n  \"xyz\",\n  \"yachts\",\n  \"yahoo\",\n  \"yamaxun\",\n  \"yandex\",\n  \"ye\",\n  \"yodobashi\",\n  \"yoga\",\n  \"yokohama\",\n  \"you\",\n  \"youtube\",\n  \"yt\",\n  \"yun\",\n  \"za\",\n  \"zappos\",\n  \"zara\",\n  \"zero\",\n  \"zip\",\n  \"zm\",\n  \"zone\",\n  \"zuerich\",\n  \"zw\"\n];\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/ink-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r63 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r63.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r63 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r63.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r71 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r71); const tab_r63 = ctx.$implicit; const i_r64 = ctx.index; const ctx_r70 = ɵngcc0.ɵɵnextContext(); const _r59 = ɵngcc0.ɵɵreference(1); return ctx_r70._handleClick(tab_r63, _r59, i_r64); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r63 = ctx.$implicit;\n    const i_r64 = ctx.index;\n    const ctx_r60 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r60.selectedIndex == i_r64);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r60._getTabLabelId(i_r64))(\"disabled\", tab_r63.disabled)(\"matRippleDisabled\", tab_r63.disabled || ctx_r60.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r60._getTabIndex(tab_r63, i_r64))(\"aria-posinset\", i_r64 + 1)(\"aria-setsize\", ctx_r60._tabs.length)(\"aria-controls\", ctx_r60._getTabContentId(i_r64))(\"aria-selected\", ctx_r60.selectedIndex == i_r64)(\"aria-label\", tab_r63.ariaLabel || null)(\"aria-labelledby\", !tab_r63.ariaLabel && tab_r63.ariaLabelledby ? tab_r63.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r63.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r63.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r75 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r75); const ctx_r74 = ɵngcc0.ɵɵnextContext(); return ctx_r74._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r75); const ctx_r76 = ɵngcc0.ɵɵnextContext(); return ctx_r76._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r72 = ctx.$implicit;\n    const i_r73 = ctx.index;\n    const ctx_r62 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r62.selectedIndex == i_r73);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r62._getTabContentId(i_r73))(\"content\", tab_r72.content)(\"position\", tab_r72.position)(\"origin\", tab_r72.origin)(\"animationDuration\", ctx_r62.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r62._getTabLabelId(i_r73));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nfunction _MatInkBarPositioner() { }\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._inkBarPositioner;\n    /** @type {?} */\n    MatInkBar.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabContent.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?=} _closestTabGroup\n     */\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * Content for the tab label given by `<ng-template mat-tab-label>`.\n     * @return {?}\n     */\n    get templateLabel() { return this._templateLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set templateLabel(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatTabContent, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTab.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._templateLabel;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     * @type {?}\n     */\n    MatTab.prototype._explicitContent;\n    /**\n     * Template inside the MatTab view that contains an `<ng-content>`.\n     * @type {?}\n     */\n    MatTab.prototype._implicitContent;\n    /**\n     * Plain text label for the tab, used when there is no template label.\n     * @type {?}\n     */\n    MatTab.prototype.textLabel;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabelledby;\n    /**\n     * Portal that will be the hosted content of the tab\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._contentPortal;\n    /**\n     * Emits whenever the internal state of the tab changes.\n     * @type {?}\n     */\n    MatTab.prototype._stateChanges;\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     * @type {?}\n     */\n    MatTab.prototype.position;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     * @type {?}\n     */\n    MatTab.prototype.origin;\n    /**\n     * Whether the tab is currently active.\n     * @type {?}\n     */\n    MatTab.prototype.isActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._viewContainerRef;\n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatTab.prototype._closestTabGroup;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     * @param {?=} _document\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatTabBody))), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatTabBody))]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Subscription to events for when the tab body begins centering.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._centeringSub;\n    /**\n     * Subscription to events for when the tab body finishes leaving from center position.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._leavingSub;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._host;\n}\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _computePositionFromOrigin(origin) {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Current position of the tab-body in the tab-group. Zero means that the tab is visible.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._positionIndex;\n    /**\n     * Subscription to the directionality change observable.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dirChangeSubscription;\n    /**\n     * Tab body position state. Used by the animation trigger for the current state.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._position;\n    /**\n     * Emits when an animation on the tab is complete.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._translateTabComplete;\n    /**\n     * Event emitted when the tab begins to animate towards the center as the active tab.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._beforeCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._afterLeavingCenter;\n    /**\n     * Event emitted when the tab completes its animation towards the center.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentered;\n    /**\n     * The portal host inside of this container into which the tab body content will be loaded.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._portalHost;\n    /**\n     * The tab body content to display.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._content;\n    /**\n     * Position that will be used when the tab is immediately becoming visible after creation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.origin;\n    /**\n     * Duration for the tab's animation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.animationDuration;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dir;\n}\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabBody.prototype._portalHost;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the default options for the tabs module.\n * @record\n */\nfunction MatTabsConfig() { }\nif (false) {\n    /**\n     * Duration for the tab animation. Must be a valid CSS value (e.g. 600ms).\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.disablePagination;\n    /**\n     * Whether the ink bar should fit its width to the size of the tab label content.\n     * This only applies to the MDC-based tabs.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.fitInkBarToContent;\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\nif (false) {\n    /**\n     * Index of the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.index;\n    /**\n     * Reference to the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.tab;\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTabGroupMixinBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * @record\n */\nfunction MatTabGroupBaseHeader() { }\nif (false) {\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype._alignInkBarToSelectedTab;\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype.focusIndex;\n}\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * All of the tabs that belong to the group.\n         */\n        this._tabs = new QueryList();\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Listens to changes in all of the tabs.\n     * @private\n     * @return {?}\n     */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((/**\n         * @param {?} tabs\n         * @return {?}\n         */\n        (tabs) => {\n            this._tabs.reset(tabs.filter((/**\n             * @param {?} tab\n             * @return {?}\n             */\n            tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            })));\n            this._tabs.notifyOnChanges();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_dynamicHeight;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_animationDuration;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_disableRipple;\n    /**\n     * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n     * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._allTabs;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabBodyWrapper;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabHeader;\n    /**\n     * All of the tabs that belong to the group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._tabs;\n    /**\n     * The tab index that should be selected after the content has been checked.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._indexToSelect;\n    /**\n     * Snapshot of the height of the tab body wrapper before another tab is activated.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabBodyWrapperHeight;\n    /**\n     * Subscription to tabs being added/removed.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabsSubscription;\n    /**\n     * Subscription to changes in the tab labels.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabLabelSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._dynamicHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._selectedIndex;\n    /**\n     * Position of the tab header.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.headerPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._backgroundColor;\n    /**\n     * Output to enable support for two-way binding on `[(selectedIndex)]`\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedIndexChange;\n    /**\n     * Event emitted when focus has changed within a tab group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.focusChange;\n    /**\n     * Event emitted when the body animation has completed\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.animationDone;\n    /**\n     * Event emitted when the tab selection has changed.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedTabChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    _MatTabGroupBase.prototype._changeDetectorRef;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._animationMode;\n}\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabGroup.prototype._allTabs;\n    /** @type {?} */\n    MatTabGroup.prototype._tabBodyWrapper;\n    /** @type {?} */\n    MatTabGroup.prototype._tabHeader;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label-wrapper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabLabelWrapper.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTabLabelWrapper.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/paginated-tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            /** @type {?} */\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @param {?=} mouseEvent\n     * @return {?}\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginatedTabHeader.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._items;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._previousPaginator;\n    /**\n     * The distance in pixels that the tab labels should be translated to the left.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistance;\n    /**\n     * Whether the header should scroll to the selected index after the view has been checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndexChanged;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._destroyed;\n    /**\n     * Whether the controls for pagination should be displayed\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._showPaginationControls;\n    /**\n     * Whether the tab list can be scrolled more towards the end of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollAfter;\n    /**\n     * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollBefore;\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._tabLabelCount;\n    /**\n     * Whether the scroll distance has changed and should be applied after the view is checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistanceChanged;\n    /**\n     * Used to manage focus between the tabs.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._keyManager;\n    /**\n     * Cached text content of the header.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._currentTextContent;\n    /**\n     * Stream that will stop the automated scrolling.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._stopScrolling;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndex;\n    /**\n     * Event emitted when the option is selected.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.selectFocusedIndex;\n    /**\n     * Event emitted when a label is focused.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.indexFocused;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._ngZone;\n    /**\n     * @deprecated \\@breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._platform;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._animationMode;\n    /**\n     * Called when the user has selected an item via the keyboard.\n     * @abstract\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._itemSelected = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabHeaderBase.prototype._disableRipple;\n}\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabHeader.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabHeader.prototype._items;\n    /** @type {?} */\n    MatTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabHeader.prototype._previousPaginator;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/tab-nav-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Query list of all tab links of the tab navigation.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._backgroundColor;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._disableRipple;\n    /**\n     * Theme color of the nav bar.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype.color;\n}\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 6, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(10);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatTabLink)), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabNav.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabNav.prototype._items;\n    /** @type {?} */\n    MatTabNav.prototype._inkBar;\n    /** @type {?} */\n    MatTabNav.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabNav.prototype._tabList;\n    /** @type {?} */\n    MatTabNav.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabNav.prototype._previousPaginator;\n}\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disabled;\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the tab link is active or not.\n     * @type {?}\n     * @protected\n     */\n    _MatTabLinkBase.prototype._isActive;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the tab link ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatTabLinkBase.prototype.rippleConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._tabNavBar;\n    /** @type {?} */\n    _MatTabLinkBase.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._focusMonitor;\n}\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the RippleRenderer for the tab-link.\n     * @type {?}\n     * @private\n     */\n    MatTabLink.prototype._tabLinkRipple;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabLink,\n        MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };\n\n//# sourceMappingURL=tabs.js.map","import {IBarChartOptions, IChartistData, ILineChartOptions, IPieChartOptions} from 'chartist';\r\n\r\nexport enum ChartType {\r\n    LINE = 'line',\r\n    PIE = 'pie',\r\n    BAR = 'bar',\r\n}\r\n\r\ninterface BaseChartConfig {\r\n    selector?: string|HTMLElement;\r\n    type: ChartType;\r\n    labels: string[];\r\n    legend?: boolean;\r\n    tooltip?: string;\r\n    data: number[][]|number[];\r\n}\r\n\r\nexport interface BarChartConfig extends BaseChartConfig {\r\n    type: ChartType.BAR;\r\n    options?: IBarChartOptions;\r\n    data: number[][];\r\n}\r\n\r\nexport interface LineChartConfig extends BaseChartConfig {\r\n    type: ChartType.LINE;\r\n    options?: ILineChartOptions;\r\n    data: number[][];\r\n}\r\n\r\nexport interface PieChartConfig extends BaseChartConfig {\r\n    type: ChartType.PIE;\r\n    options?: IPieChartOptions;\r\n    data: number[];\r\n}\r\n\r\nexport abstract class BaseChart<T extends BaseChartConfig> {\r\n    constructor(protected config: T) {\r\n        setTimeout(() => this.generate());\r\n    }\r\n\r\n    protected abstract generate();\r\n\r\n    protected abstract transformChartData(): IChartistData;\r\n\r\n    protected getMaxValue(): number {\r\n        if ( ! this.config.data) {\r\n            return 0;\r\n        }\r\n        if (Array.isArray(this.config.data[0])) {\r\n            return Math.max(...this.config.data[0] as number[], ...(this.config.data[1] || []) as number[]);\r\n        } else {\r\n            return Math.max(...this.config.data as number[]);\r\n        }\r\n    }\r\n\r\n    protected generateDataWithTooltip(data: number[]): any {\r\n        if (this.config.tooltip) {\r\n            return data.map(value => {\r\n                return {value, meta: this.config.tooltip};\r\n            });\r\n        } else {\r\n            return data;\r\n        }\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.getMaxValue() <= 0;\r\n    }\r\n\r\n    public abstract destroy();\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {PaginatedBackendResponse} from '@common/core/types/pagination/paginated-backend-response';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {TrackingPixel} from './tracking-pixel';\n\nexport const PIXEL_BASE_URI = 'tracking-pixel';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TrackingPixelService {\n    constructor(private http: AppHttpClient) {\n    }\n\n    public index(params: { userId?: number, query?: string } = {}): PaginatedBackendResponse<TrackingPixel> {\n        return this.http.get(`${PIXEL_BASE_URI}`, params);\n    }\n\n    public create(params: Partial<TrackingPixel>): BackendResponse<{ pixel: TrackingPixel }> {\n        return this.http.post(PIXEL_BASE_URI, params);\n    }\n\n    public update(id, params: Partial<TrackingPixel>): BackendResponse<{ pixel: TrackingPixel }> {\n        return this.http.put(`${PIXEL_BASE_URI}/${id}`, params);\n    }\n\n    public delete(ids: number[]): BackendResponse<void> {\n        return this.http.delete(`${PIXEL_BASE_URI}/${ids}`);\n    }\n}\n","export interface TrackingPixelType {\r\n    name: string;\r\n    type: 'number'|'text';\r\n    pattern?: string;\r\n}\r\n\r\nexport const TrackingPixelTypes: TrackingPixelType[] = [\r\n    {\r\n        name: 'facebook',\r\n        type: 'number',\r\n    },\r\n    {\r\n        name: 'twitter',\r\n        type: 'number',\r\n    },\r\n    {\r\n        name: 'google-tag-manager',\r\n        type: 'text',\r\n        pattern: 'GTM-[a-zA-Z0-9]+'\r\n    },\r\n    {\r\n        name: 'google-analytics',\r\n        type: 'text',\r\n    },\r\n    {\r\n        name: 'adwords',\r\n        type: 'number',\r\n    },\r\n    {\r\n        name: 'bing',\r\n        type: 'number',\r\n    },\r\n    {\r\n        name: 'pinterest',\r\n        type: 'number',\r\n    },\r\n    {\r\n        name: 'linkedin',\r\n        type: 'text',\r\n    },\r\n    {\r\n        name: 'quora',\r\n        type: 'text',\r\n        pattern: '[a-z0-9]+',\r\n    },\r\n    {\r\n        name: 'adroll',\r\n        type: 'text',\r\n    },\r\n    {\r\n        name: 'nexus-segment',\r\n        type: 'text',\r\n    },\r\n    {\r\n        name: 'custom',\r\n        type: 'text',\r\n    },\r\n];\r\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title>\n        <span *ngIf=\"data.pixel; else creating\" trans>Update Pixel</span>\n        <ng-template #creating><span trans>Create New Pixel</span></ng-template>\n    </h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form (ngSubmit)=\"confirm()\" [formGroup]=\"form\" ngNativeValidate>\n    <mat-dialog-content class=\"many-inputs\" *ngIf=\"errors$ | async as errors\">\n        <div class=\"input-container\">\n            <label for=\"name\" trans>Name</label>\n            <input type=\"text\" id=\"name\" formControlName=\"name\" required>\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n        <div class=\"input-container\">\n            <label for=\"type\" trans>Type</label>\n            <select id=\"type\" formControlName=\"type\" class=\"type-select\" required>\n                <option [value]=\"type.name\" *ngFor=\"let type of types\">{{viewTypeName(type.name)}}</option>\n            </select>\n        </div>\n        <ng-container *ngIf=\"selectedType$ | async as selectedType\">\n            <div class=\"input-container\" *ngIf=\"selectedType.name !== 'custom'\">\n                <label for=\"pixel_id\" trans>Pixel ID</label>\n                <input id=\"pixel_id\" [type]=\"selectedType.type\" formControlName=\"pixel_id\" [pattern]=\"selectedType.pattern\" required>\n                <div class=\"error\" *ngIf=\"errors.pixel_id\">{{errors.pixel_id}}</div>\n            </div>\n            \n            <div class=\"many-inputs\" *ngIf=\"selectedType.name === 'custom'\">\n                <div class=\"input-container\">\n                    <label for=\"head-code\" trans>Custom Code for Page Head</label>\n                    <textarea name=\"head-code\" id=\"head-code\" rows=\"10\" formControlName=\"head_code\"></textarea>\n                </div>\n                <div class=\"input-container\">\n                    <label for=\"body-code\" trans>Custom Code for Page Body</label>\n                    <textarea name=\"body-code\" id=\"body-code\" rows=\"10\" formControlName=\"body_code\"></textarea>\n                </div>\n            </div>\n        </ng-container>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\" trans>\n            <span *ngIf=\"data.pixel\">Update</span>\n            <span *ngIf=\"!data.pixel\">Create</span>\n        </button>\n    </mat-dialog-actions>\n</form>","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {TrackingPixel} from '../tracking-pixel';\nimport {TrackingPixelService} from '../tracking-pixel.service';\nimport {Messages} from '../../../messages.enum';\nimport {finalize} from 'rxjs/operators';\nimport {BehaviorSubject} from 'rxjs';\nimport {TrackingPixelType, TrackingPixelTypes} from '../tracking-pixel-types';\nimport {ValueLists} from '@common/core/services/value-lists.service';\n\ninterface CrupdateTrackingPixelModalData {\n    pixel?: TrackingPixel;\n}\n\n@Component({\n    selector: 'crupdate-tracking-pixel-modal',\n    templateUrl: './crupdate-tracking-pixel-modal.component.html',\n    styleUrls: ['./crupdate-tracking-pixel-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateTrackingPixelModalComponent implements OnInit {\n    public types = TrackingPixelTypes;\n    public loading$ = new BehaviorSubject(false);\n    public errors$ = new BehaviorSubject<Partial<TrackingPixel>>({});\n    public selectedType$ = new BehaviorSubject<TrackingPixelType>(this.types[0]);\n    public form = this.fb.group({\n        name: [''],\n        type: [this.types[0].name],\n        head_code: [''],\n        body_code: [''],\n        pixel_id: [''],\n    });\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateTrackingPixelModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateTrackingPixelModalData,\n        private fb: FormBuilder,\n        private pixels: TrackingPixelService,\n        private toast: Toast,\n        private valueLists: ValueLists,\n    ) {}\n\n    ngOnInit() {\n        this.form.get('type').valueChanges.subscribe(typeName => {\n            this.selectedType$.next(this.types.find(t => t.name === typeName));\n        });\n        if (this.data.pixel) {\n            this.form.patchValue(this.data.pixel);\n        }\n    }\n\n    public confirm() {\n        this.loading$.next(true);\n        const request = this.data.pixel ?\n            this.pixels.update(this.data.pixel.id, this.getPayload()) :\n            this.pixels.create(this.getPayload());\n\n        const msg = this.data.pixel ?\n            Messages.PIXEL_UPDATE_SUCCESS :\n            Messages.PIXEL_CREATE_SUCCESS;\n\n        request\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.toast.open(msg);\n                this.close(response.pixel);\n                this.valueLists.clearCache();\n            }, err => this.errors$.next(err.messages));\n    }\n\n    public close(pixel?: TrackingPixel) {\n        this.dialogRef.close(pixel);\n    }\n\n    private getPayload(): Partial<TrackingPixel> {\n        return {...this.form.value};\n    }\n\n    public viewTypeName(type: string) {\n        return type.replace(/-/g, ' ');\n    }\n}\n","<data-table [dataSource]=\"dataSource\" itemsName=\"pixels\" matSort class=\"responsive-material-table\">\n    <ng-container headerActions>\n        <button mat-raised-button color=\"accent\" (click)=\"showCrupdatePixelModal()\" trans>Add</button>\n    </ng-container>\n\n    <ng-container headerSelectedActions>\n        <button mat-icon-button [matTooltip]=\"'Delete selected' | trans\" (click)=\"maybeDeleteSelectedPixels()\">\n            <mat-icon svgIcon=\"delete\"></mat-icon>\n        </button>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Name</mat-header-cell>\n        <mat-cell *matCellDef=\"let pixel\">{{pixel.name}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"type\">\n        <mat-header-cell *matHeaderCellDef trans>Type</mat-header-cell>\n        <mat-cell *matCellDef=\"let pixel\" data-label=\"Message:\">{{pixel.type}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"pixel_id\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Pixel ID</mat-header-cell>\n        <mat-cell *matCellDef=\"let pixel\" data-label=\"Action:\">{{pixel.pixel_id}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"user\" *ngIf=\"insideAdmin()\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header=\"user_id\" trans>User</mat-header-cell>\n        <mat-cell *matCellDef=\"let overlay\" data-label=\"User: \">\n            <ng-container *ngIf=\"overlay.user\">\n                <img [src]=\"overlay.user.avatar\">\n                <span>{{overlay.user.display_name}}</span>\n            </ng-container>\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"updated_at\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Last Updated</mat-header-cell>\n        <mat-cell *matCellDef=\"let pixel\" class=\"hidden-on-mobile\">{{pixel.updated_at | formattedDate}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let pixel\">\n            <button mat-icon-button (click)=\"showCrupdatePixelModal(pixel)\" [matTooltip]=\"'Edit pixel' | trans\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n        </mat-cell>\n    </ng-container>\n</data-table>\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\nimport {Paginator} from '@common/shared/paginator.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {LinkUsageService} from '../../../shared/link/link-usage.service';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {Messages} from '../../../messages.enum';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\nimport {TrackingPixel} from '../tracking-pixel';\nimport {PIXEL_BASE_URI, TrackingPixelService} from '../tracking-pixel.service';\nimport {CrupdateTrackingPixelModalComponent} from '../crupdate-tracking-pixel-modal/crupdate-tracking-pixel-modal.component';\nimport {Router} from '@angular/router';\nimport {ValueLists} from '@common/core/services/value-lists.service';\n\n@Component({\n    selector: 'tracking-pixel-index',\n    templateUrl: './tracking-pixel-index.component.html',\n    styleUrls: ['./tracking-pixel-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [Paginator],\n})\nexport class TrackingPixelIndexComponent implements OnInit, OnDestroy {\n    @ViewChild(MatSort, {static: true}) matSort: MatSort;\n    public dataSource: PaginatedDataTableSource<TrackingPixel>;\n\n    constructor(\n        public paginator: Paginator<TrackingPixel>,\n        private pixels: TrackingPixelService,\n        private modal: Modal,\n        public currentUser: CurrentUser,\n        public settings: Settings,\n        private toast: Toast,\n        private linkUsage: LinkUsageService,\n        private router: Router,\n        private valueLists: ValueLists,\n    ) {}\n\n    ngOnInit() {\n        // filter link overlays by current user ID if we are not in admin\n        const staticParams = this.router.url.indexOf('admin') === -1 ?\n            {userId: this.currentUser.get('id')} :\n            {};\n        this.dataSource = new PaginatedDataTableSource<TrackingPixel>({\n            uri: PIXEL_BASE_URI,\n            dataPaginator: this.paginator,\n            matSort: this.matSort,\n            staticParams,\n        });\n    }\n\n    ngOnDestroy() {\n        this.paginator.destroy();\n    }\n\n    public maybeDeleteSelectedPixels() {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Delete Pixels',\n            body:  'Are you sure you want to delete selected tracking pixels?',\n            ok:    'Delete'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.deleteSelectedPixels();\n        });\n    }\n\n    public deleteSelectedPixels() {\n        const ids = this.dataSource.selectedRows.selected.map(d => d.id);\n        this.pixels.delete(ids).subscribe(() => {\n            this.dataSource.reset();\n            this.linkUsage.reload();\n            this.valueLists.clearCache();\n            this.toast.open(Messages.PIXEL_DELETE_SUCCESS);\n        }, err => {\n            this.toast.open(err.messages.general || HttpErrors.Default);\n        });\n    }\n\n    public showCrupdatePixelModal(pixel?: TrackingPixel) {\n        this.modal.open(\n            CrupdateTrackingPixelModalComponent,\n            {pixel},\n            'crupdate-tracking-pixel-modal-container'\n        ).beforeClosed().subscribe(data => {\n            if ( ! data) return;\n            this.dataSource.reset();\n            this.linkUsage.reload();\n        });\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.indexOf('admin') > -1;\n    }\n}\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport {PaginatedDataTableSource} from '@common/shared/data-table/data/paginated-data-table-source';\nimport {Paginator} from '@common/shared/paginator.service';\nimport {Users} from '@common/auth/users.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {Settings} from '@common/core/config/settings.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {LinkGroup} from '../../../shared/link/link-group';\nimport {CrupdateLinkGroupModalComponent} from '../crupdate-link-group-modal/crupdate-link-group-modal.component';\nimport {LinkUsageService} from '../../../shared/link/link-usage.service';\nimport {Router} from '@angular/router';\nimport {LinkGroupService} from '../../../shared/link/link-group.service';\n\n@Component({\n    selector: 'link-group-index',\n    templateUrl: './link-group-index.component.html',\n    styleUrls: ['./link-group-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [Paginator],\n})\nexport class LinkGroupIndexComponent implements OnInit, OnDestroy {\n    @ViewChild(MatSort, { static: true }) matSort: MatSort;\n    public dataSource: PaginatedDataTableSource<LinkGroup>;\n\n    constructor(\n        public paginator: Paginator<LinkGroup>,\n        private linkGroups: LinkGroupService,\n        private modal: Modal,\n        public currentUser: CurrentUser,\n        public settings: Settings,\n        private toast: Toast,\n        private linkUsage: LinkUsageService,\n        private router: Router,\n    ) {}\n\n    ngOnInit() {\n        // filter link groups by current user ID if we are not in admin\n        const staticParams = this.router.url.indexOf('admin') === -1 ?\n            {userId: this.currentUser.get('id')} :\n            {};\n        this.dataSource = new PaginatedDataTableSource<LinkGroup>({\n            uri: 'link-group',\n            dataPaginator: this.paginator,\n            matSort: this.matSort,\n            staticParams,\n        });\n    }\n\n    ngOnDestroy() {\n        this.paginator.destroy();\n    }\n\n    public deleteSelectedGroups() {\n        const ids = this.dataSource.selectedRows.selected.map(group => group.id);\n        this.linkGroups.delete(ids).subscribe(() => {\n            this.dataSource.reset();\n            this.linkUsage.reload();\n        }, errResponse => {\n            this.toast.open(errResponse.messages.general || HttpErrors.Default);\n        });\n    }\n\n    public maybeDeleteSelectedGroups() {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Delete Users',\n            body:  'Are you sure you want to delete selected users?',\n            ok:    'Delete'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.deleteSelectedGroups();\n            this.linkUsage.reload();\n        });\n    }\n\n    public showCrupdateGroupModal(group?: LinkGroup) {\n        this.modal.open(\n            CrupdateLinkGroupModalComponent,\n            {group},\n            'crupdate-link-group-modal-container'\n        ).beforeClosed().subscribe(data => {\n            if ( ! data) return;\n            this.dataSource.reset();\n        });\n    }\n\n    public insideAdmin(): boolean {\n        return this.router.url.indexOf('admin') > -1;\n    }\n}\n","<data-table [dataSource]=\"dataSource\" itemsName=\"groups\" matSort class=\"responsive-material-table\">\n\n    <ng-container headerActions>\n        <button mat-raised-button color=\"accent\" (click)=\"showCrupdateGroupModal()\" headerActions trans>Add</button>\n        <info-popover>\n            <span trans>Group links together for easier management of links, viewing statistics for a whole group instead of individual links and ability to share all links in the group with one link.</span>\n        </info-popover>\n    </ng-container>\n\n    <button mat-icon-button [matTooltip]=\"'Delete selected' | trans\" (click)=\"maybeDeleteSelectedGroups()\" headerSelectedActions>\n        <mat-icon svgIcon=\"delete\"></mat-icon>\n    </button>\n\n    <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Name</mat-header-cell>\n        <mat-cell *matCellDef=\"let group\" data-label=\"Name: \">\n            <a [routerLink]=\"['/link-groups', group.slug]\" target=\"_blank\">{{group.name}}</a>\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"links\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header=\"links_count\" trans>Links</mat-header-cell>\n        <mat-cell *matCellDef=\"let group\" data-label=\"Links: \">{{group.links_count}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"user\" *ngIf=\"insideAdmin()\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header=\"user_id\" trans>User</mat-header-cell>\n        <mat-cell *matCellDef=\"let group\" data-label=\"User: \">\n            <ng-container *ngIf=\"group.user\">\n                <img [src]=\"group.user.avatar\">\n                <span>{{group.user.display_name}}</span>\n            </ng-container>\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"updated_at\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header trans>Last Updated</mat-header-cell>\n        <mat-cell *matCellDef=\"let group\" data-label=\"Last Updated: \">{{group.updated_at | formattedDate}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n        <mat-header-cell *matHeaderCellDef class=\"multiple-icons\"></mat-header-cell>\n        <mat-cell *matCellDef=\"let group\">\n            <a mat-icon-button [routerLink]=\"group.id\" [matTooltip]=\"'Group Statistics' | trans\">\n                <mat-icon svgIcon=\"visibility\"></mat-icon>\n            </a>\n            <button mat-icon-button (click)=\"showCrupdateGroupModal(group)\" [matTooltip]=\"'Edit group' | trans\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n            <copy-link-btn [model]=\"group\"></copy-link-btn>\n        </mat-cell>\n    </ng-container>\n</data-table>\n"]}