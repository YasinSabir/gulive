{"version":3,"sources":["webpack:///src/common/core/ui/confirm-modal/confirm-modal.component.ts","webpack:///src/common/core/ui/confirm-modal/confirm-modal.component.html","webpack:///src/common/uploads/formatted-file-size.pipe.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.component.ts","webpack:///src/common/core/ui/svg-image/svg-cache.service.ts","webpack:///src/common/core/ui/svg-image/svg-image.component.ts","webpack:///src/common/core/ui/no-results-message/no-results-message.component.html","webpack:///src/common/core/ui/no-results-message/no-results-message.component.ts","webpack:///src/common/core/ui/svg-image/svg-image.module.ts","webpack:///src/common/core/ui/no-results-message/no-results-message.module.ts","webpack:///src/common/shared/billing/guards/billing-enabled-guard.service.ts","webpack:///src/common/billing/upgrade-page/billing-plans-resolver.service.ts","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.html","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.ts","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.html","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.ts","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.ts","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.html","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.ts","webpack:///src/common/billing/credit-card-form/credit-card-form.component.html","webpack:///src/common/billing/credit-card-form/credit-card-form.component.ts","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.html","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.ts","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.html","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.ts","webpack:///src/common/billing/upgrade-page/currencies-list-resolver.service.ts","webpack:///src/common/billing/guards/user-subscribed-guard.service.ts","webpack:///src/common/billing/invoices/invoice.service.ts","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.html","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.html","webpack:///src/common/billing/billing-routing.module.ts","webpack:///src/common/billing/guards/redirect-to-upgrade-page.service.ts","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.html","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.ts","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.html","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.ts","webpack:///src/common/billing/guards/user-not-subscribed-guard.service.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.html","webpack:///src/common/billing/billing.module.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///src/common/shared/billing/plans.service.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.module.ts","webpack:///src/common/core/ui/format-pipes/formatted-date.pipe.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js"],"names":["ConfirmModalComponent","dialogRef","data","i18n","settings","this","ok","cancel","key","t","replacements","close","confirm","FormattedFileSizePipe","bytes","precision","isNaN","parseFloat","String","isFinite","FullPlanNameComponent","plan","name","parent","SvgCacheService","http","document","cache","Map","inProgressUrlFetches","fileName","endsWith","get","of","cloneSvg","fetchIcon","pipe","map","svgText","svgElementFromString","tap","svg","set","inProgressFetch","req","responseType","finalize","delete","share","str","div","createElement","innerHTML","querySelector","Error","cloneNode","SvgImageComponent","el","changes","svgIconChanges","currentSvgFetch","unsubscribe","take","subscribe","setSvgElement","previousValue","clearSvgElement","styleTags","querySelectorAll","i","length","textContent","nativeElement","appendChild","layoutElement","childCount","childNodes","child","nodeType","nodeName","toLowerCase","removeChild","NoResultsMessageComponent","svgImage","horizontal","SvgImageModule","NoResultsMessageModule","BillingEnabledGuard","router","route","state","handle","navigate","BillingPlansResolver","plans","all","order","perPage","response","pagination","catchError","navigateByUrl","mergeMap","AcceptedPaymentsHeaderComponent","acceptedCards","getJson","card","getAssetUrl","PlanFeaturesListComponent","showCheckIcons","dense","UpgradePageAsideComponent","OrderSummaryComponent","CreditCardFormComponent","subscriptions","currentUser","zone","lazyLoader","toast","theme","created","submitButtonText","showSubmitButton","showOrderSummary","loading$","BehaviorSubject","error$","stripeElements","resetForm","initStripe","destroyStripe","next","token","error","stripe","createToken","message","addCardToUser","stripeToken","addCard","id","assignCurrent","user","emit","errResponse","loadAsset","type","then","Stripe","elements","isDarkMode","selectedTheme$","value","is_dark","forEach","field","create","classes","base","style","color","mount","on","onChange","bind","push","unmount","destroy","change","run","submitForm","CreateSubscriptionPanelComponent","paypal","selectedIndex$","loading","submitText","disablePaypalTab","completed","getSubscription","gateway","planId","status","startLoading","createOnStripe","getNewSubscriptionPayload","completeSubscription","confirmCardPayment","Object","keys","errors","open","Default","stopLoading","payment_intent_secret","result","action","onAction","finalizeOnStripe","reference","finalResponse","catch","payload","plan_id","from","renews_at","UserSubscriptionPageComponent","modal","activeSubscription$","onGracePeriod","isSubscribed","ends_at","split","title","body","afterClosed","confirmed","cancelSubscription","resume","setSubscription","subscription","e","params","request","updateUserAndSubscription","CurrenciesListResolver","valueLists","currencies","toPromise","UserSubscribedGuard","InvoiceService","InvoiceIndexComponent","invoices","invoices$","index","userId","invoice","getBaseUrl","uuid","PricingPageComponent","routes","path","component","canActivate","RedirectToUpgradePage","listener","active","isLoggedIn","resolve","canActivateChild","children","BillingRoutingModule","forChild","SelectPlanPanelComponent","hasRecommendedPlan","selected","filter","recommended","selectInitialPlan","setTimeout","parent_id","hidden","mode","free","model$","userSubscribedToPlan","SelectPlanPeriodPanelComponent","showSidebar","baseAmount","getAmountPerDay","amount","Math","ceil","days","interval","interval_count","UserNotSubscribedGuard","ContactWidgetComponent","BillingModule","_c0","_c1","enterDuration","_c2","MAT_RADIO_DEFAULT_OPTIONS","providedIn","factory","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatRadioGroup","multi","MatRadioChange","source","MAT_RADIO_GROUP","_MatRadioGroupBase","_changeDetector","_value","_name","_selected","_isInitialized","_labelPosition","_disabled","_required","_controlValueAccessorChangeFn","onTouched","_updateRadioButtonNames","v","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","checked","c","_radios","radio","_markForCheck","markForCheck","fn","isDisabled","disabled","ɵfac","ɵdir","inputs","labelPosition","required","outputs","ɵMatRadioGroup_BaseFactory","selectors","contentQueries","rf","ctx","dirIndex","_t","MatRadioButton","hostAttrs","exportAs","features","MatRadioButtonBase","_elementRef","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","elementRef","_focusMonitor","_radioDispatcher","_animationMode","_providerOverride","super","_uniqueId","_checked","_removeUniqueSelectionListener","listen","newCheckedState","notify","_setDisabled","_color","options","focusVia","_inputElement","monitor","focusOrigin","_touch","stopMonitoring","disableRipple","event","stopPropagation","groupValueChanged","_emitChangeEvent","undefined","viewQuery","first","ariaLabel","ariaLabelledby","ariaDescribedby","changeDetector","focusMonitor","radioDispatcher","animationMode","providerOverride","ɵcmp","hostVars","hostBindings","focus","tabIndex","ngContentSelectors","decls","vars","consts","template","$event","_onInputChange","_onInputClick","_r0","inputId","_isRippleDisabled","directives","styles","encapsulation","changeDetection","MatRadioModule","ɵmod","ɵinj","imports","Plans","BASE_URI","post","put","ids","FullPlanNameModule","FormattedDatePipe","_locale","format","angularPipe","timezone","locale","replace","transform","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","_c3","_c4","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","$implicit","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r12","i_r5","ctx_r11","_handleClick","ctx_r1","selectedIndex","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r16","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r13","i_r14","ctx_r3","content","position","origin","_c5","_c6","_c7","_c8","_c9","_MAT_INK_BAR_POSITIONER","element","left","offsetLeft","width","offsetWidth","MatInkBar","_ngZone","_inkBarPositioner","show","requestAnimationFrame","runOutsideAngular","_setStyles","visibility","positions","inkBar","MAT_TAB_CONTENT","MatTabContent","MAT_TAB_LABEL","MatTabLabel","ɵMatTabLabel_BaseFactory","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","_contentPortal","_stateChanges","isActive","_templateLabel","hasOwnProperty","complete","_explicitContent","_implicitContent","matTabsAnimations","translateTab","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","EMPTY","_leavingSub","ngOnInit","_beforeCentering","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","ngOnDestroy","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","dir","_computePositionAnimationState","x","y","fromState","toState","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_portalHost","_onTranslateTabStarted","animation","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","Promise","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","_allTabs","reset","notifyOnChanges","_tabHeader","_alignInkBarToSelectedTab","min","max","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","focusIndex","idx","dynamicHeight","MatTabGroup","_focusChanged","MatTabHeader","MatTabLabelWrapper","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","passiveEventListenerOptions","passive","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_keyManager","updateActiveItem","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_items","withHorizontalOrientation","withWrap","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","setFirstItemActive","preventDefault","setLastItemActive","_itemSelected","onKeydown","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","direction","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","_MatTabHeaderBase","viewportRuler","ngZone","_disableRipple","_handlePaginatorClick","_handleKeydown","_onContentChanges","_MatTabNavBase","updateActiveLink","ngAfterContentInit","_element","items","MatTabNav","MatTabLink","attrs","MatTabLinkMixinBase","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_isActive","rippleConfig","parseInt","exitDuration","tabNavBar","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabsModule"],"mappings":"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","file":"x","sourcesContent":["import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Translations} from '../../translations/translations.service';\nimport {Settings} from '../../config/settings.service';\n\nexport interface ConfirmModalData {\n    title: string;\n    body: string;\n    bodyBold?: string;\n    ok?: string;\n    cancel?: string;\n    replacements?: object;\n}\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmModalComponent implements OnInit {\n    constructor(\n        private dialogRef: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmModalData,\n        private i18n: Translations,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        if ( ! this.data.ok) {\n            this.data.ok = 'Confirm';\n        }\n        if ( ! this.data.cancel) {\n            this.data.cancel = 'Cancel';\n        }\n        for (const key in this.data) {\n            if (typeof this.data[key] === 'string') {\n                this.data[key] = this.i18n.t(this.data[key], this.data.replacements);\n            }\n        }\n    }\n\n    public confirm() {\n        this.dialogRef.close(true);\n    }\n\n    public close() {\n        this.dialogRef.close(false);\n    }\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title\" mat-dialog-title>{{data.title}}</h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<div class=\"mat-dialog-contents\" mat-dialog-content>\n    <p>{{data.body}}</p>\n    <p class=\"bold\" *ngIf=\"data.bodyBold\">{{data.bodyBold}}</p>\n</div>\n\n<div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\n    <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel cancel-button\">{{data.cancel}}</button>\n    <button type=\"submit\" mat-raised-button color=\"accent\" class=\"button primary submit-button\" cdkFocusInitial (click)=\"confirm()\">{{data.ok}}</button>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { prettyBytes } from '../core/utils/pretty-bytes';\n\n@Pipe({\n    name: 'formattedFileSize',\n    pure: true,\n})\nexport class FormattedFileSizePipe implements PipeTransform {\n    transform(bytes: number = 0, precision?: number|string): string {\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\n        return prettyBytes(bytes, precision);\n    }\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {Translations} from '@common/core/translations/translations.service';\nimport {ucFirst} from '@common/core/utils/uc-first';\n\n@Component({\n    selector: 'full-plan-name',\n    template: '{{getFullPlanName()}}',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FullPlanNameComponent {\n    @Input() plan: Plan;\n\n    constructor(private i18n: Translations) {}\n\n    public getFullPlanName(): string {\n        if ( ! this.plan) return;\n        let name = this.plan.parent ? this.plan.parent.name : this.plan.name;\n        name = ucFirst(this.i18n.t(name));\n        name += ' ' + this.i18n.t('Plan');\n        if (this.plan.parent) name += ': ' + this.plan.name;\n        return name;\n    }\n}\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {finalize, map, share, tap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {DOCUMENT} from '@angular/common';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SvgCacheService {\n    private cache = new Map<string, SVGElement>();\n    private inProgressUrlFetches = new Map<string, Observable<string>>();\n\n    constructor(\n        private http: HttpClient,\n        @Optional() @Inject(DOCUMENT) private document: Document\n    ) {}\n\n    public get(name: string): Observable<SVGElement> {\n        const fileName = name.endsWith('.svg') ? name : `${name}.svg`;\n\n        if (this.cache.get(fileName)) {\n            return of(cloneSvg(this.cache.get(fileName)));\n        }\n\n        return this.fetchIcon(fileName).pipe(\n            map(svgText => this.svgElementFromString(svgText, fileName)),\n            tap(svg => this.cache.set(fileName, svg)),\n            map(svg => cloneSvg(svg))\n        );\n    }\n\n    private fetchIcon(fileName: string) {\n        const inProgressFetch = this.inProgressUrlFetches.get(fileName);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n\n        const req = this.http.get(`client/assets/images/illustrations/${fileName}`, {responseType: 'text'}).pipe(\n            finalize(() => this.inProgressUrlFetches.delete(fileName)),\n            share(),\n        );\n        this.inProgressUrlFetches.set(fileName, req);\n        return req;\n    }\n\n    private svgElementFromString(str: string, fileName: string = ''): SVGElement {\n        const div = this.document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg') as SVGElement;\n\n        if (!svg) {\n            throw Error(`<svg> tag not found for ${fileName}`);\n        }\n\n        return svg;\n    }\n}\n\nfunction cloneSvg(svg: SVGElement): SVGElement {\n    return svg.cloneNode(true) as SVGElement;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport {SvgCacheService} from './svg-cache.service';\nimport {take} from 'rxjs/operators';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'svg-image',\n    templateUrl: './svg-image.component.html',\n    styleUrls: ['./svg-image.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'role': 'img',\n    }\n})\nexport class SvgImageComponent implements OnChanges, OnDestroy {\n    @Input() name: string;\n    private currentSvgFetch: Subscription;\n\n    constructor(\n        private cache: SvgCacheService,\n        private el: ElementRef<HTMLElement>,\n    ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        const svgIconChanges = changes.name;\n\n        if (svgIconChanges) {\n            this.currentSvgFetch?.unsubscribe();\n            if (this.name) {\n                this.currentSvgFetch = this.cache.get(this.name)\n                    .pipe(take(1))\n                    .subscribe(svg => this.setSvgElement(svg));\n            }\n        } else if (svgIconChanges.previousValue) {\n            this.clearSvgElement();\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.currentSvgFetch?.unsubscribe();\n    }\n\n    private setSvgElement(svg: SVGElement) {\n        this.clearSvgElement();\n\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style') as NodeListOf<HTMLStyleElement>;\n\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n\n        this.el.nativeElement.appendChild(svg);\n    }\n\n    private clearSvgElement() {\n        const layoutElement = this.el.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n\n}\n","<mat-icon class=\"icon\" [svgIcon]=\"svgIcon\" *ngIf=\"svgIcon; else svgImageRef\"></mat-icon>\n<ng-template #svgImageRef>\n    <svg-image class=\"icon\" [name]=\"svgImage\"></svg-image>\n</ng-template>\n<div class=\"text\">\n    <div class=\"main\">\n        <ng-content select=\"[primary-text]\"></ng-content>\n    </div>\n    <div class=\"secondary\">\n        <ng-content select=\"[secondary-text]\"></ng-content>\n    </div>\n</div>\n","import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\nimport {Settings} from '../../config/settings.service';\n\n@Component({\n    selector: 'no-results-message',\n    templateUrl: './no-results-message.component.html',\n    styleUrls: ['./no-results-message.component.scss'],\n    host: {class: 'no-results-message'},\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NoResultsMessageComponent {\n    @Input() svgImage = 'no-results.svg';\n    @Input() svgIcon: string;\n    @Input() @HostBinding('class.horizontal') horizontal = false;\n    constructor(public settings: Settings) {}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SvgImageComponent} from './svg-image.component';\n\n\n@NgModule({\n    declarations: [\n        SvgImageComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        SvgImageComponent,\n    ]\n})\nexport class SvgImageModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NoResultsMessageComponent} from '@common/core/ui/no-results-message/no-results-message.component';\nimport {SvgImageModule} from '../svg-image/svg-image.module';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n    declarations: [\n        NoResultsMessageComponent,\n    ],\n    imports: [\n        CommonModule,\n        SvgImageModule,\n\n        MatIconModule,\n    ],\n    exports: [\n        NoResultsMessageComponent,\n    ]\n})\nexport class NoResultsMessageModule {\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\nimport {Settings} from '@common/core/config/settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BillingEnabledGuard implements CanActivate, CanActivateChild {\n    constructor(private settings: Settings, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    private handle() {\n        if (this.settings.get('billing.integrated') && this.settings.get('billing.enable')) {\n            return true;\n        }\n\n        this.router.navigate(['/']);\n        return false;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, Router} from '@angular/router';\nimport {catchError, map, mergeMap} from 'rxjs/operators';\nimport {EMPTY, Observable, of} from 'rxjs';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {Plans} from '@common/shared/billing/plans.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BillingPlansResolver implements Resolve<Plan[]> {\n    constructor(\n        private plans: Plans,\n        private router: Router\n    ) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Plan[]> {\n        return this.plans.all({order: 'position|asc', perPage: 30})\n            .pipe(map(response => response.pagination.data))\n            .pipe(\n                catchError(() => {\n                    this.router.navigateByUrl('/');\n                    return EMPTY;\n                }),\n                mergeMap((plans: Plan[]) => {\n                    return of(plans);\n                })\n            );\n    }\n}\n\n","<div class=\"text\" trans>Accepted Payment Methods</div>\n<div class=\"card-icons\">\n    <img [src]=\"getCardIcon('paypal')\" *ngIf=\"settings.get('billing.paypal.enable')\">\n    <img [src]=\"getCardIcon(card)\" *ngFor=\"let card of acceptedCards\">\n</div>\n","import {ChangeDetectionStrategy, Component, ElementRef, OnInit} from '@angular/core';\nimport {Settings} from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'accepted-payments-header',\n    templateUrl: './accepted-payments-header.component.html',\n    styleUrls: ['./accepted-payments-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcceptedPaymentsHeaderComponent implements OnInit {\n    public acceptedCards: string[] = [];\n\n    constructor(public settings: Settings, public el: ElementRef) {}\n\n    ngOnInit() {\n        this.acceptedCards = this.settings.getJson('billing.accepted_cards', []);\n    }\n\n    public getCardIcon(card: string) {\n        return this.settings.getAssetUrl() + 'images/billing/' + card.toLowerCase() + '.png';\n    }\n}\n","<ul class=\"unstyled-list\" *ngIf=\"getPlan()\" [class.dense]=\"dense\">\n    <ng-container *ngIf=\"getPlan().show_permissions\">\n        <li *ngFor=\"let permission of getPlan().permissions\">\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\n            <span trans>{{permission.display_name || permission.name}}</span>\n        </li>\n    </ng-container>\n    <ng-container *ngIf=\"getPlan().features.length\">\n        <li *ngFor=\"let feature of getPlan().features\">\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\n            <span>{{feature}}</span>\n        </li>\n    </ng-container>\n</ul>\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Plan} from '@common/core/types/models/Plan';\n\n@Component({\n    selector: 'plan-features-list',\n    templateUrl: './plan-features-list.component.html',\n    styleUrls: ['./plan-features-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlanFeaturesListComponent {\n    @Input() plan: Plan;\n    @Input() showCheckIcons = false;\n    @Input() dense = false;\n\n    public getPlan() {\n        return this.plan.parent || this.plan;\n    }\n}\n","<accepted-payments-header></accepted-payments-header>\n\n<ng-container *ngIf=\"plan\">\n    <div class=\"selected-plan\">\n        <div class=\"header\"><full-plan-name [plan]=\"plan\"></full-plan-name></div>\n        <plan-features-list class=\"plan-features-list\" [plan]=\"plan\" [showCheckIcons]=\"true\" [dense]=\"true\"></plan-features-list>\n    </div>\n\n    <div class=\"divider\"></div>\n\n    <div class=\"secure-shopping\">\n        <div class=\"icon-container\">\n            <mat-icon svgIcon=\"shield-custom\"></mat-icon>\n        </div>\n        <div class=\"text\">\n            <div class=\"primary\" trans>SSL Secure Payment</div>\n            <div class=\"secondary\" trans>Your information is protected by 256-bit SSL encryption</div>\n        </div>\n    </div>\n</ng-container>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Plan} from '@common/core/types/models/Plan';\n\n@Component({\n    selector: 'upgrade-page-aside',\n    templateUrl: './upgrade-page-aside.component.html',\n    styleUrls: ['./upgrade-page-aside.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpgradePageAsideComponent {\n    @Input() plan: Plan;\n}\n","<ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\n    <div class=\"line\">\n        <div class=\"summary-left\">\n            <full-plan-name [plan]=\"selectedPlan\"></full-plan-name>\n        </div>\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\n    </div>\n\n    <div class=\"line emphasis\">\n        <div class=\"summary-left\" trans>Total</div>\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\n    </div>\n</ng-container>","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\n\n@Component({\n    selector: 'order-summary',\n    templateUrl: './order-summary.component.html',\n    styleUrls: ['./order-summary.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderSummaryComponent {\n    constructor(public state: SubscriptionStepperState) {}\n}\n","<form (ngSubmit)=\"submitForm()\" class=\"card-form many-inputs\" ngNativeValidate>\n    <div class=\"input-container\">\n        <label for=\"cardNumber\" trans>Credit or Debit Card</label>\n        <div id=\"cardNumber\" class=\"fake-input\"></div>\n    </div>\n\n    <div class=\"input-container\">\n        <label for=\"cardExpiry\" trans>Card Expiration</label>\n        <div id=\"cardExpiry\" class=\"fake-input\"></div>\n    </div>\n\n    <div class=\"input-container\">\n        <label for=\"cardCvc\" trans>CVC</label>\n        <div id=\"cardCvc\" class=\"fake-input\"></div>\n    </div>\n\n    <div class=\"error margin-bottom\" role=\"alert\" *ngIf=\"error$ | async as error\">{{error}}</div>\n\n    <order-summary *ngIf=\"showOrderSummary\"></order-summary>\n\n    <button type=\"submit\" *ngIf=\"showSubmitButton\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">{{submitButtonText | trans}}</button>\n</form>\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output\n} from '@angular/core';\nimport {finalize} from 'rxjs/operators';\nimport {User} from '../../core/types/models/User';\nimport {Settings} from '../../core/config/settings.service';\nimport {LazyLoaderService} from '../../core/utils/lazy-loader.service';\nimport {CurrentUser} from '../../auth/current-user';\nimport {Subscriptions} from '../../shared/billing/subscriptions.service';\nimport {Toast} from '../../core/ui/toast.service';\nimport {ThemeService} from '@common/core/theme.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\n\n@Component({\n    selector: 'credit-card-form',\n    templateUrl: './credit-card-form.component.html',\n    styleUrls: ['./credit-card-form.component.scss'],\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CreditCardFormComponent implements OnDestroy, AfterViewInit {\n\n    /**\n     * Event fired when form is submitted and card is added successfully on active gateway.\n     */\n    @Output() created: EventEmitter<User> = new EventEmitter();\n\n    /**\n     * Display text for form submit button.\n     */\n    @Input() submitButtonText = 'Submit';\n\n    /**\n     * Whether form submit button should be shown.\n     */\n    @Input() showSubmitButton = true;\n\n    /**\n     * Whether order summary should be shown in the template.\n     */\n    @Input() showOrderSummary = false;\n\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public error$ = new BehaviorSubject<string>(null);\n    private stripeElements: stripe.elements.Element[] = [];\n\n    constructor(\n        private subscriptions: Subscriptions,\n        private currentUser: CurrentUser,\n        private settings: Settings,\n        private zone: NgZone,\n        private lazyLoader: LazyLoaderService,\n        private toast: Toast,\n        private theme: ThemeService,\n        private state: SubscriptionStepperState,\n    ) {\n        this.resetForm();\n    }\n\n    ngAfterViewInit() {\n        this.initStripe();\n    }\n\n    ngOnDestroy() {\n        this.destroyStripe();\n    }\n\n    /**\n     * Submit stripe elements credit card form.\n     */\n    public async submitForm() {\n        this.loading$.next(true);\n\n        const {token, error} = await this.state.stripe.createToken(this.stripeElements[0]);\n\n        if (error) {\n            this.error$.next(error.message);\n            this.loading$.next(false);\n        } else {\n            this.addCardToUser(token);\n        }\n    }\n\n    public addCardToUser(stripeToken: stripe.Token) {\n        this.loading$.next(true);\n        this.subscriptions.addCard(stripeToken.id)\n            .pipe(finalize(() =>  this.loading$.next(false)))\n            .subscribe(response => {\n                this.resetForm();\n                this.currentUser.assignCurrent(response.user);\n                this.created.emit(response.user);\n            }, (errResponse: BackendErrorResponse) => {\n                this.error$.next(errResponse.message);\n            });\n    }\n\n    /**\n     * Initiate stripe elements credit card form.\n     */\n    private initStripe() {\n        this.lazyLoader.loadAsset('https://js.stripe.com/v3', {type: 'js'}).then(() => {\n            const fields = ['cardNumber', 'cardExpiry', 'cardCvc'] as stripe.elements.elementsType[];\n            this.state.stripe = Stripe(this.settings.get('billing.stripe_public_key'));\n            const elements = this.state.stripe.elements();\n\n            const isDarkMode = this.theme.selectedTheme$.value.is_dark;\n            fields.forEach(field => {\n                const el = elements.create(field, {classes: {base: 'base'}, style: {base: {color: isDarkMode ? '#fff' : 'inherit'}}});\n                el.mount('#' + field);\n                el.on('change', this.onChange.bind(this));\n                this.stripeElements.push(el);\n            });\n        });\n    }\n\n    /**\n     * Destroy all stripe elements instances.\n     */\n    private destroyStripe() {\n        this.stripeElements.forEach(el => {\n            el.unmount();\n            el.destroy();\n        });\n    }\n\n    /**\n     * Fired on stripe element \"change\" event.\n     */\n    private onChange(change: stripe.elements.ElementChangeResponse) {\n        this.zone.run(() => {\n            this.error$.next(change.error ? change.error.message : null);\n        });\n    }\n\n    /**\n     * Reset credit card form.\n     */\n    private resetForm() {\n        this.error$.next(null);\n    }\n}\n","<mat-tab-group [dynamicHeight]=\"true\" color=\"accent\" [selectedIndex]=\"selectedIndex$ | async\">\n    <mat-tab [label]=\"'Bank Card' | trans\" *ngIf=\"settings.get('billing.stripe.enable')\">\n        <credit-card-form (created)=\"subscribeOnStripe()\" [submitButtonText]=\"submitText\" [showOrderSummary]=\"true\"></credit-card-form>\n    </mat-tab>\n    <mat-tab label=\"Paypal\" [disabled]=\"disablePaypalTab\" *ngIf=\"settings.get('billing.paypal.enable')\">\n        <div class=\"paypal-tab\">\n            <p class=\"info\" trans>After clicking the button below, you will be redirected to paypal.com to approve the subscription.</p>\n            <order-summary></order-summary>\n            <button mat-raised-button color=\"accent\" (click)=\"subscribeOnPaypal()\" [disabled]=\"loading$ | async\">{{submitText | trans}}</button>\n        </div>\n    </mat-tab>\n</mat-tab-group>\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Subscription} from '@common/shared/billing/models/subscription';\nimport {Plan} from '@common/core/types/models/Plan';\nimport {CreateSubOnStripeResponse, Subscriptions} from '@common/shared/billing/subscriptions.service';\nimport {CurrentUser} from '@common/auth/current-user';\nimport {PaypalSubscriptions} from '@common/billing/subscriptions/paypal-subscriptions';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {User} from '@common/core/types/models/User';\nimport {CreditCard} from '@common/billing/upgrade-page/upgrade-page.component';\nimport {BehaviorSubject} from 'rxjs';\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\n\nexport interface SubscriptionCompletedEvent {\n    status: 'created'|'updated';\n}\n\ninterface NewSubscriptionPayload {\n    card?: CreditCard;\n    start_date?: string;\n    plan_id: number;\n}\n\n@Component({\n    selector: 'create-subscription-panel',\n    templateUrl: './create-subscription-panel.component.html',\n    styleUrls: ['./create-subscription-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CreateSubscriptionPanelComponent {\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public selectedIndex$ = new BehaviorSubject<number>(0);\n\n    /**\n     * Fired when subscription creation starts or ends.\n     */\n    @Output() loading = new EventEmitter<boolean>();\n\n    /**\n     * Text for submit purchase button.\n     */\n    @Input() submitText = 'Submit Purchase';\n\n    /**\n     * Whether paypal tab should be disabled.\n     */\n    @Input() disablePaypalTab = false;\n\n    /**\n     * We're changing user subscription from this one.\n     * Used for prorating the new subscription start date.\n     */\n    @Input() from: Subscription;\n\n    /**\n     * Plan user should be subscribed to.\n     */\n    @Input() plan: Plan;\n\n    /**\n     * Fired when subscription is created or updated.\n     */\n    @Output() completed: EventEmitter<SubscriptionCompletedEvent> = new EventEmitter();\n\n    constructor(\n        private subscriptions: Subscriptions,\n        private currentUser: CurrentUser,\n        private paypal: PaypalSubscriptions,\n        private toast: Toast,\n        public settings: Settings,\n        private state: SubscriptionStepperState,\n    ) {}\n\n    /**\n     * Subscribe user to current plan on stripe gateway.\n     */\n    public subscribeOnStripe() {\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\n        if (this.currentUser.getSubscription({gateway: 'stripe', planId: this.plan.id})) {\n            return this.completed.emit({status: 'updated'});\n        }\n\n        this.startLoading();\n\n        this.subscriptions.createOnStripe(this.getNewSubscriptionPayload())\n            .subscribe(response => {\n                if (response.status === 'complete') {\n                    this.completeSubscription(response.user);\n                } else {\n                   this.confirmCardPayment(response);\n                }\n            }, (errResponse: BackendErrorResponse) => {\n                const key = Object.keys(errResponse.errors)[0];\n                this.toast.open(errResponse.errors[key] || HttpErrors.Default);\n                this.stopLoading();\n            });\n    }\n\n    /**\n     * Confirm card payment via 3D secure.\n     */\n    private confirmCardPayment(response: CreateSubOnStripeResponse) {\n        this.state.stripe.confirmCardPayment(response.payment_intent_secret)\n            .then(result => {\n                if (result.error) {\n                    this.stopLoading();\n                    this.toast.open('Card payment was not confirmed.', {action: 'Retry'})\n                        .onAction()\n                        .subscribe(() => {\n                            this.confirmCardPayment(response);\n                        });\n                } else {\n                    this.subscriptions.finalizeOnStripe(response.reference, response.user.id)\n                        .subscribe(finalResponse => {\n                            this.completeSubscription(finalResponse.user);\n                        });\n                }\n            });\n    }\n\n    /**\n     * Subscribe user to current plan on paypal gateway.\n     */\n    public subscribeOnPaypal() {\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\n        if (this.currentUser.getSubscription({gateway: 'paypal', planId: this.plan.id})) {\n            return this.completed.emit({status: 'updated'});\n        }\n\n        this.startLoading();\n\n        this.paypal.subscribe(this.getNewSubscriptionPayload()).then(user => {\n            this.completeSubscription(user);\n            this.selectedIndex$.next(0);\n        }).catch(message => {\n            this.stopLoading();\n            this.toast.open(message || 'There was an issue. Please try again later.');\n        });\n    }\n\n    /**\n     * Get payload for backend for creating a new subscription.\n     */\n    private getNewSubscriptionPayload(): NewSubscriptionPayload {\n       const payload = {plan_id: this.plan.id};\n\n       if (this.from) {\n           payload['start_date'] = this.from.renews_at;\n       }\n\n       return payload;\n    }\n\n    private completeSubscription(user: User) {\n        this.stopLoading();\n        this.currentUser.assignCurrent(user);\n        this.completed.emit({status: 'created'});\n    }\n\n    private startLoading() {\n        this.loading$.next(true);\n        this.loading.emit(true);\n    }\n\n    private stopLoading() {\n        this.loading$.next(false);\n        this.loading.emit(false);\n    }\n}\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\n\n<div class=\"content container mat-elevation-z1\" *ngIf=\"activeSubscription$ | async as activeSubscription\">\n    <div class=\"main\">\n        <div class=\"main-section\">\n            <div class=\"main-section-title\"><full-plan-name [plan]=\"activeSubscription.plan\"></full-plan-name></div>\n            <div class=\"main-section-content\">\n                <ng-container *ngIf=\"canCancel()\">\n                    <p>\n                        {{ 'Your plan will automatically renew on' | trans }}\n                        <strong>{{getFormattedRenewDate() | formattedDate}}</strong>\n                        {{ \"and you'll be charged\" | trans }}\n                        <strong>{{activeSubscription.plan.amount | currency:activeSubscription.plan.currency}}</strong>.\n                    </p>\n\n                    <a mat-raised-button color=\"accent\" routerLink=\"/billing/upgrade\" trans>Change Plan</a>\n                </ng-container>\n\n                <ng-container *ngIf=\"canResume()\">\n                    <p>{{ 'You are on a grace period until' | trans }} <strong>{{getFormattedEndDate() | formattedDate}}</strong>. {{ 'Your subscription will not automatically resume and you will not be charged' | trans }}.</p>\n                    <p trans>You still have access to your plan's features until this date and you can resume your subscription anytime, by clicking button below.</p>\n                    <button mat-raised-button color=\"accent\" (click)=\"resumeSubscription()\" trans>Resume</button>\n                </ng-container>\n            </div>\n        </div>\n\n        <div class=\"main-section\" *ngIf=\"canCancel() && canChangePaymentMethod()\">\n            <div class=\"main-section-title\" trans>Payment Method</div>\n            <div class=\"main-title-description\" trans>Change your preferred payment method below. You can use a credit card or PayPal.</div>\n\n            <p>{{ 'Current payment Method' | trans }}: <strong>{{activeSubscription.gateway === 'paypal' ? 'PayPal' : ('Credit Card' | trans)}}</strong></p>\n\n            <div class=\"card-preview\" *ngIf=\"activeSubscription.gateway === 'stripe'\">\n                <div class=\"icon\"><mat-icon svgIcon=\"credit-card\"></mat-icon></div>\n                <div class=\"info\">{{currentUser.get('card_brand')}} **** {{currentUser.get('card_last_four')}}</div>\n            </div>\n\n            <create-subscription-panel\n                    (completed)=\"onPaymentMethodChange($event)\"\n                    (loading)=\"loading$.next($event)\"\n                    [plan]=\"getPlan()\"\n                    [from]=\"activeSubscription\"\n                    [disablePaypalTab]=\"activeSubscription.gateway === 'paypal'\"\n                    submitText=\"Change Payment Method\"\n            ></create-subscription-panel>\n        </div>\n\n        <div class=\"main-section\" *ngIf=\"canCancel()\">\n            <div class=\"main-section-title\" trans>Cancel Subscription</div>\n\n            <div class=\"main-section-content\">\n                <p trans>After cancelling subscription, you will have access to your active plan until your billing period end.</p>\n            </div>\n\n            <div class=\"main-section-actions\">\n                <button mat-raised-button color=\"warn\" (click)=\"maybeCancelSubscription()\" trans>Cancel</button>\n            </div>\n        </div>\n    </div>\n\n    <upgrade-page-aside [plan]=\"getPlan()\"></upgrade-page-aside>\n\n    <loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\n</div>\n\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { finalize, share } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Subscription } from '@common/shared/billing/models/subscription';\nimport { Settings } from '@common/core/config/settings.service';\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\nimport { Subscriptions } from '@common/shared/billing/subscriptions.service';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { Plan } from '@common/core/types/models/Plan';\nimport { ConfirmModalComponent } from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport { SubscriptionCompletedEvent } from '@common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component';\nimport { User } from '@common/core/types/models/User';\n\n@Component({\n    selector: 'user-subscription-page',\n    templateUrl: './user-subscription-page.component.html',\n    styleUrls: ['./user-subscription-page.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserSubscriptionPageComponent implements OnInit {\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public activeSubscription$ = new BehaviorSubject<Subscription>(null);\n\n    constructor(\n        public settings: Settings,\n        private modal: Modal,\n        private subscriptions: Subscriptions,\n        public currentUser: CurrentUser,\n        private toast: Toast,\n    ) {}\n\n    ngOnInit() {\n        this.activeSubscription$.next(this.currentUser.getSubscription());\n    }\n\n    public canResume() {\n        return this.currentUser.onGracePeriod();\n    }\n\n    public canCancel() {\n        return this.currentUser.isSubscribed() && !this.currentUser.onGracePeriod();\n    }\n\n    public canChangePaymentMethod() {\n        return this.settings.get('billing.stripe.enable') || this.settings.get('billing.paypal.enable');\n    }\n\n    public getFormattedEndDate(): string {\n        if ( ! this.activeSubscription$.value.ends_at) return null;\n        return this.activeSubscription$.value.ends_at.split(' ')[0];\n    }\n\n    public getFormattedRenewDate() {\n        if ( ! this.activeSubscription$.value.renews_at) return null;\n        return this.activeSubscription$.value.renews_at.split(' ')[0];\n    }\n\n    public getPlan(): Plan {\n        return this.activeSubscription$.value.plan;\n    }\n\n    /**\n     * Ask user to confirm deletion of selected templates\n     * and delete selected templates if user confirms.\n     */\n    public maybeCancelSubscription() {\n        this.modal.open(ConfirmModalComponent, {\n            title: 'Cancel Subscription',\n            body: 'Are you sure you want to cancel your subscription?',\n            ok: 'Yes, Cancel',\n            cancel: 'Go Back'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.cancelSubscription().subscribe(() => {\n                this.toast.open('Subscription cancelled.');\n            });\n        });\n    }\n\n    /**\n     * Resume cancelled subscription.\n     */\n    public resumeSubscription() {\n        this.loading$.next(true);\n        this.subscriptions.resume(this.activeSubscription$.value.id)\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.currentUser.setSubscription(response.subscription);\n                this.activeSubscription$.next(this.currentUser.getSubscription());\n                this.toast.open('Subscription resumed.');\n            });\n    }\n\n    /**\n     * Called after user payment method for active subscription has been changed successfully.\n     */\n    public onPaymentMethodChange(e: SubscriptionCompletedEvent) {\n        // if we've only changed customer card information on same\n        // payment gateway, show success message and bail\n        if (e.status === 'updated') {\n            this.toast.open('Payment method updated.');\n            return;\n        }\n\n        this.loading$.next(true);\n\n        // otherwise cancel user's subscription on the other gateway\n        this.cancelSubscription({delete: true}).subscribe(() => {\n            this.toast.open('Payment method updated.');\n        });\n    }\n\n    /**\n     * Cancel currently active user subscription.\n     */\n    private cancelSubscription(params: {delete?: boolean} = {}): Observable<{user: User}> {\n        this.loading$.next(true);\n\n        const request = this.subscriptions.cancel(this.activeSubscription$.value.id, {delete: params.delete})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .pipe(share());\n\n        request.subscribe(response => {\n            // set new active subscription, if user had more then one\n            this.updateUserAndSubscription(response.user);\n        });\n\n        return request;\n    }\n\n    /**\n     * Update current user and active subscription.\n     */\n    private updateUserAndSubscription(user: User) {\n        this.currentUser.assignCurrent(user);\n        this.activeSubscription$.next(this.currentUser.getSubscription());\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot} from '@angular/router';\nimport {map} from 'rxjs/operators';\nimport {ValueLists} from '../../core/services/value-lists.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CurrenciesListResolver implements Resolve<any> {\n    constructor(private valueLists: ValueLists) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<any> {\n        return this.valueLists.get(['currencies']).pipe(map(response => response.currencies)).toPromise();\n    }\n}\n\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\nimport {CurrentUser} from '../../auth/current-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserSubscribedGuard implements CanActivate, CanActivateChild {\n\n    constructor(private currentUser: CurrentUser, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    private handle() {\n        if (this.currentUser.isSubscribed()) { return true; }\n\n        this.router.navigate(['/billing/upgrade']);\n\n        return false;\n    }\n}","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {Invoice} from '@common/billing/invoices/invoice';\n\nconst BASE_URI = 'billing/invoice';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InvoiceService {\n    constructor(private http: AppHttpClient) {\n    }\n\n    public index(params: {userId?: number} = {}): BackendResponse<{invoices: Invoice[]}> {\n        return this.http.get(`${BASE_URI}`, params);\n    }\n}\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\n\n<div class=\"container\">\n    <h1 trans>Your Payment History</h1>\n\n    <table class=\"material-table\">\n        <thead>\n        <tr>\n            <th trans>Date</th>\n            <th trans>Amount</th>\n            <th trans>Status</th>\n            <th trans>Invoice</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let invoice of invoices$ | async\">\n            <td>{{invoice.created_at | formattedDate}}</td>\n            <td>{{invoice.subscription.plan.currency_symbol + invoice.subscription.plan.amount}}</td>\n            <td>{{invoice.paid ? 'Paid' : 'Pending'}}</td>\n            <td>\n                <a [href]=\"getInvoiceUrl(invoice)\" target=\"_blank\" trans>View</a>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <no-results-message svgImage=\"receipt.svg\" *ngIf=\"!(invoices$ | async).length && !(loading$ | async)\">\n        <span primary-text trans>You do not have any invoices yet.</span>\n    </no-results-message>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {InvoiceService} from '@common/billing/invoices/invoice.service';\nimport {Invoice} from '@common/billing/invoices/invoice';\nimport {BehaviorSubject} from 'rxjs';\nimport {Settings} from '@common/core/config/settings.service';\nimport {finalize} from 'rxjs/operators';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'invoice-index',\n    templateUrl: './invoice-index.component.html',\n    styleUrls: ['./invoice-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InvoiceIndexComponent implements OnInit {\n    public invoices$ = new BehaviorSubject<Invoice[]>([]);\n    public loading$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n       private invoices: InvoiceService,\n       public settings: Settings,\n       private currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.invoices.index({userId: this.currentUser.get('id')})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.invoices$.next(response.invoices);\n            });\n    }\n\n    public getInvoiceUrl(invoice: Invoice) {\n        return this.settings.getBaseUrl(true) + 'secure/billing/invoice/' + invoice.uuid;\n    }\n}\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'pricing-page',\n  templateUrl: './pricing-page.component.html',\n  styleUrls: ['./pricing-page.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PricingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<upgrade-page mode=\"pricing\"></upgrade-page>","import {Route, RouterModule} from '@angular/router';\nimport {UpgradePageComponent} from './upgrade-page/upgrade-page.component';\nimport {NgModule} from '@angular/core';\nimport {BillingPlansResolver} from './upgrade-page/billing-plans-resolver.service';\nimport {UserSubscriptionPageComponent} from './subscriptions/user-subscription-page/user-subscription-page.component';\nimport {CurrenciesListResolver} from './upgrade-page/currencies-list-resolver.service';\nimport {UserSubscribedGuard} from './guards/user-subscribed-guard.service';\nimport {AuthGuard} from '../guards/auth-guard.service';\nimport {BillingEnabledGuard} from '../shared/billing/guards/billing-enabled-guard.service';\nimport {InvoiceIndexComponent} from '@common/billing/invoices/invoice-index/invoice-index.component';\nimport {CheckPermissionsGuard} from '@common/guards/check-permissions-guard.service';\nimport {PricingPageComponent} from '@common/billing/pricing-page/pricing-page.component';\nimport {RedirectToUpgradePage} from '@common/billing/guards/redirect-to-upgrade-page.service';\n\nexport const routes: Route[] = [\n    {\n        path: 'pricing',\n        component: PricingPageComponent,\n        canActivate: [BillingEnabledGuard, RedirectToUpgradePage],\n        resolve: {\n            plans: BillingPlansResolver,\n            currencies: CurrenciesListResolver\n        }\n    },\n    {\n        path: '',\n        canActivate: [BillingEnabledGuard, AuthGuard, CheckPermissionsGuard],\n        canActivateChild: [CheckPermissionsGuard],\n        children: [\n            {\n                path: 'upgrade',\n                component: UpgradePageComponent,\n                resolve: {\n                    plans: BillingPlansResolver,\n                    currencies: CurrenciesListResolver\n                }\n            },\n            {\n                path: 'subscription',\n                component: UserSubscriptionPageComponent,\n                resolve: { plans: BillingPlansResolver },\n                canActivate: [UserSubscribedGuard],\n                data: { name: 'subscription' }\n            },\n            {\n                path: 'invoices',\n                component: InvoiceIndexComponent,\n                canActivate: [UserSubscribedGuard],\n            },\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BillingRoutingModule {}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {CurrentUser} from '../../auth/current-user';\nimport {AppearanceListenerService} from '../../shared/appearance/appearance-listener.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RedirectToUpgradePage implements CanActivate {\n    constructor(\n        private currentUser: CurrentUser,\n        private router: Router,\n        private listener: AppearanceListenerService,\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this.listener.active) {\n            return true;\n        }\n        if (this.currentUser.isSubscribed()) {\n            this.router.navigate(['billing/subscription']);\n            return false;\n        } else if (this.currentUser.isLoggedIn()) {\n            this.router.navigate(['billing/upgrade']);\n            return false;\n        }\n        return true;\n    }\n}\n","<div class=\"plans\" [class.has-recommended]=\"hasRecommendedPlan\">\n    <div class=\"plan\" *ngFor=\"let plan of getAllPlans(); last as last; first as first\" [class.recommended]=\"plan.recommended\" [class.last]=\"last\" [class.first]=\"first\">\n        <div class=\"name\">{{plan.name}}</div>\n        <div class=\"price-box\" *ngIf=\"!plan.free\">\n            <span class=\"number\">{{plan.amount | currency:plan.currency}}</span>\n            <span class=\"interval\"> / {{plan.interval | trans}}</span>\n        </div>\n        <div class=\"price-box\" *ngIf=\"plan.free\" trans>Free</div>\n        <plan-features-list [plan]=\"plan\"></plan-features-list>\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-raised-button color=\"accent\" *ngIf=\"plan.recommended\" [disabled]=\"userSubscribedToPlan(plan)\">\n            {{ selectPlanButtonText(plan) | trans }}\n        </button>\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-stroked-button color=\"accent\" *ngIf=\"!plan.recommended\" [disabled]=\"userSubscribedToPlan(plan)\">\n            {{ selectPlanButtonText(plan) | trans }}\n        </button>\n    </div>\n</div>\n","import {ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {SubscriptionStepperState} from '../../subscriptions/subscription-stepper-state.service';\nimport {Plan} from '@common/core/types/models/Plan';\nimport { CurrentUser } from '@common/auth/current-user';\n\n@Component({\n    selector: 'select-plan-panel',\n    templateUrl: './select-plan-panel.component.html',\n    styleUrls: ['./select-plan-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectPlanPanelComponent implements OnInit {\n    public hasRecommendedPlan = false;\n    @Output() selected = new EventEmitter();\n\n    constructor(\n        public state: SubscriptionStepperState,\n        public currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.hasRecommendedPlan = this.state.plans.filter(plan => plan.recommended).length > 0;\n    }\n\n    public selectPlan(plan: Plan) {\n        this.state.selectInitialPlan(plan);\n        // fire event on next render to avoid race conditions\n        setTimeout(() => this.selected.emit(plan));\n    }\n\n    public getAllPlans() {\n        return this.state.plans.filter(plan => !plan.parent_id && !plan.hidden);\n    }\n\n    public userSubscribedToPlan(plan: Plan): boolean {\n        if (this.state.mode !== 'pricing' && plan.free && !this.currentUser.model$?.value?.subscriptions?.length) {\n            return true;\n        }\n        return !!this.currentUser.getSubscription({planId: plan.id});\n    }\n\n    public selectPlanButtonText(plan: Plan) {\n        if (this.userSubscribedToPlan(plan)) {\n            return 'Your Current Plan';\n        } else if (plan.free && this.state.mode === 'pricing') {\n            return 'Get Started';\n        } else {\n            return 'Choose Plan';\n        }\n    }\n}\n","<div class=\"subscription-period-step step-container\" *ngIf=\"state.initialPlan$ | async as initialPlan\">\n    <div class=\"left-col\">\n        <div class=\"title\" trans>Select the duration of your plan. Longer plans offer better discounts!</div>\n        <mat-radio-group class=\"periods\" [(ngModel)]=\"state.radioGroupModel\" (change)=\"state.selectPlanById(state.radioGroupModel)\">\n            <div class=\"radio-button-wrapper no-label\">\n                <mat-radio-button [value]=\"initialPlan.id\" class=\"period\" color=\"accent\">\n                    <div class=\"radio-button-content\">\n                        <div class=\"name\">1 {{initialPlan.interval | trans}} {{ 'subscription' | trans }}:</div>\n                        <div class=\"price\">{{initialPlan.amount | currency:initialPlan.currency}}/{{initialPlan.interval | trans}}</div>\n                    </div>\n                </mat-radio-button>\n            </div>\n            <div class=\"radio-button-wrapper\" *ngFor=\"let plan of state.getChildPlans(initialPlan)\">\n                <ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\n                    <div class=\"savings-label\">{{'Save' | trans}} {{getPlanSavings(selectedPlan.parent || selectedPlan, plan)}}%</div>\n                </ng-container>\n                <mat-radio-button [value]=\"plan.id\" class=\"period\" color=\"accent\">\n                    <div class=\"radio-button-content\">\n                        <div class=\"name\">{{plan.name | trans}}:</div>\n                        <div class=\"price\">{{getAmountForSingleInterval(plan) | currency:plan.currency}}/{{(plan.interval || initialPlan.interval) | trans}}</div>\n                    </div>\n                </mat-radio-button>\n            </div>\n        </mat-radio-group>\n\n        <div class=\"actions\">\n            <button mat-button matStepperPrevious trans>Back</button>\n            <button mat-raised-button color=\"accent\" (click)=\"selected.emit()\">\n                {{ (state.mode === 'changePlan' ? 'Change Plan' : 'Select') | trans }}\n            </button>\n        </div>\n    </div>\n\n    <upgrade-page-aside *ngIf=\"showSidebar\" [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SubscriptionStepperState } from '../../subscriptions/subscription-stepper-state.service';\nimport { Plan } from '@common/core/types/models/Plan';\n\n@Component({\n    selector: 'select-plan-period-panel',\n    templateUrl: './select-plan-period-panel.component.html',\n    styleUrls: ['./select-plan-period-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectPlanPeriodPanelComponent {\n    @Input() showSidebar = false;\n    @Output() selected = new EventEmitter();\n\n    constructor(\n        public state: SubscriptionStepperState,\n    ) {}\n\n    public getPlanSavings(base: Plan, parent: Plan): number {\n        const baseAmount = this.getAmountPerDay(base);\n        const amount = this.getAmountPerDay(parent);\n        const savings = (baseAmount - amount) / baseAmount * 100;\n        return Math.ceil(savings);\n    }\n\n    private getAmountPerDay(plan: Plan) {\n        let days = 1;\n        if (plan.interval === 'week') {\n            days = 7;\n        } else if (plan.interval === 'month') {\n            days = 30;\n        } else if (plan.interval === 'year') {\n            days = 365;\n        }\n        days = days * plan.interval_count;\n        return plan.amount / days;\n    }\n\n    public getAmountForSingleInterval(plan: Plan) {\n        return plan.amount / plan.interval_count;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\nimport {CurrentUser} from '../../auth/current-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserNotSubscribedGuard implements CanActivate, CanActivateChild {\n\n    constructor(private currentUser: CurrentUser, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.handle();\n    }\n\n    private handle() {\n        if ( ! this.currentUser.isSubscribed()) { return true; }\n\n        this.router.navigate(['/billing/subscription']);\n\n        return false;\n    }\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\n\n@Component({\n    selector: 'contact-widget',\n    templateUrl: './contact-widget.component.html',\n    styleUrls: ['./contact-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactWidgetComponent {}\n","<mat-icon svgIcon=\"question-answer\" class=\"icon\"></mat-icon>\n\n<div class=\"title\" trans>Do you have any questions about PRO accounts?</div>\n<div class=\"subtitle\" trans>Our support team will be happy to assist you.</div>\n<a mat-raised-button color=\"accent\" target=\"_blank\" routerLink=\"/contact\" trans>Contact Us</a>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { UpgradePageComponent } from './upgrade-page/upgrade-page.component';\nimport { BillingPlansResolver } from './upgrade-page/billing-plans-resolver.service';\nimport { BillingRoutingModule } from './billing-routing.module';\nimport { PlanFeaturesListComponent } from './upgrade-page/plan-features-list/plan-features-list.component';\nimport { OrderSummaryComponent } from './upgrade-page/order-summary/order-summary.component';\nimport { AcceptedPaymentsHeaderComponent } from './upgrade-page/accepted-payments-header/accepted-payments-header.component';\nimport { UserSubscriptionPageComponent } from './subscriptions/user-subscription-page/user-subscription-page.component';\nimport { UpgradePageAsideComponent } from './upgrade-page/upgrade-page-aside/upgrade-page-aside.component';\nimport { CurrenciesListResolver } from './upgrade-page/currencies-list-resolver.service';\nimport { CreditCardFormComponent } from './credit-card-form/credit-card-form.component';\nimport { PaypalSubscriptions } from './subscriptions/paypal-subscriptions';\nimport { SelectPlanPanelComponent } from './plans/select-plan-panel/select-plan-panel.component';\nimport { SelectPlanPeriodPanelComponent } from './plans/select-plan-period-panel/select-plan-period-panel.component';\nimport { SubscriptionStepperState } from './subscriptions/subscription-stepper-state.service';\nimport { UserNotSubscribedGuard } from './guards/user-not-subscribed-guard.service';\nimport { UserSubscribedGuard } from './guards/user-subscribed-guard.service';\nimport { CreateSubscriptionPanelComponent } from './subscriptions/create-subscription-panel/create-subscription-panel.component';\nimport { ContactWidgetComponent } from './upgrade-page/contact-widget/contact-widget.component';\nimport { FullPlanNameModule } from '../shared/billing/full-plan-name/full-plan-name.module';\nimport { InvoiceIndexComponent } from '@common/billing/invoices/invoice-index/invoice-index.component';\nimport { PricingPageComponent } from './pricing-page/pricing-page.component';\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialNavbarModule,\n        BillingRoutingModule,\n        FullPlanNameModule,\n        TranslationsModule,\n        FormatPipesModule,\n        NoResultsMessageModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatSnackBarModule,\n        MatCheckboxModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatProgressBarModule,\n        MatTabsModule,\n        MatRadioModule,\n    ],\n    declarations: [\n        UpgradePageComponent,\n        PlanFeaturesListComponent,\n        OrderSummaryComponent,\n        AcceptedPaymentsHeaderComponent,\n        UserSubscriptionPageComponent,\n        UpgradePageAsideComponent,\n        CreditCardFormComponent,\n        CreateSubscriptionPanelComponent,\n        SelectPlanPanelComponent,\n        SelectPlanPeriodPanelComponent,\n        ContactWidgetComponent,\n        InvoiceIndexComponent,\n        PricingPageComponent,\n    ],\n    providers: [\n        BillingPlansResolver,\n        CurrenciesListResolver,\n        PaypalSubscriptions,\n        SubscriptionStepperState,\n        SubscriptionStepperState,\n        UserNotSubscribedGuard,\n        UserSubscribedGuard,\n    ],\n    exports: [\n        BillingRoutingModule,\n    ]\n})\nexport class BillingModule {\n}\n","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, ElementRef, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() { return this._selected; }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatRadioGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\n_MatRadioGroupBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n_MatRadioGroupBase.propDecorators = {\n    change: [{ type: Output }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return ɵMatRadioGroup_BaseFactory(t || MatRadioGroup); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatRadioGroup.propDecorators = {\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\n};\nconst ɵMatRadioGroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [\n                    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                    { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                ],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], null, { _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n    /** Whether this radio button is checked. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() { return this._value; }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    set color(newValue) { this._color = newValue; }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Focuses the radio button. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(String), ɵngcc0.ɵɵdirectiveInject(undefined)); };\n_MatRadioButtonBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: _MatRadioGroupBase },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String },\n    { type: undefined }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatRadioGroupBase }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String }, { type: undefined }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride);\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8)); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_GROUP,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_GROUP]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n\n//# sourceMappingURL=radio.js.map","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from '../../core/http/app-http-client.service';\nimport { PaginatedBackendResponse } from '../../core/types/pagination/paginated-backend-response';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { Plan } from '@common/core/types/models/Plan';\nimport { PaginationParams } from '@common/core/types/pagination/pagination-params';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Plans {\n    static BASE_URI = 'billing-plan';\n    constructor(private http: AppHttpClient) {}\n\n    public all(params?: PaginationParams): PaginatedBackendResponse<Plan> {\n        return this.http.get(Plans.BASE_URI, params);\n    }\n\n    public get(id: number): BackendResponse<{plan: Plan}> {\n        return this.http.get(`${Plans.BASE_URI}/${id}`);\n    }\n\n    public create(params: object): BackendResponse<{plan: Plan}> {\n        return this.http.post(Plans.BASE_URI, params);\n    }\n\n    public update(id: number, params: object): BackendResponse<{plan: Plan}> {\n        return this.http.put(`${Plans.BASE_URI}/${id}`, params);\n    }\n\n    public delete(ids: number[]): BackendResponse<void> {\n        return this.http.delete(`${Plans.BASE_URI}/${ids}`);\n    }\n\n    public sync(): BackendResponse<void> {\n        return this.http.post(`${Plans.BASE_URI}/sync`);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {FullPlanNameComponent} from './full-plan-name.component';\n\n@NgModule({\n    declarations: [\n        FullPlanNameComponent,\n    ],\n    exports: [\n        FullPlanNameComponent,\n    ]\n})\nexport class FullPlanNameModule {}\n","import {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\nimport {DatePipe} from '@angular/common';\nimport {Settings} from '../../config/settings.service';\n\n@Pipe({\n    name: 'formattedDate'\n})\nexport class FormattedDatePipe implements PipeTransform {\n    private readonly format: string;\n    private angularPipe: DatePipe;\n\n    constructor(private settings: Settings, @Inject(LOCALE_ID) private _locale: string) {\n        this.format = this.settings.get('dates.format', 'yyyy-MM-dd');\n        this.angularPipe = new DatePipe(_locale);\n    }\n\n    transform(value: any, format?: string, timezone?: string, locale?: string): string | null {\n        // slash as separator for date will cause parse errors\n        value = (value && typeof value === 'string') ? value.replace(/\\//g, '-') : value;\n        return this.angularPipe.transform(value, format || this.format, timezone, locale);\n    }\n}\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = ctx.$implicit; const i_r5 = ctx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, \n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    // TODO: Remove cast once https://github.com/angular/angular/pull/37506 is available.\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MAT_TAB_CONTENT, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n    /**\n     * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     */\n    _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const platform = this._platform;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n//# sourceMappingURL=tabs.js.map"]}