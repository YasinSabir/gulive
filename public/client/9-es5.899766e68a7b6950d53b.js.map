{"version":3,"sources":["webpack:///src/common/admin/analytics/components/analytics-host/analytics-host.component.html","webpack:///src/common/admin/analytics/components/analytics-host/analytics-host.component.ts","webpack:///src/common/admin/analytics/components/analytics-header/analytics-header.component.html","webpack:///src/common/admin/analytics/components/analytics-header/analytics-header.component.ts","webpack:///src/app/admin/analytics/click-analytics-host/click-analytics-host.component.html","webpack:///src/app/admin/analytics/click-analytics-host/click-analytics-host.component.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/monthly-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/browser-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/country-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/default-analytics.component.html","webpack:///src/app/admin/analytics/analytics-routing.module.ts","webpack:///src/common/admin/analytics/components/default-analytics/default-analytics.component.ts","webpack:///src/app/admin/analytics/analytics.module.ts","webpack:///src/common/admin/analytics/components/default-analytics/transformers/weekly-data-transformer.ts","webpack:///src/common/admin/analytics/components/default-analytics/utils/timestamp-to-day-name.ts"],"names":["AnalyticsHostComponent","settings","channels","this","get","filter","channel","condition","tooltipEl","document","querySelector","remove","AnalyticsHeaderComponent","ClickAnalyticsHostComponent","http","loading$","ReplaySubject","linkStats$","next","pipe","finalize","subscribe","response","headerData","mainData","transformMonthlyData","monthlyData","config","selector","type","LINE","labels","tooltip","data","current","forEach","monthData","key","push","pageViews","prevDay","previous","transformBrowserData","browserData","PIE","map","browser","sessions","legend","options","showLabel","donut","transformCountryData","countriesData","country","DefaultAnalyticsComponent","AnalyticsRoutingRoutingModule","AnalyticsModule","routes","path","component","children","redirectTo","chartHeight","charts","generateCharts","weeklyPageViews","dayData","timestamp","locale","Date","toLocaleDateString","weekday","date","monthlyPageViews","browsers","countries","forChild"],"mappings":"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","file":"x","sourcesContent":["<header *ngIf=\"channels && channels.length\">\n    <h1 trans>Analytics</h1>\n    <ul class=\"unstyled-list analytics-nav\">\n        <li class=\"analytics-nav-item\" *ngFor=\"let navItem of channels\">\n            <a mat-button routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" [routerLink]=\"[navItem.route]\" trans>{{navItem.name}}</a>\n        </li>\n    </ul>\n</header>\n\n<router-outlet></router-outlet>\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit} from '@angular/core';\nimport {Settings} from '@common/core/config/settings.service';\nimport {AnalyticsChannel} from '@common/core/config/app-config';\n\n@Component({\n    selector: 'analytics-host',\n    templateUrl: './analytics-host.component.html',\n    styleUrls: ['./analytics-host.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AnalyticsHostComponent implements OnInit, OnDestroy {\n    public channels: AnalyticsChannel[] = [];\n\n    constructor(\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.channels = (this.settings.get('vebto.admin.analytics.channels', []) as AnalyticsChannel[])\n            .filter(channel => {\n                return !channel.condition || this.settings.get(channel.condition);\n            });\n    }\n\n    ngOnDestroy() {\n        const tooltipEl = document.querySelector('.chartist-tooltip');\n        if (tooltipEl) {\n            tooltipEl.remove();\n        }\n    }\n}\n","<div class=\"stat\" *ngFor=\"let item of data\">\n    <mat-icon [svgIcon]=\"item.icon\"></mat-icon>\n    <div class=\"details\">\n        <div class=\"name\" trans>{{item.name}}</div>\n        <div class=\"count\" *ngIf=\"item.type === 'number'\">{{item.value | number}}</div>\n        <div class=\"count\" *ngIf=\"item.type === 'fileSize'\">{{item.value | formattedFileSize}}</div>\n    </div>\n</div>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {AnalyticsHeaderData} from '../../types/analytics-response';\n\n@Component({\n    selector: 'analytics-header',\n    templateUrl: './analytics-header.component.html',\n    styleUrls: ['./analytics-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AnalyticsHeaderComponent {\n    @Input() data: AnalyticsHeaderData[];\n}\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\n<analytics-header [data]=\"headerData\"></analytics-header>\n\n<click-charts [reports]=\"linkStats$ | async\" endpoint=\"admin/analytics/stats?channel=clicks\"></click-charts>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {AnalyticsHeaderData, AnalyticsResponse} from '@common/admin/analytics/types/analytics-response';\nimport {ReplaySubject} from 'rxjs';\nimport {HttpCacheClient} from '@common/core/http/http-cache-client';\nimport {finalize} from 'rxjs/operators';\nimport {LinkStats} from '../../../shared/link/link.service';\n\n@Component({\n    selector: 'click-analytics-host',\n    templateUrl: './click-analytics-host.component.html',\n    styleUrls: ['./click-analytics-host.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClickAnalyticsHostComponent implements OnInit {\n    public headerData: AnalyticsHeaderData[];\n    public loading$ = new ReplaySubject<boolean>(1);\n    public linkStats$ = new ReplaySubject<LinkStats>(1);\n\n    constructor(\n        private http: HttpCacheClient\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.http.get<AnalyticsResponse<LinkStats>>('admin/analytics/stats', {channel: 'clicks'})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.headerData = response.headerData;\n                this.linkStats$.next(response.mainData);\n            });\n    }\n}\n","import { MonthlyPageViews } from '../../../types/site-analytics-data';\nimport {ChartType, LineChartConfig} from '@common/shared/charts/base-chart';\n\nexport function transformMonthlyData(monthlyData: MonthlyPageViews): LineChartConfig {\n    const config = {\n        selector: '.monthly-chart',\n        type: ChartType.LINE,\n        labels: [],\n        tooltip: 'Pageviews',\n        data: [[], []]\n    } as LineChartConfig;\n\n    monthlyData && monthlyData.current.forEach((monthData, key) => {\n        // month numbers are returned 0 based from backend\n        config.labels.push('' + (key + 1));\n\n        // current month data\n        config.data[0].push(monthData.pageViews);\n\n        // previous month data\n        const prevDay = monthlyData.previous[key];\n        config.data[1].push(prevDay ? prevDay.pageViews : 0);\n    });\n\n    return config;\n}\n","import { BrowserData } from '../../../types/site-analytics-data';\nimport {ChartType, PieChartConfig} from '@common/shared/charts/base-chart';\n\nexport function transformBrowserData(browserData: BrowserData[] = []): PieChartConfig {\n    return {\n        type: ChartType.PIE,\n        tooltip: 'Number of sessions',\n        labels: browserData.map(data => data.browser),\n        data: browserData.map(data => data.sessions),\n        legend: false,\n        options: {\n            showLabel: true,\n            donut: true,\n        }\n    };\n}\n","import { CountryData } from '../../../types/site-analytics-data';\nimport {ChartType, PieChartConfig} from '@common/shared/charts/base-chart';\n\nexport function transformCountryData(countriesData: CountryData[] = []): PieChartConfig {\n    return {\n        selector: '.countries-chart',\n        type: ChartType.PIE,\n        tooltip: 'Number of sessions',\n        labels: countriesData.map(data => data.country),\n        data: countriesData.map(data => data.sessions),\n        options: {\n            showLabel: true,\n            donut: true,\n        }\n    };\n}\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\n<analytics-header [data]=\"headerData\"></analytics-header>\n\n<div class=\"content\">\n    <div class=\"chart-row\">\n        <div class=\"chart-wrapper\">\n            <chart [chartConfig]=\"charts?.weeklyPageViews\" [height]=\"chartHeight\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>This Week vs Last Week</div>\n                    <div class=\"subtitle\" trans>By page views</div>\n                </div>\n                <div class=\"chart-legend\">\n                    <div class=\"legend-item\" trans>This week</div>\n                    <div class=\"legend-item\" trans>Last week</div>\n                </div>\n            </chart>\n        </div>\n\n        <div class=\"chart-wrapper pie-wrapper\">\n            <chart [chartConfig]=\"charts?.browsers\" [height]=\"380\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>Top Browsers</div>\n                    <div class=\"subtitle\" trans>By sessions</div>\n                </div>\n            </chart>\n        </div>\n    </div>\n\n    <div class=\"chart-row\">\n        <div class=\"chart-wrapper\">\n            <chart [chartConfig]=\"charts?.monthlyPageViews\" [height]=\"chartHeight\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>This Month vs Last Month</div>\n                    <div class=\"subtitle\" trans>By page views</div>\n                </div>\n                <div class=\"chart-legend\">\n                    <div class=\"legend-item\" trans>This month</div>\n                    <div class=\"legend-item\" trans>Last month</div>\n                </div>\n            </chart>\n        </div>\n\n        <div class=\"chart-wrapper pie-wrapper\">\n            <chart [chartConfig]=\"charts?.countries\" [height]=\"380\">\n                <div class=\"chart-header\">\n                    <div class=\"title\" trans>Top Countries</div>\n                    <div class=\"subtitle\" trans>By sessions</div>\n                </div>\n            </chart>\n        </div>\n    </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AnalyticsHostComponent} from '@common/admin/analytics/components/analytics-host/analytics-host.component';\nimport {ClickAnalyticsHostComponent} from './click-analytics-host/click-analytics-host.component';\nimport {DefaultAnalyticsComponent} from '@common/admin/analytics/components/default-analytics/default-analytics.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AnalyticsHostComponent,\n        children: [\n            {path: '', redirectTo: 'links'},\n            {\n                path: 'links',\n                component: ClickAnalyticsHostComponent,\n            },\n            {\n                path: 'google',\n                component: DefaultAnalyticsComponent,\n            },\n        ],\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AnalyticsRoutingRoutingModule { }\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {SiteAnalyticsData} from '@common/admin/analytics/types/site-analytics-data';\nimport {transformWeeklyData} from '@common/admin/analytics/components/default-analytics/transformers/weekly-data-transformer';\nimport {transformMonthlyData} from '@common/admin/analytics/components/default-analytics/transformers/monthly-data-transformer';\nimport {transformBrowserData} from '@common/admin/analytics/components/default-analytics/transformers/browser-data-transformer';\nimport {transformCountryData} from '@common/admin/analytics/components/default-analytics/transformers/country-data-transformer';\nimport {ChartConfigs} from '@common/admin/analytics/types/chart-configs';\nimport {ReplaySubject} from 'rxjs';\nimport {AnalyticsHeaderData, AnalyticsResponse} from '@common/admin/analytics/types/analytics-response';\nimport {HttpCacheClient} from '@common/core/http/http-cache-client';\nimport {finalize} from 'rxjs/operators';\n\n@Component({\n    selector: 'default-analytics',\n    templateUrl: './default-analytics.component.html',\n    styleUrls: ['./default-analytics.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefaultAnalyticsComponent implements OnInit {\n    protected channel = 'default';\n    public readonly chartHeight = 400;\n    public headerData: AnalyticsHeaderData[];\n    public loading$ = new ReplaySubject<boolean>(1);\n    public charts: ChartConfigs;\n\n    constructor(\n        private http: HttpCacheClient\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.http.get<AnalyticsResponse>('admin/analytics/stats', {channel: this.channel})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.headerData = response.headerData;\n                this.charts = this.generateCharts(response.mainData);\n            });\n    }\n\n    private generateCharts(data: SiteAnalyticsData) {\n        return {\n            weeklyPageViews: transformWeeklyData(data.weeklyPageViews),\n            monthlyPageViews: transformMonthlyData(data.monthlyPageViews),\n            browsers: transformBrowserData(data.browsers),\n            countries: transformCountryData(data.countries)\n        };\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ChartsModule} from '@common/shared/charts/charts.module';\nimport {AnalyticsHostComponent} from '@common/admin/analytics/components/analytics-host/analytics-host.component';\nimport {DefaultAnalyticsComponent} from '@common/admin/analytics/components/default-analytics/default-analytics.component';\nimport {AnalyticsHeaderComponent} from '@common/admin/analytics/components/analytics-header/analytics-header.component';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {AnalyticsRoutingRoutingModule} from './analytics-routing.module';\nimport {ClickAnalyticsHostComponent} from './click-analytics-host/click-analytics-host.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {FormatPipesModule} from '@common/core/ui/format-pipes/format-pipes.module';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {ClickChartsModule} from '../../dashboard/click-charts/click-charts.module';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n    imports: [\n        AnalyticsRoutingRoutingModule,\n        CommonModule,\n        ChartsModule,\n        TranslationsModule,\n        FormatPipesModule,\n        ClickChartsModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatProgressBarModule,\n    ],\n    declarations: [\n        AnalyticsHostComponent,\n        AnalyticsHeaderComponent,\n        DefaultAnalyticsComponent,\n\n        // app\n        ClickAnalyticsHostComponent,\n    ]\n})\nexport class AnalyticsModule {\n}\n","import { WeeklyPageViews } from '../../../types/site-analytics-data';\nimport { timestampToDayName } from '../utils/timestamp-to-day-name';\nimport {ChartType, LineChartConfig} from '@common/shared/charts/base-chart';\n\nexport function transformWeeklyData(weeklyPageViews: WeeklyPageViews): LineChartConfig {\n    const config = {\n        type: ChartType.LINE,\n        labels: [],\n        tooltip: 'Pageviews',\n        data: [[], []]\n    } as LineChartConfig;\n\n    weeklyPageViews?.current?.forEach((dayData, key) => {\n        config.labels.push(timestampToDayName(dayData.date));\n\n        // current week data\n        config.data[0].push(dayData.pageViews);\n\n        // previous week data\n        config.data[1].push(weeklyPageViews.previous[key]?.pageViews || 0);\n    });\n\n    return config;\n}\n","export function timestampToDayName(timestamp: number, locale: string = 'en-US') {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleDateString(locale, {weekday: 'short'});\n}\n"]}